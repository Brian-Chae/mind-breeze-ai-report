import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '../../../components/ui/card';
import { Button } from '../../../components/ui/button';
import { Badge } from '../../../components/ui/badge';
import { 
  Download, 
  ArrowLeft, 
  Calendar, 
  User, 
  Briefcase, 
  Heart, 
  Brain, 
  Zap,
  FileText,
  CheckCircle,
  AlertCircle,
  Clock,
  ChevronDown,
  ChevronUp,
  Activity,
  Target,
  Shield,
  BarChart3,
  Users,
  TrendingUp,
  Flame,
  AlertTriangle,
  Loader2
} from 'lucide-react';
import { StoredReport } from '../services/ReportStorage';
import PDFReportService from '../services/PDFReportService';
import { toast } from 'sonner';
import { AIAnalysisMarkdownRenderer } from './AIAnalysisMarkdownRenderer';
import { GeminiAIService } from '../services/GeminiAIService';
import DetailedAnalysisSection from './DetailedAnalysisSection';
import OverallHealthReport from './report_segments/OverallHealthReport';
import EEGPPGDetailAnalysisReport from './report_segments/EEGPPGDetailAnalysisReport';
import MentalHealthRiskReport from './report_segments/MentalHealthRiskReport';

interface ReportDetailViewerProps {
  report: StoredReport;
  onBack: () => void;
  className?: string;
  
  // üÜï Ï¶âÏãú Î∂ÑÏÑùÏö© Ï∂îÍ∞Ä Í∏∞Îä•
  isCurrentAnalysis?: boolean; // Ï¶âÏãú Î∂ÑÏÑù vs Ï†ÄÏû•Îêú Î¶¨Ìè¨Ìä∏ Íµ¨Î∂Ñ
  showSaveButton?: boolean; // Ï†ÄÏû• Î≤ÑÌäº ÌëúÏãú Ïó¨Î∂Ä
  showShareButton?: boolean; // Í≥µÏú† Î≤ÑÌäº ÌëúÏãú Ïó¨Î∂Ä
  onSave?: () => void; // Ï†ÄÏû• ÏΩúÎ∞±
  onShare?: () => void; // Í≥µÏú† ÏΩúÎ∞±
  
  // üÜï Ï∂îÍ∞Ä Ïï°ÏÖò Î≤ÑÌäºÎì§
  showEEGButton?: boolean; // EEG ÏÉÅÏÑ∏ Î∂ÑÏÑù Î≤ÑÌäº
  showPPGButton?: boolean; // PPG ÏÉÅÏÑ∏ Î∂ÑÏÑù Î≤ÑÌäº
  onViewEEGAnalysis?: () => void; // EEG ÏÉÅÏÑ∏ Î∂ÑÏÑù ÏΩúÎ∞±
  onViewPPGAnalysis?: () => void; // PPG ÏÉÅÏÑ∏ Î∂ÑÏÑù ÏΩúÎ∞±
  
  // üÜï ÏÉÅÌÉú ÌëúÏãú
  isSaving?: boolean; // Ï†ÄÏû• Ï§ë ÏÉÅÌÉú
  saveSuccess?: boolean; // Ï†ÄÏû• ÏÑ±Í≥µ ÏÉÅÌÉú
}

interface ExpandedSections {
  overview: boolean;
  analysis: boolean;
  recommendations: boolean;
  mentalHealthRisk: boolean;
  medicalRiskAnalysis: boolean;
}

interface MentalHealthComprehensiveAnalysis {
  comprehensiveInterpretation: string;
  individualMetricsInterpretation: {
    focusIndex: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    relaxationIndex: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    stressIndex: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    cognitiveLoad: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    emotionalStability: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    hemisphericBalance: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    totalPower: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
  };
  ageSpecificAnalysis: {
    ageGroup: string;
    typicalCharacteristics: string;
    currentComparison: string;
    riskFactors: string[];
    strengths: string[];
  };
  genderSpecificAnalysis: {
    gender: string;
    brainPatternCharacteristics: string;
    hormonalInfluence: string;
    mentalHealthPatterns: string;
    managementPoints: string[];
  };
  occupationalAnalysis: {
    occupation: string;
    workRequirements: string;
    stressFactors: string[];
    brainFunctionMatch: string;
    workplaceRisks: string[];
    adaptationStrategies: string[];
  };
  mentalHealthRiskAssessment: {
    primaryRisks: string[];
    protectiveFactors: string[];
    immediateAttention: string[];
    longTermMonitoring: string[];
  };
  personalizedRecommendations: {
    immediate: string[];
    shortTerm: string[];
    longTerm: string[];
    occupationSpecific: string[];
  };
}

interface PhysicalHealthComprehensiveAnalysis {
  comprehensiveInterpretation: string;
  individualMetricsInterpretation: {
    heartRate: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    rmssd: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    sdnn: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    spo2: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
    lfHfRatio: {
      value: number;
      normalRange: string;
      status: string;
      interpretation: string;
      personalizedAdvice: string;
    };
  };
  ageSpecificAnalysis: {
    ageGroup: string;
    typicalCharacteristics: string;
    currentComparison: string;
    riskFactors: string[];
    strengths: string[];
  };
  genderSpecificAnalysis: {
    gender: string;
    cardiovascularCharacteristics: string;
    hormonalInfluence: string;
    healthPatterns: string;
    managementPoints: string[];
  };
  occupationalAnalysis: {
    occupation: string;
    workRequirements: string;
    stressFactors: string[];
    cardiovascularMatch: string;
    workplaceRisks: string[];
    adaptationStrategies: string[];
  };
  cardiovascularRiskAssessment: {
    primaryRisks: string[];
    protectiveFactors: string[];
    immediateAttention: string[];
    longTermMonitoring: string[];
  };
  personalizedRecommendations: {
    immediate: string[];
    shortTerm: string[];
    longTerm: string[];
    occupationSpecific: string[];
  };
}

const ReportDetailViewer: React.FC<ReportDetailViewerProps> = ({
  report,
  onBack,
  className = '',
  
  // üÜï Ï¶âÏãú Î∂ÑÏÑùÏö© Ï∂îÍ∞Ä Í∏∞Îä•
  isCurrentAnalysis = false,
  showSaveButton = false,
  showShareButton = false,
  onSave,
  onShare,
  
  // üÜï Ï∂îÍ∞Ä Ïï°ÏÖò Î≤ÑÌäºÎì§
  showEEGButton = false,
  showPPGButton = false,
  onViewEEGAnalysis,
  onViewPPGAnalysis,
  
  // üÜï ÏÉÅÌÉú ÌëúÏãú
  isSaving = false,
  saveSuccess = false
}) => {
  const [downloadingPDF, setDownloadingPDF] = useState(false);
  const [expandedSections, setExpandedSections] = useState<ExpandedSections>({
    overview: true,
    analysis: false,
    recommendations: false,
    mentalHealthRisk: false,
    medicalRiskAnalysis: false
  });
  const [mentalHealthComprehensive, setMentalHealthComprehensive] = useState<MentalHealthComprehensiveAnalysis | null>(null);
  const [loadingComprehensive, setLoadingComprehensive] = useState(false);
  const [physicalHealthComprehensive, setPhysicalHealthComprehensive] = useState<PhysicalHealthComprehensiveAnalysis | null>(null);
  const [loadingPhysicalComprehensive, setLoadingPhysicalComprehensive] = useState(false);
  const [stressComprehensive, setStressComprehensive] = useState<{
    comprehensiveInterpretation: string;
    ageSpecificAnalysis: {
      ageGroup: string;
      typicalCharacteristics: string;
      currentComparison: string;
      riskFactors: string[];
      strengths: string[];
    };
    genderSpecificAnalysis: {
      gender: string;
      stressPatternCharacteristics: string;
      hormonalInfluence: string;
      stressManagementPatterns: string;
      managementPoints: string[];
    };
    occupationalAnalysis: {
      occupation: string;
      workRequirements: string;
      stressFactors: string[];
      stressManagementMatch: string;
      workplaceRisks: string[];
      adaptationStrategies: string[];
    };
  } | null>(null);
  const [loadingStressComprehensive, setLoadingStressComprehensive] = useState(false);

  const { personalInfo, analysisResult } = report;

  // ÎáåÌåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù Î°úÎìú
  useEffect(() => {
    // üîß Ï¶âÏãú Î∂ÑÏÑùÏù∏ Í≤ΩÏö∞ÏóêÎßå AI Î∂ÑÏÑù Ïã§Ìñâ
    if (!isCurrentAnalysis) {
      console.log('üìã Ï†ÄÏû•Îêú Î¶¨Ìè¨Ìä∏ - ÎáåÌåå AI Î∂ÑÏÑù Í±¥ÎÑàÎúÄ');
      return;
    }

    const loadMentalHealthComprehensive = async () => {
      if (!analysisResult?.detailedAnalysis?.mentalHealth) return;
      
      try {
        setLoadingComprehensive(true);
        
        // detailedAnalysis.mentalHealthÎ•º MentalHealthReport ÌòïÌÉúÎ°ú Î≥ÄÌôò
        const mentalHealthReport = {
          score: analysisResult.detailedAnalysis.mentalHealth.score,
          status: analysisResult.detailedAnalysis.mentalHealth.status,
          analysis: analysisResult.detailedAnalysis.mentalHealth.analysis,
          keyMetrics: analysisResult.detailedAnalysis.mentalHealth.keyMetrics,
          recommendations: analysisResult.detailedAnalysis.mentalHealth.recommendations || [],
          concerns: [] // Í∏∞Î≥∏Í∞íÏúºÎ°ú Îπà Î∞∞Ïó¥ ÏÑ§Ï†ï
        };
        
        const comprehensiveAnalysis = await GeminiAIService.generateMentalHealthComprehensiveInterpretation(
          personalInfo,
          report.measurementData,
          mentalHealthReport
        );
        setMentalHealthComprehensive(comprehensiveAnalysis);
      } catch (error) {
        console.error('ÎáåÌåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù Î°úÎìú Ïã§Ìå®:', error);
        toast.error('ÎáåÌåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑùÏùÑ Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
      } finally {
        setLoadingComprehensive(false);
      }
    };

    loadMentalHealthComprehensive();
  }, [personalInfo, report.measurementData, analysisResult?.detailedAnalysis?.mentalHealth, isCurrentAnalysis]);

  // Îß•Ìåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù Î°úÎìú
  useEffect(() => {
    // üîß Ï¶âÏãú Î∂ÑÏÑùÏù∏ Í≤ΩÏö∞ÏóêÎßå AI Î∂ÑÏÑù Ïã§Ìñâ
    if (!isCurrentAnalysis) {
      console.log('üìã Ï†ÄÏû•Îêú Î¶¨Ìè¨Ìä∏ - Îß•Ìåå AI Î∂ÑÏÑù Í±¥ÎÑàÎúÄ');
      return;
    }

    const loadPhysicalHealthComprehensive = async () => {
      if (!analysisResult?.detailedAnalysis?.physicalHealth) return;
      
      try {
        setLoadingPhysicalComprehensive(true);
        
        // detailedAnalysis.physicalHealthÎ•º PhysicalHealthReport ÌòïÌÉúÎ°ú Î≥ÄÌôò
        const physicalHealthReport = {
          score: analysisResult.detailedAnalysis.physicalHealth.score,
          status: analysisResult.detailedAnalysis.physicalHealth.status,
          analysis: analysisResult.detailedAnalysis.physicalHealth.analysis,
          keyMetrics: analysisResult.detailedAnalysis.physicalHealth.keyMetrics,
          recommendations: analysisResult.detailedAnalysis.physicalHealth.recommendations || [],
          concerns: [] // Í∏∞Î≥∏Í∞íÏúºÎ°ú Îπà Î∞∞Ïó¥ ÏÑ§Ï†ï
        };
        
        const comprehensiveAnalysis = await GeminiAIService.generatePhysicalHealthComprehensiveInterpretation(
          personalInfo,
          report.measurementData,
          physicalHealthReport
        );
        setPhysicalHealthComprehensive(comprehensiveAnalysis);
      } catch (error) {
        console.error('Îß•Ìåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù Î°úÎìú Ïã§Ìå®:', error);
        toast.error('Îß•Ìåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑùÏùÑ Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
      } finally {
        setLoadingPhysicalComprehensive(false);
      }
    };

    loadPhysicalHealthComprehensive();
  }, [personalInfo, report.measurementData, analysisResult?.detailedAnalysis?.physicalHealth, isCurrentAnalysis]);

  // Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù Î°úÎìú
  useEffect(() => {
    // üîß Ï¶âÏãú Î∂ÑÏÑùÏù∏ Í≤ΩÏö∞ÏóêÎßå AI Î∂ÑÏÑù Ïã§Ìñâ
    if (!isCurrentAnalysis) {
      console.log('üìã Ï†ÄÏû•Îêú Î¶¨Ìè¨Ìä∏ - Ïä§Ìä∏Î†àÏä§ AI Î∂ÑÏÑù Í±¥ÎÑàÎúÄ');
      return;
    }

    const loadStressComprehensive = async () => {
      if (!analysisResult?.detailedAnalysis?.stressLevel) return;
      
      try {
        setLoadingStressComprehensive(true);
        
        // Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑùÏùÑ ÏúÑÌïú Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
        const stressReport = {
          score: analysisResult.detailedAnalysis.stressLevel.score,
          level: analysisResult.detailedAnalysis.stressLevel.level,
          eegStressIndex: report.measurementData.eegMetrics.stressIndex?.value || 0,
          heartRate: report.measurementData.ppgMetrics.heartRate?.value || 0,
          rmssd: report.measurementData.ppgMetrics.rmssd?.value || 0,
          lfHfRatio: report.measurementData.ppgMetrics.lfHfRatio?.value || 0,
          relaxationIndex: report.measurementData.eegMetrics.relaxationIndex?.value || 0
        };
        
        // ÏûÑÏãúÎ°ú Ï†ïÏ†Å Ïä§Ìä∏Î†àÏä§ Ï¢ÖÌï© Ìï¥ÏÑù ÏÉùÏÑ± (Ìñ•ÌõÑ AI ÏÑúÎπÑÏä§ Ïó∞Îèô ÏòàÏ†ï)
        const comprehensiveAnalysis = {
          comprehensiveInterpretation: `**${personalInfo.name}ÎãòÏùò Ïä§Ìä∏Î†àÏä§ ÏÉÅÌÉú Ï¢ÖÌï© Î∂ÑÏÑù**\n\n` +
            `Ï∏°Ï†ï Í≤∞Í≥º Ï†ÑÎ∞òÏ†ÅÏù∏ Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ Ï†êÏàòÎäî ${stressReport.score}Ï†êÏúºÎ°ú ${stressReport.level} ÏÉÅÌÉúÎ•º Î≥¥Ïù¥Í≥† ÏûàÏäµÎãàÎã§.\n\n` +
            `**Ï£ºÏöî Ïä§Ìä∏Î†àÏä§ ÏßÄÌëú Î∂ÑÏÑù:**\n\n` +
            `‚Ä¢ **ÎáåÌåå Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò**: ${stressReport.eegStressIndex.toFixed(2)} - ${stressReport.eegStressIndex >= 3.0 && stressReport.eegStressIndex <= 4.0 ? 'Ï†ïÏÉÅ Î≤îÏúÑ ÎÇ¥Ïùò Ï†ÅÏ†àÌïú Ï†ïÏã†Ï†Å Í∏¥Ïû• ÏÉÅÌÉú' : stressReport.eegStressIndex > 4.0 ? 'ÎÜíÏùÄ Ï†ïÏã†Ï†Å Ïä§Ìä∏Î†àÏä§ ÏÉÅÌÉúÎ°ú Ï£ºÏùò ÌïÑÏöî' : 'ÎÇÆÏùÄ Ï†ïÏã†Ï†Å ÌôúÏÑ±ÎèÑÎ°ú Í∞ÅÏÑ± ÏÉÅÌÉú Í∞úÏÑ† ÌïÑÏöî'}\n\n` +
            `‚Ä¢ **ÏûêÏú®Ïã†Í≤Ω Í∑†Ìòï**: LF/HF ÎπÑÏú® ${stressReport.lfHfRatio.toFixed(2)} - ${stressReport.lfHfRatio >= 1.0 && stressReport.lfHfRatio <= 10.0 ? 'ÍµêÍ∞êÏã†Í≤ΩÍ≥º Î∂ÄÍµêÍ∞êÏã†Í≤ΩÏùò Í∑†ÌòïÏù¥ Ï†ÅÏ†àÌûà Ïú†ÏßÄÎê®' : 'ÏûêÏú®Ïã†Í≤Ω Î∂àÍ∑†Ìòï ÏÉÅÌÉúÎ°ú Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ ÌïÑÏöî'}\n\n` +
            `‚Ä¢ **Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µÎ†•**: RMSSD ${stressReport.rmssd.toFixed(0)}ms - ${stressReport.rmssd >= 20 && stressReport.rmssd <= 50 ? 'ÏñëÌò∏Ìïú Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µ Îä•Î†•' : stressReport.rmssd > 50 ? 'Ïö∞ÏàòÌïú Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µ Îä•Î†•' : 'Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µ Îä•Î†• Í∞úÏÑ† ÌïÑÏöî'}\n\n` +
            `‚Ä¢ **Ïã¨Î∞ïÏàò Î∞òÏùë**: ${stressReport.heartRate.toFixed(0)}BPM - ${stressReport.heartRate >= 60 && stressReport.heartRate <= 100 ? 'Ï†ïÏÉÅ Î≤îÏúÑÏùò ÏïàÏ†ïÏ†ÅÏù∏ Ïã¨Î∞ïÏàò' : stressReport.heartRate > 100 ? 'ÎÜíÏùÄ Ïã¨Î∞ïÏàòÎ°ú Ïä§Ìä∏Î†àÏä§ Î∞òÏùë Ï¶ùÍ∞Ä' : 'ÎÇÆÏùÄ Ïã¨Î∞ïÏàò'}\n\n` +
            `**Í∞úÏù∏ ÌäπÏÑ± Í≥†Î†§ÏÇ¨Ìï≠:**\n\n` +
            `${personalInfo.age}ÏÑ∏ ${personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}Ïùò Í≤ΩÏö∞, Ìï¥Îãπ Ïó∞Î†πÎåÄÏùò ÏùºÎ∞òÏ†ÅÏù∏ Ïä§Ìä∏Î†àÏä§ Ìå®ÌÑ¥Í≥º ÎπÑÍµêÌïòÏó¨ ${stressReport.score >= 70 ? 'ÏñëÌò∏Ìïú Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ ÏÉÅÌÉú' : 'Í∞úÏÑ†Ïù¥ ÌïÑÏöîÌïú Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ ÏÉÅÌÉú'}Î•º Î≥¥Ïù¥Í≥† ÏûàÏäµÎãàÎã§.\n\n` +
            `**Ï¢ÖÌï© Í∂åÏû•ÏÇ¨Ìï≠:**\n\n` +
            `ÌòÑÏû¨ Ïä§Ìä∏Î†àÏä§ ÏÉÅÌÉúÎ•º Í≥†Î†§Ìï† Îïå, ${stressReport.score >= 80 ? 'ÌòÑÏû¨Ïùò Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ Î∞©ÏãùÏùÑ Ïú†ÏßÄÌïòÎêò ÏòàÎ∞©Ï†Å Í¥ÄÎ¶¨Ïóê ÏßëÏ§ë' : stressReport.score >= 60 ? 'ÏùºÎ∂Ä Ïä§Ìä∏Î†àÏä§ ÏßÄÌëú Í∞úÏÑ†ÏùÑ ÏúÑÌïú ÎßûÏ∂§Ìòï Í¥ÄÎ¶¨ Î∞©Ïïà Ï†ÅÏö©' : 'Ï¢ÖÌï©Ï†ÅÏù∏ Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ Ï†ÑÎûµ ÏàòÎ¶Ω Î∞è Ï†ÑÎ¨∏Ï†Å ÎèÑÏõÄ Í≥†Î†§'}ÌïòÎäî Í≤ÉÏù¥ Í∂åÏû•Îê©ÎãàÎã§.`,
          ageSpecificAnalysis: {
            ageGroup: `${personalInfo.age}ÏÑ∏`,
            typicalCharacteristics: `${personalInfo.age}ÏÑ∏ Ïó∞Î†πÎåÄÎäî ${personalInfo.gender === 'male' ? 'ÏßÅÏóÖÏ†Å Ï±ÖÏûÑÍ≥º ÏÇ¨ÌöåÏ†Å Ïó≠Ìï† Ï¶ùÍ∞ÄÎ°ú Ïù∏Ìïú Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨Í∞Ä Ï§ëÏöîÌïú' : 'Îã§ÏñëÌïú ÏÉùÌôú Î≥ÄÌôîÏôÄ Ìò∏Î•¥Î™¨ Î≥ÄÌôîÎ°ú Ïù∏Ìïú Ïä§Ìä∏Î†àÏä§ Ï†ÅÏùëÏù¥ ÌïÑÏöîÌïú'} ÏãúÍ∏∞ÏûÖÎãàÎã§.`,
            currentComparison: `ÌòÑÏû¨ Ïä§Ìä∏Î†àÏä§ ÏàòÏ§ÄÏùÄ Ìï¥Îãπ Ïó∞Î†πÎåÄ ÌèâÍ∑† ÎåÄÎπÑ ${stressReport.score >= 70 ? 'ÏñëÌò∏Ìïú' : 'Í∞úÏÑ†Ïù¥ ÌïÑÏöîÌïú'} ÏÉÅÌÉúÏûÖÎãàÎã§.`,
            riskFactors: stressReport.score < 60 ? ['ÎßåÏÑ± Ïä§Ìä∏Î†àÏä§ Ï∂ïÏ†Å', 'ÏûêÏú®Ïã†Í≤Ω Î∂àÍ∑†Ìòï', 'ÏàòÎ©¥ Ïßà Ï†ÄÌïò'] : ['ÏùºÏãúÏ†Å Ïä§Ìä∏Î†àÏä§ Ï¶ùÍ∞Ä'],
            strengths: stressReport.score >= 70 ? ['Ï†ÅÏ†àÌïú Ïä§Ìä∏Î†àÏä§ ÎåÄÏùë Îä•Î†•', 'ÏïàÏ†ïÏ†ÅÏù∏ ÏûêÏú®Ïã†Í≤Ω Í∏∞Îä•'] : ['Í∞úÏÑ† Í∞ÄÎä•ÏÑ± ÎÜíÏùå']
          },
          genderSpecificAnalysis: {
            gender: personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±',
            stressPatternCharacteristics: personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±ÏùÄ ÏùºÎ∞òÏ†ÅÏúºÎ°ú Î¨∏Ï†ú Ìï¥Í≤∞ Ï§ëÏã¨Ïùò Ïä§Ìä∏Î†àÏä§ ÎåÄÏùë Ìå®ÌÑ¥ÏùÑ Î≥¥ÏûÖÎãàÎã§.' : 'Ïó¨ÏÑ±ÏùÄ ÏùºÎ∞òÏ†ÅÏúºÎ°ú Í∞êÏ†ïÏ†Å ÏßÄÏßÄÏôÄ ÏÇ¨ÌöåÏ†Å Ïó∞Í≤∞ÏùÑ ÌÜµÌïú Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ Ìå®ÌÑ¥ÏùÑ Î≥¥ÏûÖÎãàÎã§.',
            hormonalInfluence: personalInfo.gender === 'male' ? 'ÌÖåÏä§ÌÜ†Ïä§ÌÖåÎ°† ÏàòÏ§ÄÏù¥ Ïä§Ìä∏Î†àÏä§ Î∞òÏùëÏóê ÏòÅÌñ•ÏùÑ ÎØ∏Ïπ©ÎãàÎã§.' : 'ÏóêÏä§Ìä∏Î°úÍ≤êÍ≥º ÌîÑÎ°úÍ≤åÏä§ÌÖåÎ°† Î≥ÄÌôîÍ∞Ä Ïä§Ìä∏Î†àÏä§ ÎØºÍ∞êÎèÑÏóê ÏòÅÌñ•ÏùÑ ÎØ∏Ïπ©ÎãàÎã§.',
            stressManagementPatterns: personalInfo.gender === 'male' ? 'Ïã†Ï≤¥ ÌôúÎèôÍ≥º Î™©Ìëú ÏßÄÌñ•Ï†Å ÌôúÎèôÏùÑ ÌÜµÌïú Ïä§Ìä∏Î†àÏä§ Ìï¥ÏÜåÍ∞Ä Ìö®Í≥ºÏ†ÅÏûÖÎãàÎã§.' : 'ÏÇ¨ÌöåÏ†Å ÏßÄÏßÄÏôÄ Í∞êÏ†ï ÌëúÌòÑÏùÑ ÌÜµÌïú Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨Í∞Ä Ï§ëÏöîÌï©ÎãàÎã§.',
            managementPoints: personalInfo.gender === 'male' ? ['Í∑úÏπôÏ†ÅÏù∏ Ïö¥Îèô', 'Î™ÖÌôïÌïú Î™©Ìëú ÏÑ§Ï†ï', 'Ï∑®ÎØ∏ ÌôúÎèô'] : ['ÏÇ¨ÌöåÏ†Å Ïó∞Í≤∞', 'Í∞êÏ†ï ÌëúÌòÑ', 'ÏûêÍ∏∞ ÎèåÎ¥Ñ']
          },
          occupationalAnalysis: {
            occupation: personalInfo.occupation,
            workRequirements: `${personalInfo.occupation} ÏßÅÍµ∞Ïùò ÌäπÏÑ±ÏÉÅ Îã§ÏñëÌïú ÏóÖÎ¨¥ Ïä§Ìä∏Î†àÏä§ ÏöîÏù∏Ïóê ÎÖ∏Ï∂úÎêòÏñ¥ ÏûàÏäµÎãàÎã§.`,
            stressFactors: personalInfo.occupation === 'developer' ? ['Ïû•ÏãúÍ∞Ñ Ïª¥Ìì®ÌÑ∞ ÏûëÏóÖ', 'ÏóÖÎ¨¥ ÏïïÎ∞ï', 'Í∏∞Ïà† Î≥ÄÌôî Ï†ÅÏùë'] : 
                          personalInfo.occupation === 'manager' ? ['ÏùòÏÇ¨Í≤∞Ï†ï Î∂ÄÎã¥', 'ÌåÄ Í¥ÄÎ¶¨', 'ÏÑ±Í≥º ÏïïÎ∞ï'] : 
                          ['ÏóÖÎ¨¥ ÏïïÎ∞ï', 'ÎåÄÏù∏Í¥ÄÍ≥Ñ', 'ÌôòÍ≤Ω Î≥ÄÌôî'],
            stressManagementMatch: `ÌòÑÏû¨ Ïä§Ìä∏Î†àÏä§ ÏàòÏ§ÄÏùÄ ÏóÖÎ¨¥ ÏàòÌñâÏóê ${stressReport.score >= 70 ? 'Ï†ÅÌï©Ìïú' : 'Í∞úÏÑ†Ïù¥ ÌïÑÏöîÌïú'} ÏÉÅÌÉúÏûÖÎãàÎã§.`,
            workplaceRisks: stressReport.score < 60 ? ['ÏóÖÎ¨¥ Ìö®Ïú®ÏÑ± Ï†ÄÌïò', 'ÏùòÏÇ¨Í≤∞Ï†ï Îä•Î†• Í∞êÏÜå', 'ÎåÄÏù∏Í¥ÄÍ≥Ñ Î¨∏Ï†ú'] : ['ÏùºÏãúÏ†Å Ïä§Ìä∏Î†àÏä§ Ï¶ùÍ∞Ä'],
            adaptationStrategies: ['ÏóÖÎ¨¥ Ïö∞ÏÑ†ÏàúÏúÑ ÏÑ§Ï†ï', 'Ìú¥Ïãù ÏãúÍ∞Ñ ÌôïÎ≥¥', 'Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ Í∏∞Î≤ï ÌôúÏö©']
          }
        };
        setStressComprehensive(comprehensiveAnalysis);
      } catch (error) {
        console.error('Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù Î°úÎìú Ïã§Ìå®:', error);
        toast.error('Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑùÏùÑ Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
      } finally {
        setLoadingStressComprehensive(false);
      }
    };

    loadStressComprehensive();
  }, [personalInfo, report.measurementData, analysisResult?.detailedAnalysis?.stressLevel, isCurrentAnalysis]);

  const handleDownloadPDF = async () => {
    try {
      setDownloadingPDF(true);
      const pdfService = PDFReportService.getInstance();
      const pdfBlob = await pdfService.generatePDFFromStoredReport(report);
      
      // PDF Îã§Ïö¥Î°úÎìú
      const url = URL.createObjectURL(pdfBlob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `AIÍ±¥Í∞ïÎ¶¨Ìè¨Ìä∏_${report.personalInfo.name}_${new Date(report.timestamp).toLocaleDateString('ko-KR').replace(/\./g, '')}.pdf`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
      
      toast.success('PDFÍ∞Ä Îã§Ïö¥Î°úÎìúÎêòÏóàÏäµÎãàÎã§.');
    } catch (error) {
      console.error('PDF Îã§Ïö¥Î°úÎìú Ïã§Ìå®:', error);
      toast.error('PDF Îã§Ïö¥Î°úÎìúÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
    } finally {
      setDownloadingPDF(false);
    }
  };

  const formatDate = (timestamp: number) => {
    const date = new Date(timestamp);
    return date.toLocaleDateString('ko-KR', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const getScoreColor = (score: number) => {
    if (score >= 80) return 'text-green-600';
    if (score >= 60) return 'text-blue-600';
    if (score >= 40) return 'text-orange-600';
    return 'text-red-600';
  };

  const getScoreBadgeColor = (score: number) => {
    if (score >= 80) return 'bg-green-100 text-green-700 border-green-300';
    if (score >= 60) return 'bg-blue-100 text-blue-700 border-blue-300';
    if (score >= 40) return 'bg-orange-100 text-orange-700 border-orange-300';
    return 'bg-red-100 text-red-700 border-red-300';
  };

  const getOccupationLabel = (occupation: string) => {
    const labels: { [key: string]: string } = {
      'teacher': 'ÍµêÏÇ¨',
      'military_medic': 'ÏùòÎ¨¥Î≥ëÏÇ¨',
      'military_career': 'ÏßÅÏóÖÍµ∞Ïù∏',
      'elementary': 'Ï¥àÎì±ÌïôÏÉù',
      'middle_school': 'Ï§ëÌïôÏÉù',
      'high_school': 'Í≥†Îì±ÌïôÏÉù',
      'university': 'ÎåÄÌïôÏÉù',
      'housewife': 'Ï†ÑÏóÖÏ£ºÎ∂Ä',
      'parent': 'ÌïôÎ∂ÄÎ™®',
      'firefighter': 'ÏÜåÎ∞©Í≥µÎ¨¥Ïõê',
      'police': 'Í≤ΩÏ∞∞Í≥µÎ¨¥Ïõê',
      'developer': 'Í∞úÎ∞úÏûê',
      'designer': 'ÎîîÏûêÏù¥ÎÑà',
      'office_worker': 'ÏùºÎ∞ò ÏÇ¨Î¨¥ÏßÅ',
      'manager': 'Í¥ÄÎ¶¨Ïûê',
      'general_worker': 'ÏùºÎ∞ò ÏßÅÏû•Ïù∏',
      'entrepreneur': 'ÏÇ¨ÏóÖÍ∞Ä',
      'other': 'Í∑∏Ïô∏'
    };
    return labels[occupation] || occupation;
  };

  // 5Îã®Í≥Ñ Î∂ÑÌè¨ ÌëúÏãú Ïª¥Ìè¨ÎÑåÌä∏
  const ScoreDistributionBar = ({ score, label, className = '' }: { score: number; label: string; className?: string }) => {
    const getScoreLevel = (score: number) => {
      if (score < 5) return { level: 'ÏúÑÌóò', color: 'text-red-600' };
      if (score < 25) return { level: 'Í≤ΩÍ≥Ñ', color: 'text-orange-600' };
      if (score < 75) return { level: 'Î≥¥ÌÜµ', color: 'text-yellow-600' };
      if (score < 95) return { level: 'ÏñëÌò∏', color: 'text-green-600' };
      return { level: 'Ïö∞Ïàò', color: 'text-blue-600' };
    };

    const { level, color } = getScoreLevel(score);

    return (
      <div className={`space-y-3 ${className}`}>
        <div className="flex items-center justify-between">
          <span className="text-base font-semibold text-gray-700">{label}</span>
          <span className={`text-xl font-bold ${color}`}>
            {score.toFixed(1)}/100
          </span>
        </div>
        <div className="space-y-2">
          <div className="relative">
            {/* Ï†ÑÏ≤¥ Íµ¨Í∞Ñ ÏÉâÏÉÅ ÌëúÏãú */}
            <div className="w-full h-4 rounded-lg overflow-hidden bg-gradient-to-r from-red-500 via-orange-400 via-yellow-400 via-green-400 to-blue-500">
              {/* Íµ¨Í∞Ñ Í≤ΩÍ≥ÑÏÑ† */}
              <div className="absolute top-0 left-[5%] w-px h-4 bg-white opacity-70"></div>
              <div className="absolute top-0 left-[25%] w-px h-4 bg-white opacity-70"></div>
              <div className="absolute top-0 left-[75%] w-px h-4 bg-white opacity-70"></div>
              <div className="absolute top-0 left-[95%] w-px h-4 bg-white opacity-70"></div>
            </div>
            
            {/* ÌòÑÏû¨ ÏúÑÏπò ÎßàÏª§ ÎùºÏù∏ */}
            <div 
              className="absolute top-0 w-0.5 h-4 bg-gray-900 rounded-sm transition-all duration-500"
              style={{ left: `${score}%`, transform: 'translateX(-50%)' }}
            />
            
            {/* ÌòÑÏû¨ ÏúÑÏπò ÌëúÏãúÏ†ê */}
            <div 
              className="absolute top-1/2 w-3 h-3 bg-white border-2 border-gray-900 rounded-full transition-all duration-500"
              style={{ left: `${score}%`, transform: 'translate(-50%, -50%)' }}
            />
            
            {/* Ï†êÏàò Î∞è ÏÉÅÌÉú Ìà¥ÌåÅ */}
            <div 
              className="absolute -top-12 bg-gray-800 text-white px-2 py-1 rounded text-xs font-semibold transition-all duration-500 whitespace-nowrap text-center"
              style={{ left: `${score}%`, transform: 'translateX(-50%)' }}
            >
              <div>{score.toFixed(1)}Ï†ê</div>
              <div>{level}</div>
              <div className="absolute top-full left-1/2 w-0 h-0 border-l-2 border-r-2 border-t-2 border-transparent border-t-gray-800" style={{ transform: 'translateX(-50%)' }}></div>
            </div>
          </div>
          
          {/* Íµ¨Í∞Ñ ÎùºÎ≤® */}
          <div className="flex justify-between text-sm text-gray-500 font-medium">
            <span>ÏúÑÌóò</span>
            <span>Í≤ΩÍ≥Ñ</span>
            <span>Î≥¥ÌÜµ</span>
            <span>ÏñëÌò∏</span>
            <span>Ïö∞Ïàò</span>
          </div>
        </div>
        <div className={`text-base font-semibold ${color}`}>
          ÏÉÅÌÉú: {level}
        </div>
      </div>
    );
  };

  // ÎáåÌåå ÏßÄÌëú 270ÎèÑ Í≤åÏù¥ÏßÄ Í∑∏ÎûòÌîÑ Ïª¥Ìè¨ÎÑåÌä∏
  const MentalHealthRiskChart = ({ value, label }: { 
    value: number; 
    label: string; 
  }) => {
    // Ï†ïÏã†Í±¥Í∞ï ÏúÑÌóòÎèÑ Íµ¨Í∞Ñ: 0-30 (Ï†ïÏÉÅ), 31-50 (Í≤ΩÍ≥Ñ), 51-100 (ÏúÑÌóò)
    const totalRange = 100;
    const normalMax = 30;
    const borderlineMax = 50;
    
    // 200ÎèÑ Í∞ÅÎèÑ Í≥ÑÏÇ∞
    const totalAngle = 200;
    const startAngle = 260;
    
    // Í∞Å Íµ¨Í∞ÑÏùò Í∞ÅÎèÑ Í≥ÑÏÇ∞ (ÎπÑÏú®Ïóê Îî∞Îùº)
    const normalAngle = (normalMax / totalRange) * totalAngle; // 30% = 60ÎèÑ
    const borderlineAngle = ((borderlineMax - normalMax) / totalRange) * totalAngle; // 20% = 40ÎèÑ  
    const riskAngle = ((totalRange - borderlineMax) / totalRange) * totalAngle; // 50% = 100ÎèÑ
    
    // ÌòÑÏû¨ Í∞íÏùò Í∞ÅÎèÑ Í≥ÑÏÇ∞
    const currentValueAngle = Math.min(totalAngle, Math.max(0, (value / totalRange) * totalAngle));
    
    // Í∑πÏ¢åÌëúÎ•º ÏßÅÍµêÏ¢åÌëúÎ°ú Î≥ÄÌôòÌïòÎäî Ìï®Ïàò
    const polarToCartesian = (centerX: number, centerY: number, radius: number, angleInDegrees: number) => {
      const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;
      return {
        x: centerX + (radius * Math.cos(angleInRadians)),
        y: centerY + (radius * Math.sin(angleInRadians))
      };
    };
    
    // Ìò∏ Í≤ΩÎ°ú ÏÉùÏÑ± Ìï®Ïàò
    const describeArc = (x: number, y: number, radius: number, startAngle: number, endAngle: number) => {
      const start = polarToCartesian(x, y, radius, endAngle);
      const end = polarToCartesian(x, y, radius, startAngle);
      const largeArcFlag = endAngle - startAngle <= 180 ? "0" : "1";
      return [
        "M", start.x, start.y, 
        "A", radius, radius, 0, largeArcFlag, 0, end.x, end.y
      ].join(" ");
    };

    const centerX = 50;
    const centerY = 50;
    const radius = 40;
    
    // Í∞Å Íµ¨Í∞ÑÏùò Í≤ΩÎ°ú ÏÉùÏÑ± (ÏïΩÍ∞ÑÏî© Í≤πÏπòÍ≤å ÌïòÏó¨ Í≤ΩÍ≥ÑÎ•º ÏßÅÏÑ†ÏúºÎ°ú ÎßåÎì§Í∏∞)
    const normalPath = describeArc(centerX, centerY, radius, startAngle, startAngle + normalAngle + 1);
    const borderlinePath = describeArc(centerX, centerY, radius, startAngle + normalAngle - 1, startAngle + normalAngle + borderlineAngle + 1);
    const riskPath = describeArc(centerX, centerY, radius, startAngle + normalAngle + borderlineAngle - 1, startAngle + totalAngle);
    
    // ÌòÑÏû¨ Í∞í ÎßàÏª§ ÏúÑÏπò
    const markerAngle = startAngle + currentValueAngle;
    const markerPos = polarToCartesian(centerX, centerY, radius, markerAngle);
    const markerPosInner = polarToCartesian(centerX, centerY, radius - 12, markerAngle);

    return (
      <div className="relative w-56 h-56 mx-auto">
        <svg className="w-56 h-56" viewBox="0 0 100 100">
          {/* Î∞∞Í≤Ω Ìò∏ */}
          <path
            d={describeArc(centerX, centerY, radius, startAngle, startAngle + totalAngle)}
            stroke="#f3f4f6"
            strokeWidth="12"
            fill="none"
            strokeLinecap="round"
          />
          
          {/* Ï†ïÏÉÅ Íµ¨Í∞Ñ (Ï¥àÎ°ùÏÉâ) - Î®ºÏ†Ä Í∑∏Î¶¨Í≥† ÏôºÏ™Ω ÎÅù round */}
          <path
            d={normalPath}
            stroke="#10b981"
            strokeWidth="12"
            fill="none"
            strokeLinecap="round"
          />
          
          {/* ÏúÑÌóò Íµ¨Í∞Ñ (Îπ®Í∞ÑÏÉâ) - Îëê Î≤àÏß∏Î°ú Í∑∏Î¶¨Í≥† Ïò§Î•∏Ï™Ω ÎÅù round */}
          <path
            d={riskPath}
            stroke="#ef4444"
            strokeWidth="12"
            fill="none"
            strokeLinecap="round"
          />
          
          {/* Í≤ΩÍ≥Ñ Íµ¨Í∞Ñ (ÎÖ∏ÎûÄÏÉâ) - Í∞ÄÏû• ÎßàÏßÄÎßâÏóê Í∑∏Î¶¨Í≥† buttÎ°ú Ï§ëÍ∞Ñ Í≤ΩÍ≥Ñ ÎçÆÏñ¥Ïì∞Í∏∞ */}
          <path
            d={borderlinePath}
            stroke="#eab308"
            strokeWidth="12"
            fill="none"
            strokeLinecap="butt"
          />
          
          {/* ÌòÑÏû¨ Í∞í ÎßàÏª§ */}
          <g>
            {/* ÎßàÏª§ ÎùºÏù∏ */}
            <line
              x1={markerPosInner.x}
              y1={markerPosInner.y}
              x2={markerPos.x}
              y2={markerPos.y}
              stroke="#1f2937"
              strokeWidth="4"
              strokeLinecap="round"
            />
            {/* ÎßàÏª§ Ï†ê */}
            <circle
              cx={markerPos.x}
              cy={markerPos.y}
              r="4"
              fill="#1f2937"
            />
          </g>
        </svg>
        
        {/* Ï§ëÏïô Í∞í ÌëúÏãú */}
        <div className="absolute inset-0 flex items-center justify-center">
          <div className="text-center mt-1">
            <div className="text-4xl font-bold text-gray-900 mb-2">
              {value.toFixed(0)}
            </div>
            {/* ÏÉÅÌÉú ÌëúÏãú - Chip ÌòïÌÉú */}
            <div className="mt-2">
              <Badge 
                variant="outline" 
                className={
                  value <= 30
                    ? 'bg-green-100 text-green-800 border-green-200' 
                    : value <= 50
                    ? 'bg-yellow-100 text-yellow-800 border-yellow-200'
                    : 'bg-red-100 text-red-800 border-red-200'
                }
              >
                {value <= 30 ? 'Ï†ïÏÉÅ' : value <= 50 ? 'Í≤ΩÍ≥Ñ' : 'ÏúÑÌóò'}
              </Badge>
            </div>
          </div>
        </div>
        
        {/* Î≤îÏúÑ ÎùºÎ≤® */}
        <div className="absolute bottom-10 left-0 right-0 flex justify-between text-sm text-gray-500 px-4">
          <span>Ï†ïÏÉÅ</span>
          <span>Í≤ΩÍ≥Ñ</span>
          <span>ÏúÑÌóò</span>
        </div>
      </div>
    );
  };

  const EEGMetricChart = ({ value, normalRange, label, unit = '', status, customLabels }: { 
    value: number; 
    normalRange: { min: number; max: number }; 
    label: string; 
    unit?: string;
    status: 'low' | 'normal' | 'high';
    customLabels?: { low: string; normal: string; high: string };
  }) => {
    // Ï†ÑÏ≤¥ Î≤îÏúÑ Í≥ÑÏÇ∞ (Ï†ïÏÉÅÎ≤îÏúÑ ÏïûÎí§Î°ú Ïó¨Ïú†Î∂Ñ Ï∂îÍ∞Ä)
    const rangeSpan = normalRange.max - normalRange.min;
    const minValue = normalRange.min - rangeSpan * 0.5; // Ï†ïÏÉÅ ÏµúÏÜåÍ∞íÎ≥¥Îã§ 50% ÎÇÆÍ≤å
    const maxValue = normalRange.max + rangeSpan * 0.5; // Ï†ïÏÉÅ ÏµúÎåÄÍ∞íÎ≥¥Îã§ 50% ÎÜíÍ≤å
    
    // 200ÎèÑ Í∞ÅÎèÑ Í≥ÑÏÇ∞
    const totalAngle = 200; // 200ÎèÑ
    const startAngle = 260; // ÏãúÏûë Í∞ÅÎèÑ (Ï†ïÏÉÅ Î≤îÏúÑ Í∞ÄÏö¥Îç∞Í∞Ä ÏúÑÏóê Ïò§ÎèÑÎ°ù Ï°∞Ï†ï)
    
    // Í∞Å Íµ¨Í∞ÑÏùò Í∞ÅÎèÑ Í≥ÑÏÇ∞
    const lowRangeAngle = ((normalRange.min - minValue) / (maxValue - minValue)) * totalAngle;
    const normalRangeAngle = ((normalRange.max - normalRange.min) / (maxValue - minValue)) * totalAngle;
    const highRangeAngle = ((maxValue - normalRange.max) / (maxValue - minValue)) * totalAngle;
    
    // ÌòÑÏû¨ Í∞íÏùò Í∞ÅÎèÑ Í≥ÑÏÇ∞
    const currentValueAngle = Math.min(totalAngle, Math.max(0, ((value - minValue) / (maxValue - minValue)) * totalAngle));
    
    // Í∑πÏ¢åÌëúÎ•º ÏßÅÍµêÏ¢åÌëúÎ°ú Î≥ÄÌôòÌïòÎäî Ìï®Ïàò
    const polarToCartesian = (centerX: number, centerY: number, radius: number, angleInDegrees: number) => {
      const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;
      return {
        x: centerX + (radius * Math.cos(angleInRadians)),
        y: centerY + (radius * Math.sin(angleInRadians))
      };
    };
    
    // Ìò∏ Í≤ΩÎ°ú ÏÉùÏÑ± Ìï®Ïàò
    const describeArc = (x: number, y: number, radius: number, startAngle: number, endAngle: number) => {
      const start = polarToCartesian(x, y, radius, endAngle);
      const end = polarToCartesian(x, y, radius, startAngle);
      const largeArcFlag = endAngle - startAngle <= 180 ? "0" : "1";
      return [
        "M", start.x, start.y, 
        "A", radius, radius, 0, largeArcFlag, 0, end.x, end.y
      ].join(" ");
    };

    const centerX = 50;
    const centerY = 50;
    const radius = 40;
    
    // Í∞Å Íµ¨Í∞ÑÏùò Í≤ΩÎ°ú ÏÉùÏÑ± (ÏïΩÍ∞ÑÏî© Í≤πÏπòÍ≤å ÌïòÏó¨ Í≤ΩÍ≥ÑÎ•º ÏßÅÏÑ†ÏúºÎ°ú ÎßåÎì§Í∏∞)
    const lowPath = describeArc(centerX, centerY, radius, startAngle, startAngle + lowRangeAngle + 1);
    const normalPath = describeArc(centerX, centerY, radius, startAngle + lowRangeAngle - 1, startAngle + lowRangeAngle + normalRangeAngle + 1);
    const highPath = describeArc(centerX, centerY, radius, startAngle + lowRangeAngle + normalRangeAngle - 1, startAngle + totalAngle);
    
    // ÌòÑÏû¨ Í∞í ÎßàÏª§ ÏúÑÏπò
    const markerAngle = startAngle + currentValueAngle;
    const markerPos = polarToCartesian(centerX, centerY, radius, markerAngle);
    const markerPosInner = polarToCartesian(centerX, centerY, radius - 12, markerAngle);

    return (
      <div className="relative w-full mx-auto">
        {/* Ï∞®Ìä∏ ÏòÅÏó≠ - viewBoxÎ•º Ï°∞Ï†ïÌïòÏó¨ ÌïòÎã® Îπà Í≥µÍ∞Ñ Ï†úÍ±∞ */}
        <div className="relative">
          <svg className="w-full" viewBox="0 0 100 65" style={{ height: 'auto', aspectRatio: '100/65' }}>
            {/* Î∞∞Í≤Ω Ìò∏ */}
            <path
              d={describeArc(centerX, centerY, radius, startAngle, startAngle + totalAngle)}
              stroke="#f3f4f6"
              strokeWidth="12"
              fill="none"
              strokeLinecap="round"
            />
            
            {/* ÎØ∏Îßå Íµ¨Í∞Ñ (ÎÖ∏ÎûÄÏÉâ) - Î®ºÏ†Ä Í∑∏Î¶¨Í≥† ÏôºÏ™Ω ÎÅù round */}
            <path
              d={lowPath}
              stroke="#eab308"
              strokeWidth="12"
              fill="none"
              strokeLinecap="round"
            />
            
            {/* Ï¥àÍ≥º Íµ¨Í∞Ñ (Îπ®Í∞ÑÏÉâ) - Îëê Î≤àÏß∏Î°ú Í∑∏Î¶¨Í≥† Ïò§Î•∏Ï™Ω ÎÅù round */}
            <path
              d={highPath}
              stroke="#ef4444"
              strokeWidth="12"
              fill="none"
              strokeLinecap="round"
            />
            
            {/* Ï†ïÏÉÅ Íµ¨Í∞Ñ (ÎÖπÏÉâ) - Í∞ÄÏû• ÎßàÏßÄÎßâÏóê Í∑∏Î¶¨Í≥† buttÎ°ú Ï§ëÍ∞Ñ Í≤ΩÍ≥Ñ ÎçÆÏñ¥Ïì∞Í∏∞ */}
            <path
              d={normalPath}
              stroke="#10b981"
              strokeWidth="12"
              fill="none"
              strokeLinecap="butt"
            />
            
            {/* ÌòÑÏû¨ Í∞í ÎßàÏª§ */}
            <g>
              {/* ÎßàÏª§ ÎùºÏù∏ */}
              <line
                x1={markerPosInner.x}
                y1={markerPosInner.y}
                x2={markerPos.x}
                y2={markerPos.y}
                stroke="#1f2937"
                strokeWidth="4"
                strokeLinecap="round"
              />
              {/* ÎßàÏª§ Ï†ê */}
              <circle
                cx={markerPos.x}
                cy={markerPos.y}
                r="4"
                fill="#1f2937"
              />
            </g>
          </svg>
          
          {/* Ï§ëÏïô Í∞í ÌëúÏãú - ÏÉàÎ°úÏö¥ Î†àÏù¥ÏïÑÏõÉ */}
          <div className="absolute inset-0 flex items-center justify-center">
            <div className="text-center mt-32">
              {/* Ï∏°Ï†ïÍ∞íÍ≥º Îã®ÏúÑ */}
              <div className="text-4xl font-bold text-gray-900 mb-1">
                {value.toFixed(value < 10 ? 2 : 1)}{unit && ` ${unit}`}
              </div>
              
              {/* Ï†ïÏÉÅ Î≤îÏúÑ ÌëúÏãú */}
              <div className="text-sm text-gray-600 mb-1">
                Ï†ïÏÉÅ : {normalRange.min.toFixed(normalRange.min < 1 ? 3 : normalRange.min < 10 ? 2 : 1)}{unit && ` ${unit}`} ~ {normalRange.max.toFixed(normalRange.max < 1 ? 3 : normalRange.max < 10 ? 2 : 1)}{unit && ` ${unit}`}
              </div>
              
              {/* ÏÉÅÌÉú ÌëúÏãú - Chip ÌòïÌÉú */}
              <div className="mt-2">
                <Badge 
                  variant="outline" 
                  className={
                    status === 'normal'
                      ? 'bg-green-100 text-green-800 border-green-200' 
                      : status === 'high'
                      ? 'bg-red-100 text-red-800 border-red-200'
                      : 'bg-yellow-100 text-yellow-800 border-yellow-200'
                  }
                >
                  {status === 'normal' ? 'Ï†ïÏÉÅ' : status === 'high' ? 'ÎÜíÏùå' : 'ÎÇÆÏùå'}
                </Badge>
              </div>
            </div>
          </div>
        </div>
        
        {/* Î≤îÏúÑ ÎùºÎ≤® - Ï∞®Ìä∏ Î∞îÎ°ú ÏïÑÎûòÏóê Î∞ÄÏ∞© */}
        <div className="flex justify-between text-sm text-gray-500 px-4 -mt-1">
          <span>{customLabels?.low || 'ÎØ∏Îßå'}</span>
          <span>{customLabels?.normal || 'Ï†ïÏÉÅ'}</span>
          <span>{customLabels?.high || 'Ï¥àÍ≥º'}</span>
        </div>
      </div>
    );
  };

  // ÎáåÌåå ÏßÄÌëú Îç∞Ïù¥ÌÑ∞ Ï†ïÏùò
  const eegMetrics = [
    {
      id: 'focusIndex',
      title: 'ÏßëÏ§ëÎ†• ÏßÄÏàò',
      subtitle: 'Focus Index',
      value: 2.02,
      normalRange: { min: 1.8, max: 2.4 },
      unit: '',
      status: 'normal' as const,
      normalRangeText: '1.8 - 2.4',
      currentState: 'ÏñëÌò∏',
      interpretation: 'ÌòÑÏû¨ ÏßëÏ§ëÎ†•Ïù¥ Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏúºÎ©∞, Ïù∏ÏßÄÏ†Å Ï£ºÏùòÎ†•Ïù¥ Ï†ÅÏ†àÌûà Ïú†ÏßÄÎêòÍ≥† ÏûàÏäµÎãàÎã§. ÏßÄÏÜçÏ†ÅÏù∏ ÏßëÏ§ë ÏÉÅÌÉúÎ•º Ïûò Ïú†ÏßÄÌïòÍ≥† ÏûàÏñ¥ ÌïôÏäµÏù¥ÎÇò ÏóÖÎ¨¥ Ìö®Ïú®ÏÑ±Ïù¥ ÎÜíÏùÑ Í≤ÉÏúºÎ°ú ÏòàÏÉÅÎê©ÎãàÎã§.'
    },
    {
      id: 'relaxationIndex',
      title: 'Ïù¥ÏôÑÎèÑ ÏßÄÏàò',
      subtitle: 'Relaxation Index',
      value: 0.20,
      normalRange: { min: 0.18, max: 0.22 },
      unit: '',
      status: 'normal' as const,
      normalRangeText: '0.18 - 0.22',
      currentState: 'ÏñëÌò∏',
      interpretation: 'Ï†ÅÏ†àÌïú Ïù¥ÏôÑ ÏÉÅÌÉúÎ•º Ïú†ÏßÄÌïòÍ≥† ÏûàÏñ¥ Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨Í∞Ä Ïûò ÎêòÍ≥† ÏûàÏäµÎãàÎã§. Ï†ïÏã†Ï†Å Ìú¥ÏãùÍ≥º ÌöåÎ≥µ Îä•Î†•Ïù¥ ÏñëÌò∏ÌïòÎ©∞, Í≥ºÎèÑÌïú Í∏¥Ïû• ÏóÜÏù¥ Ìé∏ÏïàÌïú ÏÉÅÌÉúÎ•º Ïú†ÏßÄÌïòÍ≥† ÏûàÏäµÎãàÎã§.'
    },
    {
      id: 'stressIndex',
      title: 'Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò',
      subtitle: 'Stress Index',
      value: 3.2,
      normalRange: { min: 2.0, max: 4.0 },
      unit: '',
      status: 'normal' as const,
      normalRangeText: '2.0 - 4.0',
      currentState: 'ÏñëÌò∏',
      interpretation: 'Ïä§Ìä∏Î†àÏä§ ÏàòÏ§ÄÏù¥ Ï†ïÏÉÅ Î≤îÏúÑ ÎÇ¥Ïóê ÏûàÏñ¥ Ï†ÅÏ†àÌïú Í∞ÅÏÑ± ÏÉÅÌÉúÎ•º Ïú†ÏßÄÌïòÍ≥† ÏûàÏäµÎãàÎã§. Í≥ºÎèÑÌïú Ïä§Ìä∏Î†àÏä§ÎÇò Í∏¥Ïû• ÏóÜÏù¥ ÏùºÏÉÅ ÌôúÎèôÏóê Ï†ÅÌï©Ìïú Ï†ïÏã†Ï†Å ÏÉÅÌÉúÎ•º Î≥¥Ïù¥Í≥† ÏûàÏäµÎãàÎã§.'
    },
    {
      id: 'hemisphericBalance',
      title: 'Ï¢åÏö∞Îáå Í∑†Ìòï',
      subtitle: 'Hemispheric Balance',
      value: -0.04,
      normalRange: { min: -0.1, max: 0.1 },
      unit: '',
      status: 'normal' as const,
      normalRangeText: '-0.1 ~ 0.1',
      currentState: 'Í∑†Ìòï',
      interpretation: 'Ï¢åÏö∞Îáå ÌôúÏÑ±ÎèÑÍ∞Ä Í∑†ÌòïÏùÑ Ïù¥Î£®Í≥† ÏûàÏñ¥ ÎÖºÎ¶¨Ï†Å ÏÇ¨Í≥†ÏôÄ Ï∞ΩÏùòÏ†Å ÏÇ¨Í≥†Í∞Ä Ï°∞ÌôîÎ°≠Í≤å ÏûëÏö©ÌïòÍ≥† ÏûàÏäµÎãàÎã§. Ïù∏ÏßÄÏ†Å Ï≤òÎ¶¨ Îä•Î†•Ïù¥ Í∑†ÌòïÏ†ÅÏúºÎ°ú Î∞úÎã¨ÎêòÏñ¥ ÏûàÎäî ÏÉÅÌÉúÏûÖÎãàÎã§.',
      customLabels: { low: 'Ïö∞ÎáåÏö∞ÏÑ∏', normal: 'Í∑†Ìòï', high: 'Ï¢åÎáåÏö∞ÏÑ∏' }
    },
    {
      id: 'cognitiveLoad',
      title: 'Ïù∏ÏßÄ Î∂ÄÌïò',
      subtitle: 'Cognitive Load',
      value: 0.55,
      normalRange: { min: 0.3, max: 0.8 },
      unit: '',
      status: 'normal' as const,
      normalRangeText: '0.3 - 0.8',
      currentState: 'Ï†ÅÏ†ï',
      interpretation: 'Ïù∏ÏßÄÏ†Å Î∂ÄÌïòÍ∞Ä Ï†ÅÏ†àÌïú ÏàòÏ§ÄÏóê ÏûàÏñ¥ Ï†ïÎ≥¥ Ï≤òÎ¶¨ Îä•Î†•Ïù¥ Ìö®Ïú®Ï†ÅÏúºÎ°ú ÏûëÎèôÌïòÍ≥† ÏûàÏäµÎãàÎã§. Í≥ºÎèÑÌïú Ïù∏ÏßÄÏ†Å Î∂ÄÎã¥ ÏóÜÏù¥ Î≥µÏû°Ìïú ÏÇ¨Í≥† Í≥ºÏ†ïÏùÑ ÏàòÌñâÌï† Ïàò ÏûàÎäî ÏÉÅÌÉúÏûÖÎãàÎã§.'
    },
    {
      id: 'totalPower',
      title: 'Ïã†Í≤Ω ÌôúÏÑ±ÎèÑ',
      subtitle: 'Total Power',
      value: 1020,
      normalRange: { min: 850, max: 1150 },
      unit: '¬µV¬≤',
      status: 'normal' as const,
      normalRangeText: '850 - 1150 ¬µV¬≤',
      currentState: 'ÏñëÌò∏',
      interpretation: 'Ï†ÑÏ≤¥Ï†ÅÏù∏ Îáå ÌôúÏÑ±ÎèÑÍ∞Ä Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏñ¥ Ïã†Í≤ΩÍ≥Ñ Í∏∞Îä•Ïù¥ Í±¥Í∞ïÌïòÍ≤å ÏûëÎèôÌïòÍ≥† ÏûàÏäµÎãàÎã§. Ï†ÅÏ†àÌïú Ïã†Í≤Ω ÌôúÎèô ÏàòÏ§ÄÏùÑ Ïú†ÏßÄÌïòÍ≥† ÏûàÏñ¥ Ïù∏ÏßÄ Í∏∞Îä•Í≥º Ï†ïÏÑú Ï°∞Ï†àÏù¥ ÏõêÌôúÌï©ÎãàÎã§.'
    }
  ];

  // ÏÉÅÌÉú ÌåêÎã® Ìï®Ïàò
  const getMetricStatus = (value: number, normalRange: { min: number; max: number }): 'low' | 'normal' | 'high' => {
    if (value < normalRange.min) return 'low';
    if (value > normalRange.max) return 'high';
    return 'normal';
  };

  // EEG ÏßÄÌëú Ïπ¥Îìú Î∞∞Í≤ΩÏÉâ Í≤∞Ï†ï Ìï®Ïàò
  const getEEGCardBackgroundClass = (status: 'low' | 'normal' | 'high') => {
    switch (status) {
      case 'normal':
        return 'bg-white border-gray-200';
      case 'low':
        return 'bg-yellow-50 border-yellow-200';
      case 'high':
        return 'bg-red-50 border-red-200';
      default:
        return 'bg-white border-gray-200';
    }
  };

  // PPG ÏßÄÌëú Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ Ìï®Ïàò (Ïã†Ï≤¥Í±¥Í∞ï Î∂ÑÏÑùÏö©)
  const preparePPGMetrics = () => {
    const ppgMetrics = [
      // Ï≤´ Î≤àÏß∏ Ìñâ: Ïã¨Î∞ïÏàò | ÏÇ∞ÏÜåÌè¨ÌôîÎèÑ
      {
        id: 'heartRate',
        title: 'Ïã¨Î∞ïÏàò',
        subtitle: 'Heart Rate',
        value: report.measurementData.ppgMetrics?.heartRate?.value || 79,
        normalRange: { min: 60, max: 100 },
        unit: 'BPM',
        status: getMetricStatus(report.measurementData.ppgMetrics?.heartRate?.value || 79, { min: 60, max: 100 }),
        normalRangeText: '60-100 BPM',
        currentState: 'Ï†ïÏÉÅ Î≤îÏúÑ - Í±¥Í∞ïÌïú Ïã¨Î∞ïÏàò',
        interpretation: physicalHealthComprehensive?.individualMetricsInterpretation?.heartRate?.interpretation || 
                        report.measurementData.ppgMetrics?.heartRate?.interpretation || 
                        'Ïã¨Ïû•Ïùò ÏàòÏ∂ï ÎπàÎèÑÎ°ú Ïã¨ÌòàÍ¥Ä Í±¥Í∞ïÍ≥º ÏûêÏú®Ïã†Í≤ΩÍ≥Ñ ÏÉÅÌÉúÎ•º Î∞òÏòÅÌï©ÎãàÎã§. ÌòÑÏû¨ Ïã¨Î∞ïÏàòÎäî Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏñ¥ Í±¥Í∞ïÌïú Ïã¨ÌòàÍ¥Ä Í∏∞Îä•ÏùÑ ÎÇòÌÉÄÎÉÖÎãàÎã§.',
        customLabels: { low: 'ÏÑúÎß•', normal: 'Ï†ïÏÉÅ', high: 'ÎπàÎß•' }
      },
      {
        id: 'spo2',
        title: 'ÏÇ∞ÏÜåÌè¨ÌôîÎèÑ',
        subtitle: 'SpO2',
        value: report.measurementData.ppgMetrics?.spo2?.value || 92,
        normalRange: { min: 95, max: 100 },
        unit: '%',
        status: getMetricStatus(report.measurementData.ppgMetrics?.spo2?.value || 92, { min: 95, max: 100 }),
        normalRangeText: '95-100%',
        currentState: 'Ï†ïÏÉÅ Î≤îÏúÑ ÎØ∏Îã¨ - ÏÇ∞ÏÜå Í≥µÍ∏â Î∂ÄÏ°± (ÏùòÎ£åÏßÑ ÏÉÅÎã¥ Í∂åÏû•)',
        interpretation: physicalHealthComprehensive?.individualMetricsInterpretation?.spo2?.interpretation || 
                        report.measurementData.ppgMetrics?.spo2?.interpretation || 
                        'ÌòàÏï° ÎÇ¥ ÏÇ∞ÏÜå Ìè¨ÌôîÎèÑÎ°ú Ìò∏Ìù° Î∞è ÏàúÌôò Í∏∞Îä•ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§. ÌòÑÏû¨ ÏàòÏπòÎäî Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏñ¥ Ï†ÅÏ†àÌïú ÏÇ∞ÏÜå Í≥µÍ∏âÏù¥ Ïù¥Î£®Ïñ¥ÏßÄÍ≥† ÏûàÏäµÎãàÎã§.',
        customLabels: { low: 'Î∂ÄÏ°±', normal: 'Ï†ïÏÉÅ', high: 'Í≥ºÌè¨Ìôî' }
      },
      // Îëê Î≤àÏß∏ Ìñâ: Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑ RMSSD | Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑ SDNN
      {
        id: 'rmssd',
        title: 'Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑ RMSSD',
        subtitle: 'RMSSD',
        value: report.measurementData.ppgMetrics?.rmssd?.value || 229,
        normalRange: { min: 20, max: 50 },
        unit: 'ms',
        status: getMetricStatus(report.measurementData.ppgMetrics?.rmssd?.value || 229, { min: 20, max: 50 }),
        normalRangeText: '20-50 ms',
        currentState: 'Ï†ïÏÉÅ Î≤îÏúÑ Ï¥àÍ≥º - Îß§Ïö∞ ÌôúÎ∞úÌïú Î∂ÄÍµêÍ∞êÏã†Í≤Ω ÌôúÎèô',
        interpretation: physicalHealthComprehensive?.individualMetricsInterpretation?.rmssd?.interpretation || 
                        report.measurementData.ppgMetrics?.rmssd?.interpretation || 
                        'Ïó∞ÏÜçÎêú Ïã¨Î∞ï Í∞ÑÍ≤©Ïùò Î≥ÄÏù¥Î•º Ï∏°Ï†ïÌïòÏó¨ Î∂ÄÍµêÍ∞êÏã†Í≤Ω ÌôúÏÑ±ÎèÑÏôÄ Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µ Îä•Î†•ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§. ÌòÑÏû¨ RMSSD ÏàòÏπòÎäî Ïö∞ÏàòÌïú ÏûêÏú®Ïã†Í≤Ω Í∑†ÌòïÏùÑ ÎÇòÌÉÄÎÉÖÎãàÎã§.',
        customLabels: { low: 'ÎÇÆÏùå', normal: 'ÏñëÌò∏', high: 'ÎÜíÏùå' }
      },
      {
        id: 'sdnn',
        title: 'Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑ SDNN',
        subtitle: 'SDNN',
        value: report.measurementData.ppgMetrics?.sdnn?.value || 188,
        normalRange: { min: 30, max: 100 },
        unit: 'ms',
        status: getMetricStatus(report.measurementData.ppgMetrics?.sdnn?.value || 188, { min: 30, max: 100 }),
        normalRangeText: '30-100 ms',
        currentState: 'Ï†ïÏÉÅ Î≤îÏúÑ Ï¥àÍ≥º - Îß§Ïö∞ ÎÜíÏùÄ ÏûêÏú®Ïã†Í≤Ω ÌôúÏÑ±ÎèÑ',
        interpretation: physicalHealthComprehensive?.individualMetricsInterpretation?.sdnn?.interpretation || 
                        report.measurementData.ppgMetrics?.sdnn?.interpretation || 
                        'Ï†ÑÏ≤¥ Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑÎ•º ÎÇòÌÉÄÎÇ¥Î©∞, ÏûêÏú®Ïã†Í≤ΩÍ≥ÑÏùò Ï†ÑÎ∞òÏ†ÅÏù∏ Í±¥Í∞ï ÏÉÅÌÉúÎ•º ÌèâÍ∞ÄÌï©ÎãàÎã§. ÌòÑÏû¨ SDNN ÏàòÏπòÎäî Îß§Ïö∞ Í±¥Í∞ïÌïú ÏûêÏú®Ïã†Í≤Ω Í∏∞Îä•ÏùÑ Î≥¥Ïó¨Ï§çÎãàÎã§.',
        customLabels: { low: 'ÎÇÆÏùå', normal: 'ÏñëÌò∏', high: 'ÎÜíÏùå' }
      },
      // ÏÑ∏ Î≤àÏß∏ Ìñâ: LF Power | HF Power
      {
        id: 'lfPower',
        title: 'LF Power',
        subtitle: 'Ï†ÄÏ£ºÌåå ÏÑ±Î∂Ñ',
        value: report.measurementData.ppgMetrics?.lfPower?.value || 14863.64,
        normalRange: { min: 500, max: 20000 },
        unit: 'ms¬≤',
        status: getMetricStatus(report.measurementData.ppgMetrics?.lfPower?.value || 14863.64, { min: 500, max: 20000 }),
        normalRangeText: '500-20000 ms¬≤',
        currentState: 'Ï†ïÏÉÅ Î≤îÏúÑ - ÏñëÌò∏Ìïú ÍµêÍ∞êÏã†Í≤Ω ÌôúÎèô',
        interpretation: report.measurementData.ppgMetrics?.lfPower?.interpretation || 
                        'ÍµêÍ∞êÏã†Í≤Ω ÌôúÏÑ±ÎèÑÎ•º Î∞òÏòÅÌïòÎ©∞, Ïä§Ìä∏Î†àÏä§ Î∞òÏùëÍ≥º ÌòàÏïï Ï°∞Ï†à Îä•Î†•ÏùÑ ÎÇòÌÉÄÎÉÖÎãàÎã§. ÌòÑÏû¨ LF PowerÎäî Í±¥Í∞ïÌïú ÍµêÍ∞êÏã†Í≤Ω Í∏∞Îä•ÏùÑ Î≥¥Ïó¨Ï§çÎãàÎã§.',
        customLabels: { low: 'ÎÇÆÏùå', normal: 'ÏñëÌò∏', high: 'ÎÜíÏùå' }
      },
      {
        id: 'hfPower',
        title: 'HF Power',
        subtitle: 'Í≥†Ï£ºÌåå ÏÑ±Î∂Ñ',
        value: report.measurementData.ppgMetrics?.hfPower?.value || 1708.49,
        normalRange: { min: 200, max: 5000 },
        unit: 'ms¬≤',
        status: getMetricStatus(report.measurementData.ppgMetrics?.hfPower?.value || 1708.49, { min: 200, max: 5000 }),
        normalRangeText: '200-5000 ms¬≤',
        currentState: 'Ï†ïÏÉÅ Î≤îÏúÑ - ÏñëÌò∏Ìïú Î∂ÄÍµêÍ∞êÏã†Í≤Ω ÌôúÎèô',
        interpretation: report.measurementData.ppgMetrics?.hfPower?.interpretation || 
                        'Î∂ÄÍµêÍ∞êÏã†Í≤Ω ÌôúÏÑ±ÎèÑÎ•º Î∞òÏòÅÌïòÎ©∞, Ìú¥Ïãù Î∞è ÌöåÎ≥µ Îä•Î†•ÏùÑ ÎÇòÌÉÄÎÉÖÎãàÎã§. ÌòÑÏû¨ HF PowerÎäî ÏñëÌò∏Ìïú Î∂ÄÍµêÍ∞êÏã†Í≤Ω Í∏∞Îä•ÏùÑ Î≥¥Ïó¨Ï§çÎãàÎã§.',
        customLabels: { low: 'ÎÇÆÏùå', normal: 'ÏñëÌò∏', high: 'ÎÜíÏùå' }
      },
      // ÎÑ§ Î≤àÏß∏ Ìñâ: ÏûêÏú®Ïã†Í≤Ω Í∑†Ìòï (Îã®ÎèÖ)
      {
        id: 'lfHfRatio',
        title: 'ÏûêÏú®Ïã†Í≤Ω Í∑†Ìòï',
        subtitle: 'LF/HF Ratio',
        value: report.measurementData.ppgMetrics?.lfHfRatio?.value || 8.70,
        normalRange: { min: 1.0, max: 10.0 },
        unit: '',
        status: getMetricStatus(report.measurementData.ppgMetrics?.lfHfRatio?.value || 8.70, { min: 1.0, max: 10.0 }),
        normalRangeText: '1.0-10.0',
        currentState: 'Ï†ïÏÉÅ Î≤îÏúÑ - Í∑†ÌòïÏû°Ìûå ÏûêÏú®Ïã†Í≤Ω ÌôúÎèô',
        interpretation: physicalHealthComprehensive?.individualMetricsInterpretation?.lfHfRatio?.interpretation || 
                        report.measurementData.ppgMetrics?.lfHfRatio?.interpretation || 
                        'ÍµêÍ∞êÏã†Í≤ΩÍ≥º Î∂ÄÍµêÍ∞êÏã†Í≤ΩÏùò Í∑†ÌòïÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞, Ïä§Ìä∏Î†àÏä§ ÎåÄÏùë Îä•Î†•ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§. ÌòÑÏû¨ ÏûêÏú®Ïã†Í≤Ω Í∑†ÌòïÏùÄ Ï†ÅÏ†àÌïú ÏÉÅÌÉúÎ•º Ïú†ÏßÄÌïòÍ≥† ÏûàÏäµÎãàÎã§.',
        customLabels: { low: 'Î∂ÄÍµêÍ∞êÏö∞ÏÑ∏', normal: 'Í∑†Ìòï', high: 'ÍµêÍ∞êÏö∞ÏÑ∏' }
      }
    ];

    return ppgMetrics;
  };

  return (
    <div className="min-h-screen bg-white">
      <div className="max-w-6xl mx-auto p-6 space-y-6">
        {/* Ìó§Îçî */}
        <div className="flex items-center justify-between mb-6 bg-white p-6 rounded-lg shadow-sm border">
          <div className="flex items-center gap-4">
            <Button
              onClick={onBack}
              variant="outline"
              className="flex items-center gap-2 border-gray-300 text-gray-700 hover:bg-gray-50 hover:border-gray-400"
            >
              <ArrowLeft className="h-4 w-4" />
              Î™©Î°ùÏúºÎ°ú
            </Button>
            <div>
              <h1 className="text-2xl font-bold text-gray-900">
                {personalInfo.name}ÎãòÏùò Í±¥Í∞ï Î¶¨Ìè¨Ìä∏
                {isCurrentAnalysis && (
                  <Badge className="ml-2 bg-green-100 text-green-800">
                    ÌòÑÏû¨ Î∂ÑÏÑù
                  </Badge>
                )}
              </h1>
              <div className="flex items-center gap-4 mt-2">
                <div className="flex items-center gap-2 text-gray-600">
                <Calendar className="h-4 w-4" />
                {formatDate(report.timestamp)}
              </div>
                <div className="flex items-center gap-2">
                  <Badge variant="outline" className="border-blue-300 text-blue-700 bg-blue-50">
                    {personalInfo.age}ÏÑ∏
                  </Badge>
                  <Badge variant="outline" className="border-green-300 text-green-700 bg-green-50">
                    {personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}
                  </Badge>
                  <Badge variant="outline" className="border-purple-300 text-purple-700 bg-purple-50">
                    {getOccupationLabel(personalInfo.occupation)}
                  </Badge>
            </div>
          </div>
            </div>
          </div>
          
          <div className="flex items-center gap-2">
            {/* üÜï EEG ÏÉÅÏÑ∏ Î∂ÑÏÑù Î≤ÑÌäº */}
            {showEEGButton && onViewEEGAnalysis && (
              <Button
                onClick={onViewEEGAnalysis}
                variant="outline"
                className="flex items-center gap-2 text-blue-600 border-blue-600 hover:bg-blue-50"
              >
                <Brain className="h-4 w-4" />
                EEG ÏÉÅÏÑ∏
              </Button>
            )}
            
            {/* üÜï PPG ÏÉÅÏÑ∏ Î∂ÑÏÑù Î≤ÑÌäº */}
            {showPPGButton && onViewPPGAnalysis && (
              <Button
                onClick={onViewPPGAnalysis}
                variant="outline"
                className="flex items-center gap-2 text-red-600 border-red-600 hover:bg-red-50"
              >
                <Heart className="h-4 w-4" />
                PPG ÏÉÅÏÑ∏
              </Button>
            )}
            
            {/* üÜï Ï†ÄÏû• Î≤ÑÌäº */}
            {showSaveButton && onSave && (
              <Button
                onClick={onSave}
                disabled={isSaving}
                className="flex items-center gap-2 bg-green-600 hover:bg-green-700 text-white"
              >
                {isSaving ? (
                  <>
                    <Loader2 className="h-4 w-4 animate-spin" />
                    Ï†ÄÏû• Ï§ë...
                  </>
                ) : (
                  <>
                    <FileText className="h-4 w-4" />
                    {saveSuccess ? 'Ï†ÄÏû•Îê®' : 'Ï†ÄÏû•'}
                  </>
                )}
              </Button>
            )}
            
            {/* üÜï Í≥µÏú† Î≤ÑÌäº */}
            {showShareButton && onShare && (
              <Button
                onClick={onShare}
                variant="outline"
                className="flex items-center gap-2"
              >
                <Users className="h-4 w-4" />
                Í≥µÏú†
              </Button>
            )}
            
          <Button
            onClick={handleDownloadPDF}
            disabled={downloadingPDF}
            className="flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white"
          >
            <Download className="h-4 w-4" />
            {downloadingPDF ? 'PDF ÏÉùÏÑ± Ï§ë...' : 'PDF Îã§Ïö¥Î°úÎìú'}
          </Button>
          </div>
        </div>

        {/* 1Îã®Í≥Ñ: Ï†ÑÏ≤¥ Í±¥Í∞ï Í∞úÏöî */}
        <OverallHealthReport
          report={report}
          analysisResult={analysisResult}
          isExpanded={expandedSections.overview}
          onToggleExpanded={() => setExpandedSections(prev => ({
            ...prev,
            overview: !prev.overview
          }))}
          EEGMetricChart={EEGMetricChart}
        />


        {/* 2Îã®Í≥Ñ: ÏÉÅÏÑ∏ Î∂ÑÏÑù Í≤∞Í≥º */}
        <EEGPPGDetailAnalysisReport
          report={report}
          analysisResult={analysisResult}
          isExpanded={expandedSections.analysis}
          onToggleExpanded={() => setExpandedSections(prev => ({
            ...prev,
            analysis: !prev.analysis
          }))}
          EEGMetricChart={EEGMetricChart}
          getScoreBadgeColor={getScoreBadgeColor}
          getOccupationLabel={getOccupationLabel}
          ScoreDistributionBar={ScoreDistributionBar}
          mentalHealthComprehensive={mentalHealthComprehensive}
          physicalHealthComprehensive={physicalHealthComprehensive}
          loadingComprehensive={loadingComprehensive}
          preparePPGMetrics={preparePPGMetrics}
          getMetricStatus={getMetricStatus}
          getEEGCardBackgroundClass={getEEGCardBackgroundClass}
        />
          
          {expandedSections.analysis && (
            <CardContent className="p-6 bg-white">
              <div className="space-y-8">


                {/* Í∏∞Ï°¥ Î∂ÑÏÑù Í≤∞Í≥ºÎì§ */}
                <div className="grid grid-cols-1 gap-6">
                  {/* Ï†ïÏã†Í±¥Í∞ï Î∂ÑÏÑù */}
                  {analysisResult.detailedAnalysis?.mentalHealth && (
                    <Card className="bg-gray-50 border-gray-200">
                      <CardHeader>
                        <CardTitle className="flex items-center gap-2 text-gray-900">
                          <Brain className="w-5 h-5 text-purple-600" />
                          üß† ÎáåÌåå Î∂ÑÏÑù Í≤∞Í≥º
                        </CardTitle>
                      </CardHeader>
                      <CardContent className="space-y-8">
                        
                        {/* 1. Ï†ïÏã† Í±¥Í∞ï Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            ÎáåÌåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù
                          </h3>
                          
                          <div className="bg-white p-4 rounded-lg border border-gray-200">
                            <div className="flex items-center justify-between mb-4">
                              <div>
                                <div className="text-sm text-purple-600 font-medium mb-1">
                                  ÎáåÌåå Í∏∞Î∞ò Ï†ïÏã†Í±¥Í∞ï Ï†êÏàò
                                </div>
                                <div className="text-2xl font-bold text-gray-900">
                                  {analysisResult.detailedAnalysis.mentalHealth.score}Ï†ê
                                </div>
                              </div>
                              <div>
                                <Badge className={getScoreBadgeColor(analysisResult.detailedAnalysis.mentalHealth.score)}>
                                  {analysisResult.detailedAnalysis.mentalHealth.status}
                                </Badge>
                              </div>
                            </div>
                            
                            {/* Ï†êÏàò Î∂ÑÌè¨ ÌëúÏãú */}
                            <ScoreDistributionBar 
                              score={analysisResult.detailedAnalysis.mentalHealth.score} 
                              label="Ï†ïÏã†Í±¥Í∞ï Ï†êÏàò"
                            />
                            
                            <div className="mt-4 prose prose-sm max-w-none prose-gray">
                              <h4 className="text-base font-semibold text-gray-900 mb-2">Ìï¥ÏÑù</h4>
                              {loadingComprehensive ? (
                                <div className="flex items-center gap-2 p-4 bg-gray-50 rounded-lg">
                                  <Loader2 className="w-4 h-4 animate-spin text-gray-500" />
                                  <span className="text-sm text-gray-600">Ï†ïÏã†Í±¥Í∞ï Ï¢ÖÌï© Ìï¥ÏÑùÏùÑ Î∂ÑÏÑùÌïòÍ≥† ÏûàÏäµÎãàÎã§...</span>
                                </div>
                              ) : mentalHealthComprehensive ? (
                                <AIAnalysisMarkdownRenderer content={mentalHealthComprehensive.comprehensiveInterpretation} />
                              ) : (
                                <AIAnalysisMarkdownRenderer content={
                                  // Í∏∞Î≥∏ Îáå Í∏∞Îä• Î∂ÄÎ∂ÑÎßå Ï∂îÏ∂úÌïòÏó¨ Í∞ÑÎã®Ìïú Ï¢ÖÌï© Ìï¥ÏÑù Ï†úÍ≥µ
                                  `üß† **Îáå Í∏∞Îä• Ï¢ÖÌï© Î∂ÑÏÑù**\n\nÏßëÏ§ëÎ†• ÏßÄÏàò ${report.measurementData.eegMetrics.focusIndex?.value?.toFixed(3) || 'N/A'}ÏôÄ Ïù¥ÏôÑÎèÑ ${report.measurementData.eegMetrics.relaxationIndex?.value?.toFixed(3) || 'N/A'}Îäî ÌòÑÏû¨ Îáå Í∏∞Îä•Ïù¥ ÏñëÌò∏ÌïòÍ≤å Ïú†ÏßÄÎêòÍ≥† ÏûàÏùåÏùÑ Î≥¥Ïó¨Ï£ºÎÇò, Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò ${report.measurementData.eegMetrics.stressIndex?.value?.toFixed(3) || 'N/A'}Í≥º Ïù∏ÏßÄ Î∂ÄÌïò ${report.measurementData.eegMetrics.cognitiveLoad?.value?.toFixed(3) || 'N/A'}Îäî Ï†ïÏã†Ï†Å Í∏¥Ïû•Í≥º Îáå ÌôúÎèôÎüâ Ï¶ùÍ∞ÄÎ•º ÎÇòÌÉÄÎÉÖÎãàÎã§. Ï†ïÏÑú ÏïàÏ†ïÏÑ± ${report.measurementData.eegMetrics.emotionalStability?.value?.toFixed(3) || 'N/A'}ÏùÄ Í∞êÏ†ï Ï°∞Ï†à Îä•Î†•Ïù¥ ÎπÑÍµêÏ†Å Ïûò Ïú†ÏßÄÎêòÍ≥† ÏûàÏùåÏùÑ ÏãúÏÇ¨Ìï©ÎãàÎã§.`
                                } />
                              )}
                            </div>
                          </div>
                        </div>

                        {/* 2. Í∞úÏù∏ÌôîÎêú Ï†ïÏã† Í±¥Í∞ï ÌèâÍ∞Ä */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Í∞úÏù∏ÌôîÎêú ÎáåÌåå Î∂ÑÏÑù ÌèâÍ∞Ä
                          </h3>
                          
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {/* Ïó∞Î†πÎ≥Ñ/ÏÑ±Î≥ÑÎ≥Ñ ÌäπÏÑ±Î∂ÑÏÑù */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Users className="w-4 h-4 text-blue-600" />
                                Ïó∞Î†πÎ≥Ñ/ÏÑ±Î≥ÑÎ≥Ñ ÌäπÏÑ±Î∂ÑÏÑù
                              </h4>
                              <div className="space-y-3 text-sm text-gray-600">
                                <div className="flex justify-between">
                                  <span>Ïó∞Î†πÎåÄ:</span>
                                  <span className="font-medium">{report.personalInfo.age}ÏÑ∏</span>
                                </div>
                                <div className="flex justify-between">
                                  <span>ÏÑ±Î≥Ñ:</span>
                                  <span className="font-medium">{report.personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}</span>
                                </div>
                                <div className="mt-3 p-3 bg-blue-50 rounded-lg">
                                  {loadingComprehensive ? (
                                    <div className="flex items-center gap-2">
                                      <Loader2 className="w-3 h-3 animate-spin text-blue-600" />
                                      <span className="text-sm text-blue-800">Î∂ÑÏÑù Ï§ë...</span>
                                    </div>
                                  ) : mentalHealthComprehensive ? (
                                    <div className="space-y-2">
                                      <div>
                                        <h5 className="text-xs font-medium text-blue-900 mb-1">Ïó∞Î†πÎåÄ ÌäπÏÑ±:</h5>
                                        <p className="text-sm text-blue-800">{mentalHealthComprehensive.ageSpecificAnalysis.currentComparison}</p>
                                      </div>
                                      <div>
                                        <h5 className="text-xs font-medium text-blue-900 mb-1">ÏÑ±Î≥Ñ ÌäπÏÑ±:</h5>
                                        <p className="text-sm text-blue-800">{mentalHealthComprehensive.genderSpecificAnalysis.brainPatternCharacteristics}</p>
                                      </div>
                                    </div>
                                  ) : (
                                    <p className="text-sm text-blue-800">
                                      {/* AI Î∂ÑÏÑù Í≤∞Í≥ºÏóêÏÑú Ïó∞Î†πÎ≥Ñ/ÏÑ±Î≥ÑÎ≥Ñ ÌäπÏÑ± Î∂ÑÏÑù */}
                                      {analysisResult.personalContext?.personalizedMessage || 
                                       analysisResult.overallAssessment?.personalizedInterpretation ||
                                       `${report.personalInfo.age}ÏÑ∏ ${report.personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}Ïùò ÎáåÌåå Ìå®ÌÑ¥ÏùÑ Î∂ÑÏÑùÌïú Í≤∞Í≥º, Ìï¥Îãπ Ïó∞Î†πÎåÄÏôÄ ÏÑ±Î≥ÑÏùò ÏùºÎ∞òÏ†ÅÏù∏ ÌäπÏÑ±ÏùÑ Í≥†Î†§ÌïòÏó¨ Í∞úÏù∏ÌôîÎêú Ï†ïÏã†Í±¥Í∞ï ÌèâÍ∞ÄÎ•º Ï†úÍ≥µÌï©ÎãàÎã§.`}
                                    </p>
                                  )}
                                </div>
                              </div>
                            </div>

                            {/* ÏßÅÏóÖÏ†Å ÌäπÏÑ± Î∂ÑÏÑù */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Briefcase className="w-4 h-4 text-green-600" />
                                ÏßÅÏóÖÏ†Å ÌäπÏÑ± Î∂ÑÏÑù
                              </h4>
                              <div className="space-y-3 text-sm text-gray-600">
                                <div className="flex justify-between">
                                  <span>ÏßÅÏóÖ:</span>
                                  <span className="font-medium">{getOccupationLabel(report.personalInfo.occupation)}</span>
                                </div>
                                <div className="mt-3 p-3 bg-green-50 rounded-lg">
                                  {loadingComprehensive ? (
                                    <div className="flex items-center gap-2">
                                      <Loader2 className="w-3 h-3 animate-spin text-green-600" />
                                      <span className="text-sm text-green-800">Î∂ÑÏÑù Ï§ë...</span>
                                    </div>
                                  ) : mentalHealthComprehensive ? (
                                    <div className="space-y-2">
                                      <div>
                                        <h5 className="text-xs font-medium text-green-900 mb-1">ÏóÖÎ¨¥ ÌäπÏÑ±:</h5>
                                        <p className="text-sm text-green-800">{mentalHealthComprehensive.occupationalAnalysis.workRequirements}</p>
                                      </div>
                                      <div>
                                        <h5 className="text-xs font-medium text-green-900 mb-1">ÌòÑÏû¨ Ï†ÅÌï©ÏÑ±:</h5>
                                        <p className="text-sm text-green-800">{mentalHealthComprehensive.occupationalAnalysis.brainFunctionMatch}</p>
                                      </div>
                                      
                                      {/* ÏßÅÏóÖÎ≥Ñ ÎßûÏ∂§ Ï†ÑÎûµ */}
                                      {mentalHealthComprehensive.personalizedRecommendations?.occupationSpecific?.length > 0 && (
                                        <div className="mt-3 pt-3 border-t border-green-200">
                                          <h5 className="text-xs font-medium text-green-900 mb-2">ÏßÅÏóÖÎ≥Ñ ÎßûÏ∂§ Ï†ÑÎûµ:</h5>
                                          <ul className="space-y-1">
                                            {mentalHealthComprehensive.personalizedRecommendations.occupationSpecific.slice(0, 2).map((strategy, index) => (
                                              <li key={index} className="text-xs text-green-700 flex items-start gap-1">
                                                <span className="text-green-500 mt-0.5">‚Ä¢</span>
                                                <span>{strategy}</span>
                                              </li>
                                            ))}
                                          </ul>
                                        </div>
                                      )}
                                    </div>
                                  ) : (
                                    <div>
                                      <p className="text-sm text-green-800">
                                        {/* AI Î∂ÑÏÑù Í≤∞Í≥ºÏóêÏÑú ÏßÅÏóÖÎ≥Ñ ÌäπÏÑ± Î∂ÑÏÑù */}
                                        {analysisResult.personalizedRecommendations?.occupationSpecific?.workplaceStrategies?.length > 0 ? 
                                          `${getOccupationLabel(report.personalInfo.occupation)} ÏßÅÏóÖÏùò ÌäπÏÑ±ÏùÑ Í≥†Î†§Ìïú ÎßûÏ∂§Ìòï Ï†ïÏã†Í±¥Í∞ï Î∂ÑÏÑùÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§. ÏßÅÏóÖÏ†Å Ïä§Ìä∏Î†àÏä§ ÏöîÏù∏Í≥º ÏóÖÎ¨¥ ÌôòÍ≤ΩÏùÑ Î∞òÏòÅÌïú Í∞úÏù∏ÌôîÎêú Í±¥Í∞ï Í¥ÄÎ¶¨ Î∞©ÏïàÏùÑ Ï†úÏãúÌï©ÎãàÎã§.` :
                                          `${getOccupationLabel(report.personalInfo.occupation)} ÏßÅÏóÖÍµ∞Ïùò ÌäπÏÑ±ÏùÑ Í≥†Î†§Ìïú ÎßûÏ∂§Ìòï Ï†ïÏã†Í±¥Í∞ï Î∂ÑÏÑù Í≤∞Í≥ºÏûÖÎãàÎã§.`}
                                      </p>
                                      
                                      {/* ÏßÅÏóÖÎ≥Ñ ÎßûÏ∂§ Ï†ÑÎûµÏù¥ ÏûàÎäî Í≤ΩÏö∞ ÌëúÏãú */}
                                      {analysisResult.personalizedRecommendations?.occupationSpecific?.workplaceStrategies?.length > 0 && (
                                        <div className="mt-3 pt-3 border-t border-green-200">
                                          <h5 className="text-xs font-medium text-green-900 mb-2">ÏßÅÏóÖÎ≥Ñ ÎßûÏ∂§ Ï†ÑÎûµ:</h5>
                                          <ul className="space-y-1">
                                            {analysisResult.personalizedRecommendations.occupationSpecific.workplaceStrategies.slice(0, 2).map((strategy, index) => (
                                              <li key={index} className="text-xs text-green-700 flex items-start gap-1">
                                                <span className="text-green-500 mt-0.5">‚Ä¢</span>
                                                <span>{strategy}</span>
                                              </li>
                                            ))}
                                          </ul>
                                        </div>
                                      )}
                                    </div>
                                  )}
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* 3. ÎáåÌåå ÏßÄÌëú ÏÉÅÏÑ∏ Ìï¥ÏÑù */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            ÎáåÌåå ÏßÄÌëú ÏÉÅÏÑ∏ Ìï¥ÏÑù
                          </h3>
                          
                          {/* 2x3 Í∑∏Î¶¨Îìú */}
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {/* ÏßëÏ§ëÎ†• ÏßÄÏàò */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.eegMetrics.focusIndex?.value || 0) >= 1.8 && 
                              (report.measurementData.eegMetrics.focusIndex?.value || 0) <= 2.4 ? 'normal' : 
                              (report.measurementData.eegMetrics.focusIndex?.value || 0) < 1.8 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      ÏßëÏ§ëÎ†• ÏßÄÏàò
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Focus Index</p>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-1">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96">
                                    <EEGMetricChart
                                      value={report.measurementData.eegMetrics.focusIndex?.value || 0}
                                      normalRange={{ min: 1.8, max: 2.4 }}
                                      label="ÏßëÏ§ëÎ†• ÏßÄÏàò"
                                      unit=""
                                      status={
                                        (report.measurementData.eegMetrics.focusIndex?.value || 0) >= 1.8 && 
                                        (report.measurementData.eegMetrics.focusIndex?.value || 0) <= 2.4 ? 'normal' : 
                                        (report.measurementData.eegMetrics.focusIndex?.value || 0) > 2.4 ? 'high' : 'low'
                                      }
                                    />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-200 pt-2 mt-2">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                      <p className="text-sm text-gray-600 leading-relaxed">
                                        {mentalHealthComprehensive?.individualMetricsInterpretation?.focusIndex?.interpretation || 
                                         analysisResult.detailedAnalysis.mentalHealth.keyMetrics.concentration ||
                                         "Î≤†ÌÉÄÌåå Í∏∞Î∞ò ÏßëÏ§ëÎ†• ÏßÄÏàò 2.02: Î≤†ÌÉÄÌåå Í∏∞Î∞ò Ï£ºÏùò ÏßëÏ§ë Îä•Î†•Ïù¥ Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏñ¥ Ïù∏ÏßÄ Ï≤òÎ¶¨ Í≥ºÏ†ïÏù¥ ÏñëÌò∏ÌïòÍ≤å Ïú†ÏßÄÎêòÍ≥† ÏûàÏäµÎãàÎã§. ÏóÖÎ¨¥ÎÇò ÌïôÏäµ Ïãú Ï†ÅÏ†àÌïú ÏßëÏ§ëÎ†•ÏùÑ Î∞úÌúòÌï† Ïàò ÏûàÎäî ÏÉÅÌÉúÏûÖÎãàÎã§."}
                                      </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ïù¥ÏôÑÎèÑ ÏßÄÏàò */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.eegMetrics.relaxationIndex?.value || 0) >= 0.18 && 
                              (report.measurementData.eegMetrics.relaxationIndex?.value || 0) <= 0.22 ? 'normal' : 
                              (report.measurementData.eegMetrics.relaxationIndex?.value || 0) < 0.18 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ïù¥ÏôÑÎèÑ ÏßÄÏàò
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Relaxation Index</p>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-1">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96">
                                    <EEGMetricChart
                                      value={report.measurementData.eegMetrics.relaxationIndex?.value || 0}
                                      normalRange={{ min: 0.18, max: 0.22 }}
                                      label="Ïù¥ÏôÑÎèÑ ÏßÄÏàò"
                                      unit=""
                                      status={
                                        (report.measurementData.eegMetrics.relaxationIndex?.value || 0) >= 0.18 && 
                                        (report.measurementData.eegMetrics.relaxationIndex?.value || 0) <= 0.22 ? 'normal' : 
                                        (report.measurementData.eegMetrics.relaxationIndex?.value || 0) > 0.22 ? 'high' : 'low'
                                      }
                                    />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-200 pt-2 mt-2">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                      <p className="text-sm text-gray-600 leading-relaxed">
                                        {mentalHealthComprehensive?.individualMetricsInterpretation?.relaxationIndex?.interpretation || 
                                         analysisResult.detailedAnalysis.mentalHealth.keyMetrics.relaxation ||
                                         "Ïù¥ÏôÑÎèÑ 0.214: ÏïåÌååÌåå Í∏∞Î∞ò Ï†ïÏã†Ï†Å Ïù¥ÏôÑ Îä•Î†•Ïù¥ Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏñ¥ Ïä§Ìä∏Î†àÏä§ Ìï¥ÏÜå Î∞è Ï†ïÏã†Ï†Å ÏïàÏ†ï ÏÉÅÌÉúÎ•º Ï†ÅÏ†àÌûà Ïú†ÏßÄÌïòÍ≥† ÏûàÏäµÎãàÎã§. Ìú¥Ïãù Ïãú Ìö®Í≥ºÏ†ÅÏù∏ Ïù¥ÏôÑÏù¥ Í∞ÄÎä•Ìïú ÏÉÅÌÉúÏûÖÎãàÎã§."}
                                      </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.eegMetrics.stressIndex?.value || 0) >= 0.3 && 
                              (report.measurementData.eegMetrics.stressIndex?.value || 0) <= 0.7 ? 'normal' : 
                              (report.measurementData.eegMetrics.stressIndex?.value || 0) < 0.3 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Stress Index</p>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-1">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96">
                                    <EEGMetricChart
                                      value={report.measurementData.eegMetrics.stressIndex?.value || 0}
                                      normalRange={{ min: 0.3, max: 0.7 }}
                                      label="Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò"
                                      unit=""
                                      status={
                                        (report.measurementData.eegMetrics.stressIndex?.value || 0) >= 0.3 && 
                                        (report.measurementData.eegMetrics.stressIndex?.value || 0) <= 0.7 ? 'normal' : 
                                        (report.measurementData.eegMetrics.stressIndex?.value || 0) > 0.7 ? 'high' : 'low'
                                      }
                                    />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-200 pt-2 mt-2">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                      <p className="text-sm text-gray-600 leading-relaxed">
                                        {mentalHealthComprehensive?.individualMetricsInterpretation?.stressIndex?.interpretation || 
                                         report.measurementData.eegMetrics.stressIndex?.interpretation || 
                                         'Î≤†ÌÉÄÌååÏôÄ Í∞êÎßàÌååÏùò ÎπÑÏú®ÏùÑ ÌÜµÌï¥ Ï†ïÏã†Ï†Å Ïä§Ìä∏Î†àÏä§ ÏàòÏ§ÄÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§. ÌòÑÏû¨ Ïä§Ìä∏Î†àÏä§ ÏßÄÏàòÎäî Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏñ¥ Ï†ÅÏ†àÌïú Í∏¥Ïû• ÏÉÅÌÉúÎ•º Ïú†ÏßÄÌïòÍ≥† ÏûàÏäµÎãàÎã§.'}
                                      </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ïù∏ÏßÄ Î∂ÄÌïò */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.eegMetrics.cognitiveLoad?.value || 0) >= 0.4 && 
                              (report.measurementData.eegMetrics.cognitiveLoad?.value || 0) <= 0.8 ? 'normal' : 
                              (report.measurementData.eegMetrics.cognitiveLoad?.value || 0) < 0.4 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ïù∏ÏßÄ Î∂ÄÌïò
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Cognitive Load</p>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-1">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96">
                                    <EEGMetricChart
                                      value={report.measurementData.eegMetrics.cognitiveLoad?.value || 0}
                                      normalRange={{ min: 0.4, max: 0.8 }}
                                      label="Ïù∏ÏßÄ Î∂ÄÌïò"
                                      unit=""
                                      status={
                                        (report.measurementData.eegMetrics.cognitiveLoad?.value || 0) >= 0.4 && 
                                        (report.measurementData.eegMetrics.cognitiveLoad?.value || 0) <= 0.8 ? 'normal' : 
                                        (report.measurementData.eegMetrics.cognitiveLoad?.value || 0) > 0.8 ? 'high' : 'low'
                                      }
                                    />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-200 pt-2 mt-2">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                      <p className="text-sm text-gray-600 leading-relaxed">
                                        {mentalHealthComprehensive?.individualMetricsInterpretation?.cognitiveLoad?.interpretation || 
                                         analysisResult.detailedAnalysis.mentalHealth.keyMetrics.cognitiveLoad ||
                                         'Ïù∏ÏßÄ Î∂ÄÌïò ÏàòÏ§ÄÏùÑ ÌÜµÌï¥ ÎáåÏùò Ï†ïÎ≥¥ Ï≤òÎ¶¨ Í≥ºÎ∂ÄÌïò Ï†ïÎèÑÎ•º ÌèâÍ∞ÄÌï©ÎãàÎã§. ÌòÑÏû¨ Ïù∏ÏßÄ Î∂ÄÌïòÎäî Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏñ¥ Ï†ÅÏ†àÌïú Ï†ïÏã†Ï†Å ÌôúÎèôÎüâÏùÑ Ïú†ÏßÄÌïòÍ≥† ÏûàÏäµÎãàÎã§.'}
                                      </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ï†ïÏÑú ÏïàÏ†ïÏÑ± */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.eegMetrics.emotionalStability?.value || 0) >= 0.5 && 
                              (report.measurementData.eegMetrics.emotionalStability?.value || 0) <= 0.9 ? 'normal' : 
                              (report.measurementData.eegMetrics.emotionalStability?.value || 0) < 0.5 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ï†ïÏÑú ÏïàÏ†ïÏÑ±
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Emotional Stability</p>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-1">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96">
                                    <EEGMetricChart
                                      value={report.measurementData.eegMetrics.emotionalStability?.value || 0}
                                      normalRange={{ min: 0.5, max: 0.9 }}
                                      label="Ï†ïÏÑú ÏïàÏ†ïÏÑ±"
                                      unit=""
                                      status={
                                        (report.measurementData.eegMetrics.emotionalStability?.value || 0) >= 0.5 && 
                                        (report.measurementData.eegMetrics.emotionalStability?.value || 0) <= 0.9 ? 'normal' : 
                                        (report.measurementData.eegMetrics.emotionalStability?.value || 0) > 0.9 ? 'high' : 'low'
                                      }
                                    />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-200 pt-2 mt-2">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                      <p className="text-sm text-gray-600 leading-relaxed">
                                        {mentalHealthComprehensive?.individualMetricsInterpretation?.emotionalStability?.interpretation || 
                                         report.measurementData.eegMetrics.emotionalStability?.interpretation || 
                                         'ÏïåÌååÌååÏôÄ Î≤†ÌÉÄÌååÏùò ÎπÑÏú®ÏùÑ ÌÜµÌï¥ Ï†ïÏÑúÏ†Å ÏïàÏ†ïÏÑ±Í≥º Í∞êÏ†ï Ï°∞Ï†à Îä•Î†•ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§. ÌòÑÏû¨ Ï†ïÏÑú ÏïàÏ†ïÏÑ±ÏùÄ ÏñëÌò∏Ìïú ÏÉÅÌÉúÎ°ú Í∞êÏ†ï Ï°∞Ï†àÏù¥ Ïûò Ïù¥Î£®Ïñ¥ÏßÄÍ≥† ÏûàÏäµÎãàÎã§.'}
                                      </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ï¢åÏö∞Îáå Í∑†Ìòï */}
                            <Card className={`${getEEGCardBackgroundClass(
                              Math.abs(report.measurementData.eegMetrics.hemisphericBalance?.value || 0) <= 0.1 ? 'normal' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ï¢åÏö∞Îáå Í∑†Ìòï
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Hemispheric Balance</p>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-1">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96">
                                    <EEGMetricChart
                                      value={report.measurementData.eegMetrics.hemisphericBalance?.value || 0}
                                      normalRange={{ min: -0.1, max: 0.1 }}
                                      label="Ï¢åÏö∞Îáå Í∑†Ìòï"
                                      unit=""
                                      status={
                                        Math.abs(report.measurementData.eegMetrics.hemisphericBalance?.value || 0) <= 0.1 ? 'normal' : 'high'
                                      }
                                      customLabels={{ low: 'Ïö∞ÎáåÏö∞ÏÑ∏', normal: 'Í∑†Ìòï', high: 'Ï¢åÎáåÏö∞ÏÑ∏' }}
                                    />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-200 pt-2 mt-2">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                      <p className="text-sm text-gray-600 leading-relaxed">
                                        {mentalHealthComprehensive?.individualMetricsInterpretation?.hemisphericBalance?.interpretation || 
                                         report.measurementData.eegMetrics.hemisphericBalance?.interpretation || 
                                         'Ï¢åÎáåÏôÄ Ïö∞ÎáåÏùò ÌôúÏÑ±ÎèÑ Í∑†ÌòïÏùÑ ÌèâÍ∞ÄÌïòÏó¨ Ïù∏ÏßÄ Í∏∞Îä•Ïùò Ï°∞ÌôîÎ°úÏö¥ Î∞úÎã¨ÏùÑ ÌôïÏù∏Ìï©ÎãàÎã§. ÌòÑÏû¨ Ï¢åÏö∞Îáå Í∑†ÌòïÏùÄ ÏñëÌò∏Ìïú ÏÉÅÌÉúÎ°ú Ïù∏ÏßÄ Í∏∞Îä•Ïù¥ Í∑†ÌòïÏûàÍ≤å Î∞úÎã¨ÌïòÍ≥† ÏûàÏäµÎãàÎã§.'}
                                      </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>
                          </div>
                        </div>

                        {/* 4. Í∂åÏû• ÏÇ¨Ìï≠ Î∞è Í∞úÏÑ† Î∞©Ìñ• */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Í∂åÏû• ÏÇ¨Ìï≠ Î∞è Í∞úÏÑ† Î∞©Ìñ•
                          </h3>
                          
                          {loadingComprehensive ? (
                            <div className="flex items-center justify-center p-8">
                              <Loader2 className="w-6 h-6 animate-spin text-gray-500" />
                              <span className="ml-2 text-gray-600">ÎßûÏ∂§Ìòï Í∂åÏû•ÏÇ¨Ìï≠ÏùÑ Î∂ÑÏÑùÌïòÍ≥† ÏûàÏäµÎãàÎã§...</span>
                            </div>
                          ) : (
                            <div className="grid grid-cols-1 gap-4">
                              {/* Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò */}
                              {((mentalHealthComprehensive?.personalizedRecommendations?.immediate?.length ?? 0) > 0 || 
                                (analysisResult.detailedAnalysis.mentalHealth.immediateActions?.length ?? 0) > 0) && (
                                <div className="bg-white p-4 rounded-lg border border-gray-200">
                                  <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                    <Zap className="w-4 h-4 text-red-600" />
                                    Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò
                                  </h4>
                                  <ul className="space-y-2">
                                    {(mentalHealthComprehensive?.personalizedRecommendations?.immediate || 
                                      analysisResult.detailedAnalysis.mentalHealth.immediateActions || []).map((action, index) => (
                                      <li key={index} className="text-sm text-gray-700 flex items-start gap-2">
                                        <span className="text-red-500 mt-1">‚Ä¢</span>
                                        <span>{action}</span>
                                      </li>
                                    ))}
                                  </ul>
                                </div>
                              )}
                              
                              {/* Îã®Í∏∞ Î™©Ìëú (1-4Ï£º) */}
                              {((mentalHealthComprehensive?.personalizedRecommendations?.shortTerm?.length ?? 0) > 0 || 
                                (analysisResult.detailedAnalysis.mentalHealth.shortTermGoals?.length ?? 0) > 0) && (
                                <div className="bg-white p-4 rounded-lg border border-gray-200">
                                  <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                    <Target className="w-4 h-4 text-blue-600" />
                                    Îã®Í∏∞ Î™©Ìëú (1-4Ï£º)
                                  </h4>
                                  <ul className="space-y-2">
                                    {(mentalHealthComprehensive?.personalizedRecommendations?.shortTerm || 
                                      analysisResult.detailedAnalysis.mentalHealth.shortTermGoals || []).map((goal, index) => (
                                      <li key={index} className="text-sm text-gray-700 flex items-start gap-2">
                                        <span className="text-blue-500 mt-1">‚Ä¢</span>
                                        <span>{goal}</span>
                                      </li>
                                    ))}
                                  </ul>
                                </div>
                              )}
                              
                              {/* Ïû•Í∏∞ Ï†ÑÎûµ (1-6Í∞úÏõî) */}
                              {((mentalHealthComprehensive?.personalizedRecommendations?.longTerm?.length ?? 0) > 0 || 
                                (analysisResult.detailedAnalysis.mentalHealth.longTermStrategy?.length ?? 0) > 0) && (
                                <div className="bg-white p-4 rounded-lg border border-gray-200">
                                  <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                    <TrendingUp className="w-4 h-4 text-purple-600" />
                                    Ïû•Í∏∞ Ï†ÑÎûµ (1-6Í∞úÏõî)
                                  </h4>
                                  <ul className="space-y-2">
                                    {(mentalHealthComprehensive?.personalizedRecommendations?.longTerm || 
                                      analysisResult.detailedAnalysis.mentalHealth.longTermStrategy || []).map((strategy, index) => (
                                      <li key={index} className="text-sm text-gray-700 flex items-start gap-2">
                                        <span className="text-purple-500 mt-1">‚Ä¢</span>
                                        <span>{strategy}</span>
                                      </li>
                                    ))}
                                  </ul>
                                </div>
                              )}
                            </div>
                          )}
                        </div>

                      </CardContent>
                    </Card>
                  )}

                  {/* Îß•Ìåå Î∂ÑÏÑù Í≤∞Í≥º */}
                  {analysisResult.detailedAnalysis?.physicalHealth && (
                    <Card className="bg-gray-50 border-gray-200">
                      <CardHeader>
                        <CardTitle className="flex items-center gap-2 text-gray-900">
                          <Heart className="w-5 h-5 text-red-600" />
                          ‚ù§Ô∏è Îß•Ìåå Î∂ÑÏÑù Í≤∞Í≥º
                        </CardTitle>
                      </CardHeader>
                      <CardContent className="space-y-8">
                        
                        {/* 1. Îß•Ìåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Îß•Ìåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù
                          </h3>
                          
                          <div className="bg-white p-4 rounded-lg border border-gray-200">
                            <div className="flex items-center justify-between mb-4">
                              <div>
                                <div className="text-sm text-red-600 font-medium mb-1">
                                  Îß•Ìåå Í∏∞Î∞ò Ïã†Ï≤¥Í±¥Í∞ï Ï†êÏàò
                                </div>
                                <div className="text-2xl font-bold text-gray-900">
                                  {analysisResult.detailedAnalysis.physicalHealth.score}Ï†ê
                                </div>
                              </div>
                              <div>
                                <Badge className={getScoreBadgeColor(analysisResult.detailedAnalysis.physicalHealth.score)}>
                                  {analysisResult.detailedAnalysis.physicalHealth.status}
                                </Badge>
                              </div>
                            </div>
                            
                            {/* Ï†êÏàò Î∂ÑÌè¨ ÌëúÏãú */}
                            <ScoreDistributionBar 
                              score={analysisResult.detailedAnalysis.physicalHealth.score} 
                              label="Ïã†Ï≤¥Í±¥Í∞ï Ï†êÏàò"
                            />
                            
                            <div className="mt-4 prose prose-sm max-w-none prose-gray">
                              <h4 className="text-base font-semibold text-gray-900 mb-2">Ìï¥ÏÑù</h4>
                              {loadingPhysicalComprehensive ? (
                                <div className="flex items-center gap-2 p-4 bg-gray-50 rounded-lg">
                                  <Loader2 className="w-4 h-4 animate-spin text-gray-500" />
                                  <span className="text-sm text-gray-600">Îß•Ìåå Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑùÏùÑ Î∂ÑÏÑùÌïòÍ≥† ÏûàÏäµÎãàÎã§...</span>
                                </div>
                              ) : physicalHealthComprehensive ? (
                                <AIAnalysisMarkdownRenderer content={physicalHealthComprehensive.comprehensiveInterpretation} />
                              ) : (
                                <div className="text-gray-600">
                                  AI Ìï¥ÏÑùÏùÑ Î∂àÎü¨Ïò§Îäî Ï§ëÏûÖÎãàÎã§...
                                </div>
                              )}
                            </div>
                          </div>
                        </div>

                        {/* 2. Í∞úÏù∏ÌôîÎêú Îß•Ìåå Î∂ÑÏÑù ÌèâÍ∞Ä */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Í∞úÏù∏ÌôîÎêú Îß•Ìåå Î∂ÑÏÑù ÌèâÍ∞Ä
                          </h3>
                          
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {/* Ïó∞Î†πÎ≥Ñ/ÏÑ±Î≥ÑÎ≥Ñ ÌäπÏÑ±Î∂ÑÏÑù */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Users className="w-4 h-4 text-blue-600" />
                                Ïó∞Î†πÎ≥Ñ/ÏÑ±Î≥ÑÎ≥Ñ ÌäπÏÑ±Î∂ÑÏÑù
                              </h4>
                              <div className="space-y-3 text-sm text-gray-600">
                                <div className="flex justify-between">
                                  <span>Ïó∞Î†πÎåÄ:</span>
                                  <span className="font-medium">{report.personalInfo.age}ÏÑ∏</span>
                                </div>
                                <div className="flex justify-between">
                                  <span>ÏÑ±Î≥Ñ:</span>
                                  <span className="font-medium">{report.personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}</span>
                                </div>
                                <div className="mt-3 p-3 bg-blue-50 rounded-lg">
                                  {loadingPhysicalComprehensive ? (
                                    <div className="flex items-center gap-2">
                                      <Loader2 className="w-3 h-3 animate-spin text-blue-600" />
                                      <span className="text-sm text-blue-800">Î∂ÑÏÑù Ï§ë...</span>
                                    </div>
                                  ) : physicalHealthComprehensive ? (
                                    <div className="space-y-2">
                                      <div>
                                        <h5 className="text-xs font-medium text-blue-900 mb-1">Ïó∞Î†πÎåÄ ÌäπÏÑ±:</h5>
                                        <p className="text-sm text-blue-800">{physicalHealthComprehensive.ageSpecificAnalysis.typicalCharacteristics}</p>
                                      </div>
                                      <div>
                                        <h5 className="text-xs font-medium text-blue-900 mb-1">ÏÑ±Î≥Ñ ÌäπÏÑ±:</h5>
                                        <p className="text-sm text-blue-800">{physicalHealthComprehensive.genderSpecificAnalysis.cardiovascularCharacteristics}</p>
                                      </div>
                                    </div>
                                  ) : (
                                    <p className="text-sm text-blue-800">
                                      {`${report.personalInfo.age}ÏÑ∏ ${report.personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}Ïùò Îß•Ìåå Ìå®ÌÑ¥ÏùÑ Î∂ÑÏÑùÌïú Í≤∞Í≥º, Ìï¥Îãπ Ïó∞Î†πÎåÄÏôÄ ÏÑ±Î≥ÑÏùò ÏùºÎ∞òÏ†ÅÏù∏ ÌäπÏÑ±ÏùÑ Í≥†Î†§ÌïòÏó¨ Í∞úÏù∏ÌôîÎêú Ïã¨ÌòàÍ¥Ä Í±¥Í∞ï ÌèâÍ∞ÄÎ•º Ï†úÍ≥µÌï©ÎãàÎã§.`}
                                    </p>
                                  )}
                                </div>
                              </div>
                            </div>

                            {/* ÏßÅÏóÖÏ†Å ÌäπÏÑ± Î∂ÑÏÑù */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Briefcase className="w-4 h-4 text-green-600" />
                                ÏßÅÏóÖÏ†Å ÌäπÏÑ± Î∂ÑÏÑù
                              </h4>
                              <div className="space-y-3 text-sm text-gray-600">
                                <div className="flex justify-between">
                                  <span>ÏßÅÏóÖ:</span>
                                  <span className="font-medium">{getOccupationLabel(report.personalInfo.occupation)}</span>
                                </div>
                                <div className="mt-3 p-3 bg-green-50 rounded-lg">
                                  {loadingPhysicalComprehensive ? (
                                    <div className="flex items-center gap-2">
                                      <Loader2 className="w-3 h-3 animate-spin text-green-600" />
                                      <span className="text-sm text-green-800">Î∂ÑÏÑù Ï§ë...</span>
                                    </div>
                                  ) : physicalHealthComprehensive ? (
                                    <div className="space-y-2">
                                      <div>
                                        <h5 className="text-xs font-medium text-green-900 mb-1">ÏßÅÏóÖ ÏöîÍµ¨ÏÇ¨Ìï≠:</h5>
                                        <p className="text-sm text-green-800">{physicalHealthComprehensive.occupationalAnalysis.workRequirements}</p>
                                      </div>
                                    </div>
                                  ) : (
                                    <p className="text-sm text-green-800">
                                      {`${getOccupationLabel(report.personalInfo.occupation)} ÏßÅÏóÖÏùò ÌäπÏÑ±ÏùÑ Í≥†Î†§ÌïòÏó¨ Îß•Ìåå Í∏∞Î∞ò Ïã¨ÌòàÍ¥Ä Í±¥Í∞ï ÏÉÅÌÉúÎ•º Î∂ÑÏÑùÌïòÍ≥† ÏßÅÏóÖÏ†Å ÏöîÍµ¨ÏÇ¨Ìï≠Ïóê ÎßûÎäî Í∞úÏù∏ÌôîÎêú ÌèâÍ∞ÄÎ•º Ï†úÍ≥µÌï©ÎãàÎã§.`}
                                    </p>
                                  )}
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* Îß•Ìåå ÏßÄÌëú ÏÉÅÏÑ∏ Ìï¥ÏÑù */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Îß•Ìåå ÏßÄÌëú ÏÉÅÏÑ∏ Ìï¥ÏÑù
                          </h3>
                          
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {preparePPGMetrics().map((metric, index) => (
                              <Card key={index} className={`${getEEGCardBackgroundClass(metric.status)} shadow-sm`}>
                                <CardHeader className="pb-3">
                                    <div>
                                      <CardTitle className="text-base font-semibold text-gray-900">
                                        {metric.title}
                                      </CardTitle>
                                      <p className="text-sm text-gray-500">{metric.subtitle}</p>
                                  </div>
                                </CardHeader>
                                <CardContent>
                                  <div className="space-y-1">
                                    {/* Í∑∏ÎûòÌîÑ */}
                                    <div className="flex justify-center">
                                      <div className="w-96">
                                      <EEGMetricChart
                                        value={metric.value}
                                        normalRange={metric.normalRange}
                                        label={metric.title}
                                        unit={metric.unit}
                                        status={metric.status}
                                        customLabels={metric.customLabels}
                                      />
                                      </div>
                                    </div>
                                    
                                    {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                    <div className="border-t border-gray-100 pt-2 mt-2">
                                      <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                        <p className="text-sm text-gray-600 leading-relaxed">
                                          {metric.interpretation}
                                        </p>
                                    </div>
                                  </div>
                                </CardContent>
                              </Card>
                            ))}
                          </div>
                        </div>

                        {/* Í∂åÏû• ÏÇ¨Ìï≠ Î∞è Í∞úÏÑ† Î∞©Ìñ• */}
                        {physicalHealthComprehensive && (
                          <div className="space-y-4">
                            <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                              Í∂åÏû• ÏÇ¨Ìï≠ Î∞è Í∞úÏÑ† Î∞©Ìñ•
                            </h3>
                            
                            <div className="grid grid-cols-1 gap-4">
                              {/* Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò */}
                              <div className="bg-white p-4 rounded-lg border border-gray-200">
                                <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                  <Zap className="w-4 h-4 text-red-600" />
                                  Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò
                                </h4>
                                <ul className="space-y-2">
                                  {physicalHealthComprehensive.personalizedRecommendations.immediate.map((item: string, index: number) => (
                                    <li key={index} className="text-sm text-gray-700 flex items-start gap-2">
                                      <span className="text-red-500 mt-1">‚Ä¢</span>
                                      <span>{item}</span>
                                    </li>
                                  ))}
                                </ul>
                              </div>

                              {/* Îã®Í∏∞ Î™©Ìëú (1-4Ï£º) */}
                              <div className="bg-white p-4 rounded-lg border border-gray-200">
                                <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                  <Target className="w-4 h-4 text-blue-600" />
                                  Îã®Í∏∞ Î™©Ìëú (1-4Ï£º)
                                </h4>
                                <ul className="space-y-2">
                                  {physicalHealthComprehensive.personalizedRecommendations.shortTerm.map((item: string, index: number) => (
                                    <li key={index} className="text-sm text-gray-700 flex items-start gap-2">
                                      <span className="text-blue-500 mt-1">‚Ä¢</span>
                                      <span>{item}</span>
                                    </li>
                                  ))}
                                </ul>
                              </div>

                              {/* Ïû•Í∏∞ Ï†ÑÎûµ (1-6Í∞úÏõî) */}
                              <div className="bg-white p-4 rounded-lg border border-gray-200">
                                <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                  <TrendingUp className="w-4 h-4 text-purple-600" />
                                  Ïû•Í∏∞ Ï†ÑÎûµ (1-6Í∞úÏõî)
                                </h4>
                                <ul className="space-y-2">
                                  {physicalHealthComprehensive.personalizedRecommendations.longTerm.map((item: string, index: number) => (
                                    <li key={index} className="text-sm text-gray-700 flex items-start gap-2">
                                      <span className="text-purple-500 mt-1">‚Ä¢</span>
                                      <span>{item}</span>
                                    </li>
                                  ))}
                                </ul>
                              </div>
                            </div>
                          </div>
                        )}
                      </CardContent>
                    </Card>
                  )}

                  {/* Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù */}
                  {analysisResult.detailedAnalysis?.stressLevel && (
                    <Card className="bg-gray-50 border-gray-200">
                      <CardHeader>
                        <CardTitle className="flex items-center gap-2 text-gray-900">
                          <Zap className="w-5 h-5 text-yellow-600" />
                          ‚ö° Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù Í≤∞Í≥º
                        </CardTitle>
                      </CardHeader>
                      <CardContent className="space-y-8">
                        
                        {/* 1. Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑù
                          </h3>
                          
                          <div className="bg-white p-4 rounded-lg border border-gray-200">
                            <div className="flex items-center justify-between mb-4">
                              <div>
                                <div className="text-sm font-medium text-yellow-600 mb-1">
                                  Ïä§Ìä∏Î†àÏä§ Ï†êÏàò
                                </div>
                                <div className="text-2xl font-bold text-gray-900">
                                  {analysisResult.detailedAnalysis.stressLevel.score}Ï†ê
                                </div>
                              </div>
                              <div>
                                <Badge className={getScoreBadgeColor(analysisResult.detailedAnalysis.stressLevel.score)}>
                                  {analysisResult.detailedAnalysis.stressLevel.level}
                                </Badge>
                              </div>
                            </div>
                            
                            {/* Ï†êÏàò Î∂ÑÌè¨ ÌëúÏãú */}
                            <ScoreDistributionBar 
                              score={analysisResult.detailedAnalysis.stressLevel.score} 
                              label="Ïä§Ìä∏Î†àÏä§ Ï†êÏàò"
                            />
                            
                            <div className="mt-4 prose prose-sm max-w-none prose-gray">
                              <h4 className="text-base font-semibold text-gray-900 mb-2">Ìï¥ÏÑù</h4>
                              {loadingStressComprehensive ? (
                                <div className="flex items-center gap-2 p-4 bg-gray-50 rounded-lg">
                                  <Loader2 className="w-4 h-4 animate-spin text-gray-500" />
                                  <span className="text-sm text-gray-600">Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù Ï¢ÖÌï© Ìï¥ÏÑùÏùÑ Î∂ÑÏÑùÌïòÍ≥† ÏûàÏäµÎãàÎã§...</span>
                            </div>
                              ) : stressComprehensive ? (
                                <AIAnalysisMarkdownRenderer content={stressComprehensive.comprehensiveInterpretation} />
                              ) : (
                                <div className="text-gray-600">
                                  AI Ìï¥ÏÑùÏùÑ Î∂àÎü¨Ïò§Îäî Ï§ëÏûÖÎãàÎã§...
                                </div>
                              )}
                            </div>
                          </div>
                        </div>

                        {/* 2. Í∞úÏù∏ÌôîÎêú Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù ÌèâÍ∞Ä */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Í∞úÏù∏ÌôîÎêú Ïä§Ìä∏Î†àÏä§ Î∂ÑÏÑù ÌèâÍ∞Ä
                          </h3>
                          
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {/* Ïó∞Î†πÎ≥Ñ/ÏÑ±Î≥ÑÎ≥Ñ ÌäπÏÑ±Î∂ÑÏÑù */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Users className="w-4 h-4 text-blue-600" />
                                Ïó∞Î†πÎ≥Ñ/ÏÑ±Î≥ÑÎ≥Ñ ÌäπÏÑ±Î∂ÑÏÑù
                              </h4>
                              <div className="space-y-3 text-sm text-gray-600">
                                <div className="flex justify-between">
                                  <span>Ïó∞Î†πÎåÄ:</span>
                                  <span className="font-medium">{report.personalInfo.age}ÏÑ∏</span>
                                </div>
                                <div className="flex justify-between">
                                  <span>ÏÑ±Î≥Ñ:</span>
                                  <span className="font-medium">{report.personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}</span>
                                </div>
                                <div className="mt-3 p-3 bg-blue-50 rounded-lg">
                                  {loadingStressComprehensive ? (
                                    <div className="flex items-center gap-2">
                                      <Loader2 className="w-3 h-3 animate-spin text-blue-600" />
                                      <span className="text-sm text-blue-800">Î∂ÑÏÑù Ï§ë...</span>
                                    </div>
                                  ) : stressComprehensive ? (
                                    <div className="space-y-2">
                                <div>
                                        <h5 className="text-xs font-medium text-blue-900 mb-1">Ïó∞Î†πÎåÄ ÌäπÏÑ±:</h5>
                                        <p className="text-sm text-blue-800">{stressComprehensive.ageSpecificAnalysis.typicalCharacteristics}</p>
                                </div>
                                <div>
                                        <h5 className="text-xs font-medium text-blue-900 mb-1">ÏÑ±Î≥Ñ ÌäπÏÑ±:</h5>
                                        <p className="text-sm text-blue-800">{stressComprehensive.genderSpecificAnalysis.stressPatternCharacteristics}</p>
                                      </div>
                                    </div>
                                  ) : (
                                    <p className="text-sm text-blue-800">
                                      {`${report.personalInfo.age}ÏÑ∏ ${report.personalInfo.gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}Ïùò Ïä§Ìä∏Î†àÏä§ Ìå®ÌÑ¥ÏùÑ Î∂ÑÏÑùÌïú Í≤∞Í≥º, Ìï¥Îãπ Ïó∞Î†πÎåÄÏôÄ ÏÑ±Î≥ÑÏùò ÏùºÎ∞òÏ†ÅÏù∏ ÌäπÏÑ±ÏùÑ Í≥†Î†§ÌïòÏó¨ Í∞úÏù∏ÌôîÎêú Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ ÌèâÍ∞ÄÎ•º Ï†úÍ≥µÌï©ÎãàÎã§.`}
                                  </p>
                                  )}
                                </div>
                              </div>
                            </div>

                            {/* ÏßÅÏóÖÏ†Å ÌäπÏÑ± Î∂ÑÏÑù */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="text-base font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Briefcase className="w-4 h-4 text-green-600" />
                                ÏßÅÏóÖÏ†Å ÌäπÏÑ± Î∂ÑÏÑù
                              </h4>
                              <div className="space-y-3 text-sm text-gray-600">
                                <div className="flex justify-between">
                                  <span>ÏßÅÏóÖ:</span>
                                  <span className="font-medium">{getOccupationLabel(report.personalInfo.occupation)}</span>
                                </div>
                                <div className="mt-3 p-3 bg-green-50 rounded-lg">
                                  {loadingStressComprehensive ? (
                                    <div className="flex items-center gap-2">
                                      <Loader2 className="w-3 h-3 animate-spin text-green-600" />
                                      <span className="text-sm text-green-800">Î∂ÑÏÑù Ï§ë...</span>
                                    </div>
                                  ) : stressComprehensive ? (
                                    <div className="space-y-2">
                                <div>
                                        <h5 className="text-xs font-medium text-green-900 mb-1">ÏßÅÏóÖ ÏöîÍµ¨ÏÇ¨Ìï≠:</h5>
                                        <p className="text-sm text-green-800">{stressComprehensive.occupationalAnalysis.workRequirements}</p>
                                      </div>
                                    </div>
                                  ) : (
                                    <p className="text-sm text-green-800">
                                      {`${getOccupationLabel(report.personalInfo.occupation)} ÏßÅÏóÖÏùò ÌäπÏÑ±ÏùÑ Í≥†Î†§ÌïòÏó¨ Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ ÏÉÅÌÉúÎ•º Î∂ÑÏÑùÌïòÍ≥† ÏßÅÏóÖÏ†Å ÏöîÍµ¨ÏÇ¨Ìï≠Ïóê ÎßûÎäî Í∞úÏù∏ÌôîÎêú ÌèâÍ∞ÄÎ•º Ï†úÍ≥µÌï©ÎãàÎã§.`}
                                    </p>
                                  )}
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* 3. Ïä§Ìä∏Î†àÏä§ ÏßÄÌëú ÏÉÅÏÑ∏ Ìï¥ÏÑù */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Ïä§Ìä∏Î†àÏä§ ÏßÄÌëú ÏÉÅÏÑ∏ Ìï¥ÏÑù
                          </h3>
                          
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {/* ÎáåÌåå Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.eegMetrics.stressIndex?.value || 0) >= 3.0 && 
                              (report.measurementData.eegMetrics.stressIndex?.value || 0) <= 4.0 ? 'normal' : 
                              (report.measurementData.eegMetrics.stressIndex?.value || 0) < 3.0 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                <div className="flex items-center justify-between">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      ÎáåÌåå Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">EEG Stress Index</p>
                                  </div>
                                  <div className="text-right">
                                    <div className="text-lg font-bold text-gray-900">
                                      {report.measurementData.eegMetrics.stressIndex?.value?.toFixed(2) || 'N/A'}
                                    </div>
                                    <Badge 
                                      variant="outline" 
                                      className={
                                        (report.measurementData.eegMetrics.stressIndex?.value || 0) >= 3.0 && 
                                        (report.measurementData.eegMetrics.stressIndex?.value || 0) <= 4.0
                                          ? 'border-green-300 text-green-700 bg-green-50' 
                                          : (report.measurementData.eegMetrics.stressIndex?.value || 0) > 4.0
                                          ? 'border-red-300 text-red-700 bg-red-50'
                                          : 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                      }
                                    >
                                      {(report.measurementData.eegMetrics.stressIndex?.value || 0) >= 3.0 && 
                                       (report.measurementData.eegMetrics.stressIndex?.value || 0) <= 4.0 ? 'Ï†ïÏÉÅ' : 
                                       (report.measurementData.eegMetrics.stressIndex?.value || 0) > 4.0 ? 'ÎÜíÏùå' : 'ÎÇÆÏùå'}
                                    </Badge>
                                  </div>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-4">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96 h-96">
                                      <EEGMetricChart
                                        value={report.measurementData.eegMetrics.stressIndex?.value || 0}
                                        normalRange={{ min: 3.0, max: 4.0 }}
                                        label="ÎáåÌåå Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò"
                                        unit=""
                                        status={
                                          (report.measurementData.eegMetrics.stressIndex?.value || 0) >= 3.0 && 
                                          (report.measurementData.eegMetrics.stressIndex?.value || 0) <= 4.0 ? 'normal' : 
                                          (report.measurementData.eegMetrics.stressIndex?.value || 0) > 4.0 ? 'high' : 'low'
                                        }
                                      />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-100 pt-3">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                    <p className="text-sm text-gray-600 leading-relaxed">
                                      Î≤†ÌÉÄÌååÏôÄ Í∞êÎßàÌååÏùò ÎπÑÏú®Î°ú Ï∏°Ï†ïÎêòÎ©∞, Ï†ïÏã†Ï†Å Í∏¥Ïû•ÎèÑÏôÄ Í∞ÅÏÑ± ÏÉÅÌÉúÎ•º Î∞òÏòÅÌï©ÎãàÎã§.
                                    </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* ÏûêÏú®Ïã†Í≤Ω Ïä§Ìä∏Î†àÏä§ ÏßÄÌëú (LF/HF ÎπÑÏú®) */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) >= 1.0 && 
                              (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) <= 10.0 ? 'normal' : 
                              (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) < 1.0 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                <div className="flex items-center justify-between">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      ÏûêÏú®Ïã†Í≤Ω Ïä§Ìä∏Î†àÏä§ ÏßÄÌëú (LF/HF ÎπÑÏú®)
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Autonomic Stress Index</p>
                                  </div>
                                  <div className="text-right">
                                    <div className="text-lg font-bold text-gray-900">
                                      {report.measurementData.ppgMetrics.lfHfRatio?.value?.toFixed(2) || 'N/A'}
                                    </div>
                                    <Badge 
                                      variant="outline" 
                                      className={
                                        (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) >= 1.0 && 
                                        (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) <= 10.0
                                          ? 'border-green-300 text-green-700 bg-green-50' 
                                          : 'border-orange-300 text-orange-700 bg-orange-50'
                                      }
                                    >
                                      {(report.measurementData.ppgMetrics.lfHfRatio?.value || 0) >= 1.0 && 
                                       (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) <= 10.0 ? 'Í∑†Ìòï ÏÉÅÌÉú' : 'Î∂àÍ∑†Ìòï'}
                                    </Badge>
                                  </div>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-4">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96 h-96">
                                      <EEGMetricChart
                                        value={report.measurementData.ppgMetrics.lfHfRatio?.value || 0}
                                        normalRange={{ min: 1.0, max: 10.0 }}
                                        label="LF/HF ÎπÑÏú®"
                                        unit=""
                                        status={
                                          (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) >= 1.0 && 
                                          (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) <= 10.0 ? 'normal' : 
                                          (report.measurementData.ppgMetrics.lfHfRatio?.value || 0) > 10.0 ? 'high' : 'low'
                                        }
                                      />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-100 pt-3">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                    <p className="text-sm text-gray-600 leading-relaxed">
                                      ÍµêÍ∞êÏã†Í≤ΩÍ≥º Î∂ÄÍµêÍ∞êÏã†Í≤ΩÏùò Í∑†ÌòïÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞, Ïä§Ìä∏Î†àÏä§Ïóê ÎåÄÌïú Ïã†Ï≤¥ Î∞òÏùëÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§.
                                    </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µÎ†• (RMSSD) */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.ppgMetrics.rmssd?.value || 0) >= 20 && 
                              (report.measurementData.ppgMetrics.rmssd?.value || 0) <= 50 ? 'normal' : 
                              (report.measurementData.ppgMetrics.rmssd?.value || 0) < 20 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                <div className="flex items-center justify-between">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µÎ†• (RMSSD)
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Stress Recovery</p>
                                  </div>
                                  <div className="text-right">
                                    <div className="text-lg font-bold text-gray-900">
                                      {report.measurementData.ppgMetrics.rmssd?.value?.toFixed(0) || 'N/A'}
                                      <span className="text-sm text-gray-500 ml-1">ms</span>
                                    </div>
                                    <Badge 
                                      variant="outline" 
                                      className={
                                        (report.measurementData.ppgMetrics.rmssd?.value || 0) >= 20 && 
                                        (report.measurementData.ppgMetrics.rmssd?.value || 0) <= 50
                                          ? 'border-green-300 text-green-700 bg-green-50' 
                                          : (report.measurementData.ppgMetrics.rmssd?.value || 0) < 20
                                          ? 'border-red-300 text-red-700 bg-red-50'
                                          : 'border-blue-300 text-blue-700 bg-blue-50'
                                      }
                                    >
                                      {(report.measurementData.ppgMetrics.rmssd?.value || 0) >= 20 && 
                                       (report.measurementData.ppgMetrics.rmssd?.value || 0) <= 50 ? 'Ï†ïÏÉÅ' : 
                                       (report.measurementData.ppgMetrics.rmssd?.value || 0) < 20 ? 'ÎÇÆÏùå' : 'ÎÜíÏùÄ ÌöåÎ≥µÎ†•'}
                                    </Badge>
                                  </div>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-4">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96 h-96">
                                      <EEGMetricChart
                                        value={report.measurementData.ppgMetrics.rmssd?.value || 0}
                                        normalRange={{ min: 20, max: 50 }}
                                        label="RMSSD"
                                        unit="ms"
                                        status={
                                          (report.measurementData.ppgMetrics.rmssd?.value || 0) >= 20 && 
                                          (report.measurementData.ppgMetrics.rmssd?.value || 0) <= 50 ? 'normal' : 
                                          (report.measurementData.ppgMetrics.rmssd?.value || 0) < 20 ? 'low' : 'high'
                                        }
                                      />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-100 pt-3">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                    <p className="text-sm text-gray-600 leading-relaxed">
                                      Î∂ÄÍµêÍ∞êÏã†Í≤Ω ÌôúÏÑ±ÎèÑÎ•º ÎÇòÌÉÄÎÇ¥Î©∞, Ïä§Ìä∏Î†àÏä§ ÏÉÅÌô©ÏóêÏÑúÏùò ÌöåÎ≥µ Îä•Î†•ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§.
                                    </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ïã¨Î∞ïÏàò Î∞òÏùë */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.ppgMetrics.heartRate?.value || 0) >= 60 && 
                              (report.measurementData.ppgMetrics.heartRate?.value || 0) <= 100 ? 'normal' : 
                              (report.measurementData.ppgMetrics.heartRate?.value || 0) < 60 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                <div className="flex items-center justify-between">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ïã¨Î∞ïÏàò Î∞òÏùë
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Heart Rate Response</p>
                                  </div>
                                  <div className="text-right">
                                    <div className="text-lg font-bold text-gray-900">
                                      {report.measurementData.ppgMetrics.heartRate?.value?.toFixed(0) || 'N/A'}
                                      <span className="text-sm text-gray-500 ml-1">BPM</span>
                                    </div>
                                    <Badge 
                                      variant="outline" 
                                      className={
                                        (report.measurementData.ppgMetrics.heartRate?.value || 0) >= 60 && 
                                        (report.measurementData.ppgMetrics.heartRate?.value || 0) <= 100
                                          ? 'border-green-300 text-green-700 bg-green-50' 
                                          : (report.measurementData.ppgMetrics.heartRate?.value || 0) > 100
                                          ? 'border-red-300 text-red-700 bg-red-50'
                                          : 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                      }
                                    >
                                      {(report.measurementData.ppgMetrics.heartRate?.value || 0) >= 60 && 
                                       (report.measurementData.ppgMetrics.heartRate?.value || 0) <= 100 ? 'Ï†ïÏÉÅ' : 
                                       (report.measurementData.ppgMetrics.heartRate?.value || 0) > 100 ? 'ÎÜíÏùå' : 'ÎÇÆÏùå'}
                                    </Badge>
                                  </div>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-4">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96 h-96">
                                      <EEGMetricChart
                                        value={report.measurementData.ppgMetrics.heartRate?.value || 0}
                                        normalRange={{ min: 60, max: 100 }}
                                        label="Ïã¨Î∞ïÏàò"
                                        unit="BPM"
                                        status={
                                          (report.measurementData.ppgMetrics.heartRate?.value || 0) >= 60 && 
                                          (report.measurementData.ppgMetrics.heartRate?.value || 0) <= 100 ? 'normal' : 
                                          (report.measurementData.ppgMetrics.heartRate?.value || 0) > 100 ? 'high' : 'low'
                                        }
                                      />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-100 pt-3">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                    <p className="text-sm text-gray-600 leading-relaxed">
                                      Ïã¨ÌòàÍ¥ÄÍ≥ÑÏùò Ïä§Ìä∏Î†àÏä§ Î∞òÏùëÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞, Ïã†Ï≤¥Ï†Å Í∏¥Ïû•ÎèÑÎ•º ÌèâÍ∞ÄÌï©ÎãàÎã§.
                                    </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>

                            {/* Ï†ïÏã†Ï†Å Ïù¥ÏôÑÎèÑ */}
                            <Card className={`${getEEGCardBackgroundClass(
                              (report.measurementData.eegMetrics.relaxationIndex?.value || 0) >= 0.18 && 
                              (report.measurementData.eegMetrics.relaxationIndex?.value || 0) <= 0.22 ? 'normal' : 
                              (report.measurementData.eegMetrics.relaxationIndex?.value || 0) < 0.18 ? 'low' : 'high'
                            )} shadow-sm`}>
                              <CardHeader className="pb-3">
                                <div className="flex items-center justify-between">
                                  <div>
                                    <CardTitle className="text-base font-semibold text-gray-900">
                                      Ï†ïÏã†Ï†Å Ïù¥ÏôÑÎèÑ
                                    </CardTitle>
                                    <p className="text-sm text-gray-500">Mental Relaxation</p>
                                  </div>
                                  <div className="text-right">
                                    <div className="text-lg font-bold text-gray-900">
                                      {report.measurementData.eegMetrics.relaxationIndex?.value?.toFixed(3) || 'N/A'}
                                    </div>
                                    <Badge 
                                      variant="outline" 
                                      className={
                                        (report.measurementData.eegMetrics.relaxationIndex?.value || 0) >= 0.18 && 
                                        (report.measurementData.eegMetrics.relaxationIndex?.value || 0) <= 0.22
                                          ? 'border-green-300 text-green-700 bg-green-50' 
                                          : (report.measurementData.eegMetrics.relaxationIndex?.value || 0) > 0.22
                                          ? 'border-red-300 text-red-700 bg-red-50'
                                          : 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                      }
                                    >
                                      {(report.measurementData.eegMetrics.relaxationIndex?.value || 0) >= 0.18 && 
                                       (report.measurementData.eegMetrics.relaxationIndex?.value || 0) <= 0.22 ? 'Ï†ïÏÉÅ' : 
                                       (report.measurementData.eegMetrics.relaxationIndex?.value || 0) > 0.22 ? 'ÎÜíÏùå' : 'ÎÇÆÏùå'}
                                    </Badge>
                                  </div>
                                </div>
                              </CardHeader>
                              <CardContent>
                                <div className="space-y-4">
                                  {/* Í∑∏ÎûòÌîÑ */}
                                  <div className="flex justify-center">
                                    <div className="w-96 h-96">
                                      <EEGMetricChart
                                        value={report.measurementData.eegMetrics.relaxationIndex?.value || 0}
                                        normalRange={{ min: 0.18, max: 0.22 }}
                                        label="Ï†ïÏã†Ï†Å Ïù¥ÏôÑÎèÑ"
                                        unit=""
                                        status={
                                          (report.measurementData.eegMetrics.relaxationIndex?.value || 0) >= 0.18 && 
                                          (report.measurementData.eegMetrics.relaxationIndex?.value || 0) <= 0.22 ? 'normal' : 
                                          (report.measurementData.eegMetrics.relaxationIndex?.value || 0) > 0.22 ? 'high' : 'low'
                                        }
                                      />
                                    </div>
                                  </div>
                                  
                                  {/* ÌïòÎã®: Ìï¥ÏÑù */}
                                  <div className="border-t border-gray-100 pt-3">
                                    <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                                    <p className="text-sm text-gray-600 leading-relaxed">
                                      ÏïåÌååÌåå Í∏∞Î∞ò Ï†ïÏã†Ï†Å Ïù¥ÏôÑ Îä•Î†•ÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞, Ïä§Ìä∏Î†àÏä§ Ìï¥ÏÜå Îä•Î†•ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§.
                                    </p>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>
                          </div>
                        </div>

                        {/* 4. Í∂åÏû• ÏÇ¨Ìï≠ Î∞è Í∞úÏÑ† Î∞©Ìñ• */}
                        <div className="space-y-4">
                          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
                            Í∂åÏû• ÏÇ¨Ìï≠ Î∞è Í∞úÏÑ† Î∞©Ìñ•
                          </h3>
                          
                          <div className="space-y-4">
                            {/* Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Zap className="w-4 h-4 text-red-600" />
                                Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò
                              </h4>
                              <div className="prose prose-sm max-w-none prose-gray">
                                <AIAnalysisMarkdownRenderer 
                                  content={`**Ïã¨Ìò∏Ìù° Î∞è ÏßßÏùÄÎ™ÖÏÉÅ**: 1Ïùº 3Ìöå, Í∞Å 5Î∂ÑÏî© Ïã¨Ìò∏Ìù° Î∞è Î™ÖÏÉÅ Í∏∞Î≤ï Ïã§ÏãúÎ°ú Ïä§Ìä∏Î†àÏä§ ÏôÑÌôî

**Í∑úÏπôÏ†ÅÏù∏ ÏàòÎ©¥ Ìå®ÌÑ¥**: 7-8ÏãúÍ∞Ñ ÏàòÎ©¥ ÏãúÍ∞Ñ ÌôïÎ≥¥ Î∞è ÏùºÏ†ïÌïú Ï∑®Ïπ®/Í∏∞ÏÉÅ ÏãúÍ∞Ñ Ïú†ÏßÄ

**Ïπ¥ÌéòÏù∏ ÏÑ≠Ï∑® Ï†úÌïú**: ÌïòÎ£® 2Ïûî Ïù¥ÌïòÎ°ú Ï†úÌïúÌïòÏó¨ ÏàòÎ©¥ Ïßà Í∞úÏÑ† Î∞è Î∂àÏïàÍ∞ê Í∞êÏÜå

**Ïä§Ìä∏Î†àÏä§ ÏÉÅÌô© Ïù∏Ïãù**: Ïä§Ìä∏Î†àÏä§ Ïú†Î∞ú ÏöîÏù∏ ÌååÏïÖ Î∞è Ï¶âÏãú ÎåÄÏ≤ò Î∞©Ïïà ÏàòÎ¶Ω`}
                                  variant="compact"
                                />
                              </div>
                            </div>

                            {/* Îã®Í∏∞ Î™©Ìëú (1-4Ï£º) */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <Target className="w-4 h-4 text-blue-600" />
                                Îã®Í∏∞ Î™©Ìëú (1-4Ï£º)
                              </h4>
                              <div className="prose prose-sm max-w-none prose-gray">
                                <AIAnalysisMarkdownRenderer 
                                  content={`**Ï†ïÍ∏∞Ï†ÅÏù∏ Ïö¥Îèô Î£®Ìã¥**: Ï£º 3Ìöå, 30Î∂ÑÏî© Ïú†ÏÇ∞ÏÜå Ïö¥ÎèôÏúºÎ°ú Ïã¨ÌòàÍ¥Ä Í±¥Í∞ï Î∞è Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨

**Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ Í∏∞Î≤ï**: Î™ÖÏÉÅ, ÏöîÍ∞Ä, Ìò∏Ìù°Î≤ï Îì± Ï≤¥Í≥ÑÏ†Å Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ Î∞©Î≤ï ÌïôÏäµ Î∞è Ï†ÅÏö©

**ÏóÖÎ¨¥ ÌôòÍ≤Ω Í∞úÏÑ†**: Ìú¥Ïãù ÏãúÍ∞Ñ ÌôïÎ≥¥, ÏûëÏóÖ Í≥µÍ∞Ñ Ï†ïÎ¶¨, ÏóÖÎ¨¥ Ìö®Ïú®ÏÑ± Ìñ•ÏÉÅ

**ÏÇ¨ÌöåÏ†Å ÏßÄÏßÄ Ï≤¥Í≥Ñ**: Í∞ÄÏ°±, ÏπúÍµ¨ÏôÄÏùò ÏÜåÌÜµ Í∞ïÌôî Î∞è Ï†ïÏÑúÏ†Å ÏßÄÏõê Ï≤¥Í≥Ñ Íµ¨Ï∂ï`}
                                  variant="compact"
                                />
                              </div>
                            </div>

                            {/* Ïû•Í∏∞ Ï†ÑÎûµ (1-6Í∞úÏõî) */}
                            <div className="bg-white p-4 rounded-lg border border-gray-200">
                              <h4 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                                <TrendingUp className="w-4 h-4 text-purple-600" />
                                Ïû•Í∏∞ Ï†ÑÎûµ (1-6Í∞úÏõî)
                              </h4>
                              <div className="prose prose-sm max-w-none prose-gray">
                                <AIAnalysisMarkdownRenderer 
                                  content={`**Ï†ÑÎ¨∏Ï†ÅÏù∏ Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨**: Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨ ÌîÑÎ°úÍ∑∏Îû® Ï∞∏Ïó¨ Î∞è Ï†ÑÎ¨∏Í∞Ä ÏÉÅÎã¥

**Ï†ïÍ∏∞Ï†ÅÏù∏ Í±¥Í∞ï Î™®ÎãàÌÑ∞ÎßÅ**: Í±¥Í∞ï Í≤ÄÏßÑ Î∞è Ïä§Ìä∏Î†àÏä§ ÏàòÏ§Ä ÏßÄÏÜçÏ†Å Î™®ÎãàÌÑ∞ÎßÅ

**ÎùºÏù¥ÌîÑÏä§ÌÉÄÏùº Ï†ÑÎ∞òÏ†Å Í∞úÏÑ†**: ÏãùÏäµÍ¥Ä, Ïö¥Îèô, Ï∑®ÎØ∏ ÌôúÎèô Îì± Ï†ÑÎ∞òÏ†Å ÏÉùÌôú Ìå®ÌÑ¥ Í∞úÏÑ†

**Ïã¨Î¶¨Ï†Å ÏßÄÏõê Ï≤¥Í≥Ñ**: Ïã¨Î¶¨ ÏÉÅÎã¥ ÎòêÎäî ÏΩîÏπ≠ ÌîÑÎ°úÍ∑∏Îû®ÏùÑ ÌÜµÌïú Ïû•Í∏∞Ï†Å Ï†ïÏã†Í±¥Í∞ï Í¥ÄÎ¶¨`}
                                  variant="compact"
                                />
                              </div>
                            </div>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  )}
                </div>
              </div>
            </CardContent>
          )}
        </Card>

        {/* 3Îã®Í≥Ñ: Ï†ïÏã† Í±¥Í∞ï ÏúÑÌóòÎèÑ Î∂ÑÏÑù */}
        <Card className="bg-white border-gray-200 shadow-sm">
          <CardHeader 
            className="cursor-pointer hover:bg-gray-50 transition-colors border-b border-gray-200"
            onClick={() => setExpandedSections(prev => ({
              ...prev,
              mentalHealthRisk: !prev.mentalHealthRisk
            }))}
          >
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-full bg-purple-100 flex items-center justify-center">
                  <span className="text-purple-600 font-semibold text-sm">3</span>
                </div>
                <div>
                  <CardTitle className="text-lg text-gray-900">Ï†ïÏã† Í±¥Í∞ï ÏúÑÌóòÎèÑ Î∂ÑÏÑù</CardTitle>
                  <CardDescription className="text-gray-600">
                    Ïö∞Ïö∏, ADHD, Î≤àÏïÑÏõÉ, Ï∂©ÎèôÏÑ± ÏúÑÌóòÎèÑ ÌèâÍ∞Ä
                  </CardDescription>
                </div>
              </div>
              {expandedSections.mentalHealthRisk ? (
                <ChevronUp className="w-5 h-5 text-gray-500" />
              ) : (
                <ChevronDown className="w-5 h-5 text-gray-500" />
              )}
            </div>
          </CardHeader>
          
          {expandedSections.mentalHealthRisk && (
            <CardContent className="p-6 bg-white">
              <div className="space-y-6">
                {/* Ï¢ÖÌï© ÏúÑÌóòÎèÑ ÌèâÍ∞Ä */}
                <Card className="border border-gray-200">
                  <CardHeader className="bg-white border-b border-gray-200">
                    <CardTitle className="flex items-center gap-2 text-gray-900">
                      Ï¢ÖÌï© ÏúÑÌóòÎèÑ ÌèâÍ∞Ä
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="p-4">
                    <div className="space-y-4">
                      {/* Ï†ÑÏ≤¥ ÏúÑÌóòÎèÑ Ï†êÏàò Í≥ÑÏÇ∞ - PDFÏôÄ ÎèôÏùºÌïú Î∞©Ïãù */}
                      {(() => {
                        const riskData = {
                          depression: analysisResult.detailedAnalysis?.mentalHealthRisk?.depression?.riskScore || 25,
                          adhd: analysisResult.detailedAnalysis?.mentalHealthRisk?.adhd?.riskScore || 30,
                          burnout: analysisResult.detailedAnalysis?.mentalHealthRisk?.burnout?.riskScore || 35,
                          impulsivity: analysisResult.detailedAnalysis?.mentalHealthRisk?.impulsivity?.riskScore || 28
                        };
                        const overallRisk = Math.max(...Object.values(riskData));
                                                  const riskLevel = overallRisk < 5 ? 'ÏúÑÌóò' : overallRisk < 25 ? 'Í≤ΩÍ≥Ñ' : overallRisk < 75 ? 'Î≥¥ÌÜµ' : overallRisk < 95 ? 'ÏñëÌò∏' : 'Ïö∞Ïàò';
                                                      const riskColor = overallRisk < 5 ? 'text-red-600' : overallRisk < 25 ? 'text-orange-600' : overallRisk < 75 ? 'text-yellow-600' : overallRisk < 95 ? 'text-green-600' : 'text-blue-600';
                        
                        return (
                          <div className="space-y-4">
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-gray-700">Ï†ÑÏ≤¥ ÏúÑÌóòÎèÑ Ï†êÏàò</span>
                              <span className={`text-lg font-bold ${riskColor}`}>
                                {overallRisk.toFixed(1)}/100
                              </span>
                            </div>
                            {/* Í∞úÏÑ†Îêú Progress Bar */}
                            <div className="space-y-2">
                              <div className="relative">
                                {/* Ï†ÑÏ≤¥ Íµ¨Í∞Ñ ÏÉâÏÉÅ ÌëúÏãú (Í≥†Ï†ï) */}
                                                            <div className="w-full h-4 overflow-hidden bg-gradient-to-r from-red-500 via-orange-400 via-yellow-400 via-green-400 to-blue-500">
                              {/* Íµ¨Í∞Ñ Í≤ΩÍ≥ÑÏÑ† - 5Îã®Í≥Ñ */}
                              <div className="absolute top-0 left-[5%] w-px h-4 bg-white opacity-50"></div>
                              <div className="absolute top-0 left-[25%] w-px h-4 bg-white opacity-50"></div>
                              <div className="absolute top-0 left-[75%] w-px h-4 bg-white opacity-50"></div>
                              <div className="absolute top-0 left-[95%] w-px h-4 bg-white opacity-50"></div>
                            </div>
                                
                                {/* ÌòÑÏû¨ ÏúÑÏπò ÎßàÏª§ */}
                                <div 
                                  className="absolute top-0 w-1 h-4 bg-gray-900 transition-all duration-500 shadow-lg"
                                  style={{ left: `${overallRisk}%`, transform: 'translateX(-50%)' }}
                                />
                                
                                {/* ÌòÑÏû¨ ÏúÑÏπò ÌëúÏãúÏ†ê */}
                                <div 
                                  className="absolute top-1/2 w-3 h-3 bg-white border-2 border-gray-900 transition-all duration-500 shadow-lg"
                                  style={{ left: `${overallRisk}%`, transform: 'translate(-50%, -50%)' }}
                                />
                                
                                {/* Ï†êÏàò Î∞è ÏÉÅÌÉú ÌëúÏãú Ìà¥ÌåÅ */}
                                <div 
                                  className="absolute -top-12 bg-gray-900 text-white text-xs px-2 py-1 rounded shadow-lg whitespace-nowrap transition-all duration-500"
                                  style={{ left: `${overallRisk}%`, transform: 'translateX(-50%)' }}
                                >
                                  <div className="text-center">
                                    <div className="font-bold">{overallRisk.toFixed(1)}Ï†ê</div>
                                    <div className="text-xs opacity-90">
                                      {overallRisk < 5 ? 'ÏúÑÌóò' : overallRisk < 25 ? 'Í≤ΩÍ≥Ñ' : overallRisk < 75 ? 'Î≥¥ÌÜµ' : overallRisk < 95 ? 'ÏñëÌò∏' : 'Ïö∞Ïàò'}
                                    </div>
                                  </div>
                                  {/* ÌôîÏÇ¥Ìëú */}
                                  <div className="absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-2 border-r-2 border-t-4 border-transparent border-t-gray-900"></div>
                                </div>
                              </div>
                              
                              {/* Íµ¨Í∞Ñ ÎùºÎ≤® */}
                              <div className="flex justify-between text-xs text-gray-600 px-1">
                                                            <span className="text-red-600 font-medium">ÏúÑÌóò (0-5)</span>
                            <span className="text-orange-600 font-medium">Í≤ΩÍ≥Ñ (5-25)</span>
                            <span className="text-yellow-600 font-medium">Î≥¥ÌÜµ (25-75)</span>
                            <span className="text-green-600 font-medium">ÏñëÌò∏ (75-95)</span>
                            <span className="text-blue-600 font-medium">Ïö∞Ïàò (95-100)</span>
                              </div>
                            </div>
                            <div className={`text-sm font-medium ${riskColor}`}>
                              ÏúÑÌóò ÏàòÏ§Ä: {riskLevel}
                            </div>
                            
                            <div className="bg-purple-50 rounded-lg p-3">
                              <h5 className="font-medium text-purple-800 mb-2">üß† Ï†ïÏã†Í±¥Í∞ï Ï†ÑÎ¨∏Í∞Ä Í∂åÏû•ÏÇ¨Ìï≠</h5>
                              <div className="prose prose-sm max-w-none prose-purple mb-3">
                                <AIAnalysisMarkdownRenderer 
                                  content="**Ï¢ÖÌï© ÏúÑÌóòÎèÑ ÌèâÍ∞Ä:** ÌòÑÏû¨ Ï†ïÏã†Í±¥Í∞ï ÏÉÅÌÉúÎäî Îã§Í∞ÅÏ†Å Î™®ÎãàÌÑ∞ÎßÅÏù¥ ÌïÑÏöîÌïú ÏàòÏ§ÄÏûÖÎãàÎã§. ÎáåÌåå(EEG) Î∞è Ïã¨ÌòàÍ¥Ä(PPG) Î∞îÏù¥Ïò§ÎßàÏª§Î•º Ï¢ÖÌï©ÌïòÏó¨ Í∞úÏù∏Î≥Ñ ÎßûÏ∂§Ìòï Í¥ÄÎ¶¨ Î∞©ÏïàÏùÑ Ï†úÏãúÌï©ÎãàÎã§."
                                  variant="compact"
                                />
                              </div>
                              
                              <div className="grid grid-cols-1 gap-3 text-sm">
                                <div className="bg-blue-50 p-3 rounded-lg">
                                  <div className="font-medium text-blue-800 mb-1">üîµ Ïö∞Ïö∏ ÏòàÎ∞© Í¥ÄÎ¶¨</div>
                                  <div className="prose prose-xs max-w-none prose-blue">
                                    <AIAnalysisMarkdownRenderer 
                                      content="Ï†ÑÎëêÏóΩ ÏïåÌåå ÎπÑÎåÄÏπ≠ÏÑ±Í≥º ÏÑ∏ÌÉÄÌåå ÌôúÎèô Ìå®ÌÑ¥ÏùÑ ÌÜµÌïú Ï°∞Í∏∞ Í∞êÏßÄ Î∞è Ïù∏ÏßÄÌñâÎèôÏπòÎ£å Í∏∞Î∞ò Í∞úÏûÖ"
                                      variant="compact"
                                    />
                                  </div>
                                </div>
                                
                                <div className="bg-green-50 p-3 rounded-lg">
                                  <div className="font-medium text-green-800 mb-1">üéØ ÏßëÏ§ëÎ†• Ìñ•ÏÉÅ Í¥ÄÎ¶¨</div>
                                  <div className="prose prose-xs max-w-none prose-green">
                                    <AIAnalysisMarkdownRenderer 
                                      content="Ï£ºÏùòÏßëÏ§ë ÏßÄÏàòÏôÄ Í≥ºÌôúÏÑ± ÏßÄÏàò ÏµúÏ†ÅÌôîÎ•º ÌÜµÌïú Ïã§ÌñâÍ∏∞Îä• Í∞ïÌôî Î∞è ÏûêÍ∏∞Ï°∞Ï†àÎä•Î†• Ìñ•ÏÉÅ"
                                      variant="compact"
                                    />
                                  </div>
                                </div>
                                
                                <div className="bg-orange-50 p-3 rounded-lg">
                                  <div className="font-medium text-orange-800 mb-1">üî• Î≤àÏïÑÏõÉ ÏòàÎ∞© Í¥ÄÎ¶¨</div>
                                  <div className="prose prose-xs max-w-none prose-orange">
                                    <AIAnalysisMarkdownRenderer 
                                      content="Ïä§Ìä∏Î†àÏä§ Ìò∏Î•¥Î™¨ Ï°∞Ï†àÍ≥º ÌöåÎ≥µÌÉÑÎ†•ÏÑ± Í∞ïÌôîÎ•º ÌÜµÌïú ÎßåÏÑ± ÌîºÎ°ú Î∞è Ï†ïÏÑúÏ†Å ÏÜåÏßÑ ÏòàÎ∞©"
                                      variant="compact"
                                    />
                                  </div>
                                </div>
                                
                                <div className="bg-purple-50 p-3 rounded-lg">
                                  <div className="font-medium text-purple-800 mb-1">‚ö° Ï∂©ÎèôÏÑ± Ï°∞Ï†à Í¥ÄÎ¶¨</div>
                                  <div className="prose prose-xs max-w-none prose-purple">
                                    <AIAnalysisMarkdownRenderer 
                                      content="Ï†ÑÏ†ÑÎëêÌîºÏßà ÌôúÏÑ±Ìôî ÌõàÎ†®Í≥º ÏñµÏ†ú Ï°∞Ï†à Îä•Î†• Ìñ•ÏÉÅÏùÑ ÌÜµÌïú ÌñâÎèô Ï°∞Ï†àÎ†• Í∞ïÌôî"
                                      variant="compact"
                                    />
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        );
                      })()}
                    </div>
                  </CardContent>
                </Card>

                {/* Í∞úÎ≥Ñ ÏúÑÌóòÎèÑ Î∂ÑÏÑù - 2x2 Í∑∏Î¶¨Îìú */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {/* Ïö∞Ïö∏ ÏúÑÌóòÎèÑ */}
                {analysisResult.detailedAnalysis?.mentalHealthRisk?.depression && (
                  <Card className={`${
                    analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 
                      ? 'bg-red-50 border-red-200' 
                      : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 
                      ? 'bg-yellow-50 border-yellow-200' 
                      : 'bg-white border-gray-200'
                  }`}>
                    <CardHeader className="pb-3">
                      <div className="flex items-center justify-between">
                        <div>
                          <CardTitle className={`flex items-center gap-2 ${
                            analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 
                              ? 'text-red-900' 
                              : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 
                              ? 'text-yellow-900' 
                              : 'text-gray-900'
                          }`}>
                            <Brain className={`w-5 h-5 ${
                              analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 
                                ? 'text-red-600' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 
                                ? 'text-yellow-600' 
                                : 'text-gray-600'
                            }`} />
                            Ïö∞Ïö∏ÏúÑÌóòÎèÑ Î∂ÑÏÑù
                      </CardTitle>
                        </div>
                        <div className="text-right">
                          <div className="text-lg font-bold text-gray-900">
                            {Math.round(analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore)}/100
                          </div>
                          <Badge 
                            variant="outline" 
                            className={
                              analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore <= 30
                                ? 'border-green-300 text-green-700 bg-green-50' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore <= 50
                                ? 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                : 'border-red-300 text-red-700 bg-red-50'
                            }
                          >
                            {analysisResult.detailedAnalysis.mentalHealthRisk.depression.status || 
                             (analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 ? 'ÏúÑÌóò' : 
                              analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 ? 'Í≤ΩÍ≥Ñ' : 'Ï†ïÏÉÅ')}
                          </Badge>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      {/* Í∑∏ÎûòÌîÑ */}
                      <div className="flex justify-center">
                        <div className="w-96 h-96">
                          <MentalHealthRiskChart
                            value={analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore}
                            label="Ïö∞Ïö∏"
                          />
                        </div>
                      </div>
                      
                      {/* ÌïòÎã®: Ìï¥ÏÑù */}
                      <div className="border-t border-gray-200 pt-3">
                        <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                        <p className="text-sm text-gray-600 leading-relaxed">
                        <AIAnalysisMarkdownRenderer content={analysisResult.detailedAnalysis.mentalHealthRisk.depression.analysis} />
                        </p>
                      </div>
                      
                      {/* ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ï†ÑÎëêÏóΩ ÏïåÌåå ÎπÑÎåÄÏπ≠ÏÑ±:** ${report.measurementData.eegMetrics.hemisphericBalance?.value > 0 ? 'Ï¢åÎáå Ïö∞ÏÑ∏' : 'Ïö∞Îáå Ïö∞ÏÑ∏'} (${Math.abs(report.measurementData.eegMetrics.hemisphericBalance?.value || 0).toFixed(2)})\n\n**ÏÑ∏ÌÉÄÌåå ÌôúÎèô:** ${report.measurementData.eegMetrics.focusIndex?.value < 2.0 ? 'Ï¶ùÍ∞Ä' : 'Ï†ïÏÉÅ'} - Ïö∞Ïö∏ Í¥ÄÎ†® Ïã†Í≤Ω ÌôúÎèô Ìå®ÌÑ¥ Î∂ÑÏÑù\n\n**Í∞êÏ†ï Ï°∞Ï†à ÏßÄÏàò:** ${report.measurementData.eegMetrics.relaxationIndex?.value || 0.2} - Ï†ïÏÑúÏ†Å ÏïàÏ†ïÏÑ± ÌèâÍ∞Ä`} />
                        </div>
                      </div>
                      
                      {/* PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.depression.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑ(RMSSD):** ${report.measurementData.ppgMetrics.rmssd?.value || 229}ms - ÏûêÏú®Ïã†Í≤ΩÍ≥Ñ ÌôúÏÑ±ÎèÑ\n\n**Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µÎ†•:** ${report.measurementData.ppgMetrics.rmssd?.value > 50 ? 'Ïö∞Ïàò' : 'Î≥¥ÌÜµ'} - Ï†ïÏÑúÏ†Å ÌöåÎ≥µ Îä•Î†• ÌèâÍ∞Ä\n\n**ÍµêÍ∞êÏã†Í≤Ω ÌôúÏÑ±ÎèÑ:** ${report.measurementData.ppgMetrics.lfHfRatio?.value > 5 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Ïö∞Ïö∏ Í¥ÄÎ†® ÏÉùÎ¶¨Ï†Å Î≥ÄÌôî`} />
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* ADHD/ÏßëÏ§ëÎ†• ÏúÑÌóòÎèÑ */}
                {analysisResult.detailedAnalysis?.mentalHealthRisk?.adhd && (
                  <Card className={`${
                    analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 
                      ? 'bg-red-50 border-red-200' 
                      : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 
                      ? 'bg-yellow-50 border-yellow-200' 
                      : 'bg-white border-gray-200'
                  }`}>
                    <CardHeader className="pb-3">
                      <div className="flex items-center justify-between">
                        <div>
                          <CardTitle className={`flex items-center gap-2 ${
                            analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 
                              ? 'text-red-900' 
                              : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 
                              ? 'text-yellow-900' 
                              : 'text-gray-900'
                          }`}>
                            <Target className={`w-5 h-5 ${
                              analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 
                                ? 'text-red-600' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 
                                ? 'text-yellow-600' 
                                : 'text-gray-600'
                            }`} />
                            ADHD/ÏßëÏ§ëÎ†• ÏúÑÌóòÎèÑ Î∂ÑÏÑù
                      </CardTitle>
                        </div>
                        <div className="text-right">
                          <div className="text-lg font-bold text-gray-900">
                            {Math.round(analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore)}/100
                          </div>
                          <Badge 
                            variant="outline" 
                            className={
                              analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore <= 30
                                ? 'border-green-300 text-green-700 bg-green-50' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore <= 50
                                ? 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                : 'border-red-300 text-red-700 bg-red-50'
                            }
                          >
                            {analysisResult.detailedAnalysis.mentalHealthRisk.adhd.status || 
                             (analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 ? 'ÏúÑÌóò' : 
                              analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 ? 'Í≤ΩÍ≥Ñ' : 'Ï†ïÏÉÅ')}
                          </Badge>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      {/* Í∑∏ÎûòÌîÑ */}
                      <div className="flex justify-center">
                        <div className="w-96 h-96">
                          <MentalHealthRiskChart
                            value={analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore}
                            label="ÏßëÏ§ëÎ†•"
                          />
                        </div>
                      </div>
                      
                      {/* ÌïòÎã®: Ìï¥ÏÑù */}
                      <div className="border-t border-gray-200 pt-3">
                        <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                        <p className="text-sm text-gray-600 leading-relaxed">
                        <AIAnalysisMarkdownRenderer content={analysisResult.detailedAnalysis.mentalHealthRisk.adhd.analysis} />
                        </p>
                      </div>
                      
                      {/* ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ï£ºÏùòÏßëÏ§ë ÏßÄÏàò:** ${report.measurementData.eegMetrics.focusIndex?.value || 2.02} - ÏßëÏ§ëÎ†• ÏÉÅÌÉú ÌèâÍ∞Ä\n\n**Î≤†ÌÉÄÌåå ÌôúÎèô:** ${report.measurementData.eegMetrics.focusIndex?.value > 2.4 ? 'Í≥ºÌôúÏÑ±' : 'Ï†ïÏÉÅ'} - ADHD Í¥ÄÎ†® ÎáåÌåå Ìå®ÌÑ¥\n\n**Ïù∏ÏßÄ Î∂ÄÌïò ÏßÄÏàò:** ${report.measurementData.eegMetrics.stressIndex?.value || 3.2} - Ï†ïÎ≥¥ Ï≤òÎ¶¨ Îä•Î†• ÌèâÍ∞Ä`} />
                        </div>
                      </div>
                      
                      {/* PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.adhd.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑ(SDNN):** ${report.measurementData.ppgMetrics.sdnn?.value || 188}ms - ÏûêÏú®Ïã†Í≤Ω Ï°∞Ï†à Îä•Î†•\n\n**Í∞ÅÏÑ± ÏàòÏ§Ä:** ${report.measurementData.ppgMetrics.heartRate?.value > 80 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Í≥ºÌôúÏÑ± ÏÉÅÌÉú ÌèâÍ∞Ä\n\n**Ïä§Ìä∏Î†àÏä§ Î∞òÏùëÏÑ±:** ${report.measurementData.ppgMetrics.lfHfRatio?.value > 8 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Ï∂©ÎèôÏÑ± Í¥ÄÎ†® ÏÉùÎ¶¨Ï†Å ÏßÄÌëú`} />
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* Î≤àÏïÑÏõÉ ÏúÑÌóòÎèÑ */}
                {analysisResult.detailedAnalysis?.mentalHealthRisk?.burnout && (
                  <Card className={`${
                    analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 
                      ? 'bg-red-50 border-red-200' 
                      : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 
                      ? 'bg-yellow-50 border-yellow-200' 
                      : 'bg-white border-gray-200'
                  }`}>
                    <CardHeader className="pb-3">
                      <div className="flex items-center justify-between">
                        <div>
                          <CardTitle className={`flex items-center gap-2 ${
                            analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 
                              ? 'text-red-900' 
                              : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 
                              ? 'text-yellow-900' 
                              : 'text-gray-900'
                          }`}>
                            <Flame className={`w-5 h-5 ${
                              analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 
                                ? 'text-red-600' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 
                                ? 'text-yellow-600' 
                                : 'text-gray-600'
                            }`} />
                            Î≤àÏïÑÏõÉ ÏúÑÌóòÎèÑ Î∂ÑÏÑù
                      </CardTitle>
                        </div>
                        <div className="text-right">
                          <div className="text-lg font-bold text-gray-900">
                            {Math.round(analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore)}/100
                          </div>
                          <Badge 
                            variant="outline" 
                            className={
                              analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore <= 30
                                ? 'border-green-300 text-green-700 bg-green-50' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore <= 50
                                ? 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                : 'border-red-300 text-red-700 bg-red-50'
                            }
                          >
                            {analysisResult.detailedAnalysis.mentalHealthRisk.burnout.status || 
                             (analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 ? 'ÏúÑÌóò' : 
                              analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 ? 'Í≤ΩÍ≥Ñ' : 'Ï†ïÏÉÅ')}
                          </Badge>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      {/* Í∑∏ÎûòÌîÑ */}
                      <div className="flex justify-center">
                        <div className="w-96 h-96">
                          <MentalHealthRiskChart
                            value={analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore}
                            label="Î≤àÏïÑÏõÉ"
                          />
                        </div>
                      </div>
                      
                      {/* ÌïòÎã®: Ìï¥ÏÑù */}
                      <div className="border-t border-gray-200 pt-3">
                        <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                        <p className="text-sm text-gray-600 leading-relaxed">
                        <AIAnalysisMarkdownRenderer content={analysisResult.detailedAnalysis.mentalHealthRisk.burnout.analysis} />
                        </p>
                      </div>
                      
                      {/* ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò:** ${report.measurementData.eegMetrics.stressIndex?.value || 3.2} - ÎßåÏÑ± Ïä§Ìä∏Î†àÏä§ ÏÉÅÌÉú ÌèâÍ∞Ä\n\n**ÌîºÎ°úÎèÑ ÏßÄÏàò:** ${report.measurementData.eegMetrics.relaxationIndex?.value < 0.18 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Ï†ïÏã†Ï†Å ÌîºÎ°ú ÏÉÅÌÉú\n\n**ÌöåÎ≥µÎ†• ÏßÄÏàò:** ${report.measurementData.eegMetrics.relaxationIndex?.value || 0.2} - Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µ Îä•Î†• ÌèâÍ∞Ä`} />
                        </div>
                      </div>
                      
                      {/* PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.burnout.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**ÏΩîÌã∞ÏÜî Î∞òÏùëÏÑ±:** ${report.measurementData.ppgMetrics.lfHfRatio?.value > 10 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Ïä§Ìä∏Î†àÏä§ Ìò∏Î•¥Î™¨ ÌôúÏÑ±ÎèÑ\n\n**ÌöåÎ≥µÌÉÑÎ†•ÏÑ±:** ${report.measurementData.ppgMetrics.rmssd?.value > 100 ? 'Ïö∞Ïàò' : 'Î≥¥ÌÜµ'} - ÎßåÏÑ± ÌîºÎ°ú ÎåÄÏùë Îä•Î†•\n\n**ÏûêÏú®Ïã†Í≤Ω ÏÜåÏßÑÎèÑ:** ${report.measurementData.ppgMetrics.sdnn?.value < 50 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Î≤àÏïÑÏõÉ Í¥ÄÎ†® ÏÉùÎ¶¨Ï†Å Î≥ÄÌôî`} />
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* Ï∂©ÎèôÏÑ± ÏúÑÌóòÎèÑ */}
                {analysisResult.detailedAnalysis?.mentalHealthRisk?.impulsivity && (
                  <Card className={`${
                    analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 
                      ? 'bg-red-50 border-red-200' 
                      : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 
                      ? 'bg-yellow-50 border-yellow-200' 
                      : 'bg-white border-gray-200'
                  }`}>
                    <CardHeader className="pb-3">
                      <div className="flex items-center justify-between">
                        <div>
                          <CardTitle className={`flex items-center gap-2 ${
                            analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 
                              ? 'text-red-900' 
                              : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 
                              ? 'text-yellow-900' 
                              : 'text-gray-900'
                          }`}>
                            <Zap className={`w-5 h-5 ${
                              analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 
                                ? 'text-red-600' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 
                                ? 'text-yellow-600' 
                                : 'text-gray-600'
                            }`} />
                            Ï∂©ÎèôÏÑ± ÏúÑÌóòÎèÑ Î∂ÑÏÑù
                      </CardTitle>
                        </div>
                        <div className="text-right">
                          <div className="text-lg font-bold text-gray-900">
                            {Math.round(analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore)}/100
                          </div>
                          <Badge 
                            variant="outline" 
                            className={
                              analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore <= 30
                                ? 'border-green-300 text-green-700 bg-green-50' 
                                : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore <= 50
                                ? 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                : 'border-red-300 text-red-700 bg-red-50'
                            }
                          >
                            {analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.status || 
                             (analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 ? 'ÏúÑÌóò' : 
                              analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 ? 'Í≤ΩÍ≥Ñ' : 'Ï†ïÏÉÅ')}
                          </Badge>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      {/* Í∑∏ÎûòÌîÑ */}
                      <div className="flex justify-center">
                        <div className="w-96 h-96">
                          <MentalHealthRiskChart
                            value={analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore}
                            label="Ï∂©ÎèôÏÑ±"
                          />
                        </div>
                      </div>
                      
                      {/* ÌïòÎã®: Ìï¥ÏÑù */}
                      <div className="border-t border-gray-200 pt-3">
                        <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                        <p className="text-sm text-gray-600 leading-relaxed">
                        <AIAnalysisMarkdownRenderer content={analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.analysis} />
                        </p>
                      </div>
                      
                      {/* ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ï†ÑÏ†ÑÎëêÌîºÏßà ÌôúÏÑ±ÎèÑ:** ${report.measurementData.eegMetrics.focusIndex?.value < 1.8 ? 'Ï†ÄÌïò' : 'Ï†ïÏÉÅ'} - ÏñµÏ†ú Ï°∞Ï†à Îä•Î†•\n\n**Ï∂©Îèô ÏñµÏ†ú ÏßÄÏàò:** ${report.measurementData.eegMetrics.hemisphericBalance?.value || -0.04} - ÌñâÎèô Ï°∞Ï†à Îä•Î†• ÌèâÍ∞Ä\n\n**Í∞êÏ†ï Ï°∞Ï†à Îä•Î†•:** ${report.measurementData.eegMetrics.relaxationIndex?.value || 0.2} - Ï†ïÏÑúÏ†Å Ï∂©ÎèôÏÑ± Í¥ÄÎ¶¨`} />
                        </div>
                      </div>
                      
                      {/* PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 
                          ? 'border-red-100' 
                          : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 
                          ? 'border-yellow-100' 
                          : 'border-gray-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 50 
                            ? 'text-red-900' 
                            : analysisResult.detailedAnalysis.mentalHealthRisk.impulsivity.riskScore > 30 
                            ? 'text-yellow-900' 
                            : 'text-gray-900'
                        }`}>PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ïã¨Î∞ïÏàò Î≥ÄÎèôÏÑ±:** ${report.measurementData.ppgMetrics.heartRate?.value > 90 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Í∞ÅÏÑ± ÏÉÅÌÉú ÌèâÍ∞Ä\n\n**ÍµêÍ∞êÏã†Í≤Ω Í≥ºÌôúÏÑ±:** ${report.measurementData.ppgMetrics.lfHfRatio?.value > 12 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Ï∂©ÎèôÏ†Å Î∞òÏùëÏÑ±\n\n**ÏûêÍ∏∞Ï°∞Ï†à Îä•Î†•:** ${report.measurementData.ppgMetrics.rmssd?.value > 150 ? 'Ïö∞Ïàò' : 'Î≥¥ÌÜµ'} - ÌñâÎèô Ï°∞Ï†àÎ†• ÌèâÍ∞Ä`} />
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}

                {/* Ïä§Ìä∏Î†àÏä§ ÏúÑÌóòÎèÑ */}
                {analysisResult.detailedAnalysis?.mentalHealthRisk && (
                  <Card className={`${
                    75 >= 80 ? 'bg-white border-gray-200' : 75 >= 70 ? 'bg-yellow-50 border-yellow-200' : 'bg-red-50 border-red-200'
                  }`}>
                    <CardHeader className="pb-3">
                      <div className="flex items-center justify-between">
                        <div>
                          <CardTitle className={`flex items-center gap-2 ${
                            75 >= 80 ? 'text-gray-900' : 75 >= 70 ? 'text-yellow-900' : 'text-red-900'
                          }`}>
                            <Zap className={`w-5 h-5 ${
                              75 >= 80 ? 'text-gray-600' : 75 >= 70 ? 'text-yellow-600' : 'text-red-600'
                            }`} />
                            Ïä§Ìä∏Î†àÏä§ ÏúÑÌóòÎèÑ Î∂ÑÏÑù
                          </CardTitle>
                        </div>
                        <div className="text-right">
                          <div className="text-lg font-bold text-gray-900">
                            {Math.round(100 - 75)}/100
                          </div>
                          <Badge 
                            variant="outline" 
                            className={
                              75 >= 80
                                ? 'border-green-300 text-green-700 bg-green-50' 
                                : 75 >= 70
                                ? 'border-yellow-300 text-yellow-700 bg-yellow-50'
                                : 'border-red-300 text-red-700 bg-red-50'
                            }
                          >
                            {75 >= 80 ? 'Ï†ïÏÉÅ' : 75 >= 70 ? 'Í≤ΩÍ≥Ñ' : 'ÏúÑÌóò'}
                          </Badge>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      {/* Í∑∏ÎûòÌîÑ */}
                      <div className="flex justify-center">
                        <div className="w-96 h-96">
                          <MentalHealthRiskChart
                            value={100 - 75}
                            label="Ïä§Ìä∏Î†àÏä§"
                          />
                        </div>
                      </div>
                      
                      {/* ÌïòÎã®: Ìï¥ÏÑù */}
                      <div className="border-t border-gray-200 pt-3">
                        <h5 className="text-sm font-medium text-gray-700 mb-2">ÏùòÌïôÏ†Å Ìï¥ÏÑù</h5>
                        <p className="text-sm text-gray-600 leading-relaxed">
                          <AIAnalysisMarkdownRenderer content="ÎáåÌåå Ïä§Ìä∏Î†àÏä§ ÏßÄÏàòÏôÄ ÏûêÏú®Ïã†Í≤Ω Í∑†Ìòï ÏÉÅÌÉúÎ•º Ï¢ÖÌï©Ï†ÅÏúºÎ°ú Î∂ÑÏÑùÌïòÏó¨ Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ†® ÏúÑÌóòÎèÑÎ•º ÌèâÍ∞ÄÌï©ÎãàÎã§. Î≤†ÌÉÄÌååÏôÄ Í∞êÎßàÌååÏùò ÎπÑÏú®, HRV ÏßÄÌëúÎ•º ÌÜµÌï¥ Ï†ïÏã†Ï†Å Í∏¥Ïû•ÎèÑÏôÄ ÌöåÎ≥µÎ†•ÏùÑ Ï∏°Ï†ïÌï©ÎãàÎã§." />
                        </p>
                      </div>
                      
                      {/* ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        75 >= 80 ? 'border-gray-100' : 75 >= 70 ? 'border-yellow-100' : 'border-red-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          75 >= 80 ? 'text-gray-900' : 75 >= 70 ? 'text-yellow-900' : 'text-red-900'
                        }`}>ÎáåÌåå Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**Ïä§Ìä∏Î†àÏä§ ÏßÄÏàò:** ${report.measurementData.eegMetrics.stressIndex?.value || 3.2} - ÎßåÏÑ± Ïä§Ìä∏Î†àÏä§ ÏÉÅÌÉú ÌèâÍ∞Ä\n\n**ÌîºÎ°úÎèÑ ÏßÄÏàò:** ${report.measurementData.eegMetrics.relaxationIndex?.value < 0.18 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Ï†ïÏã†Ï†Å ÌîºÎ°ú ÏÉÅÌÉú\n\n**ÌöåÎ≥µÎ†• ÏßÄÏàò:** ${report.measurementData.eegMetrics.relaxationIndex?.value || 0.2} - Ïä§Ìä∏Î†àÏä§ ÌöåÎ≥µ Îä•Î†• ÌèâÍ∞Ä`} />
                        </div>
                      </div>
                      
                      {/* PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä */}
                      <div className={`border-t pt-3 ${
                        75 >= 80 ? 'border-gray-100' : 75 >= 70 ? 'border-yellow-100' : 'border-red-100'
                      }`}>
                        <h4 className={`text-sm font-medium mb-2 ${
                          75 >= 80 ? 'text-gray-900' : 75 >= 70 ? 'text-yellow-900' : 'text-red-900'
                        }`}>PPG Í∏∞Î∞ò Î∞îÏù¥Ïò§ÎßàÏª§ ÌèâÍ∞Ä</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer content={`**ÏûêÏú®Ïã†Í≤Ω Í∑†Ìòï:** ${report.measurementData.ppgMetrics.lfHfRatio?.value > 10 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Ïä§Ìä∏Î†àÏä§ Ìò∏Î•¥Î™¨ ÌôúÏÑ±ÎèÑ\n\n**ÌöåÎ≥µÌÉÑÎ†•ÏÑ±:** ${report.measurementData.ppgMetrics.rmssd?.value > 100 ? 'Ïö∞Ïàò' : 'Î≥¥ÌÜµ'} - ÎßåÏÑ± ÌîºÎ°ú ÎåÄÏùë Îä•Î†•\n\n**ÏûêÏú®Ïã†Í≤Ω ÏÜåÏßÑÎèÑ:** ${report.measurementData.ppgMetrics.sdnn?.value < 50 ? 'ÎÜíÏùå' : 'Ï†ïÏÉÅ'} - Î≤àÏïÑÏõÉ Í¥ÄÎ†® ÏÉùÎ¶¨Ï†Å ÏßÄÌëú`} />
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                )}
                </div>
              </div>
            </CardContent>
          )}
        </Card>

        {/* 4Îã®Í≥Ñ: ÏùòÌïôÏ†Å ÏúÑÌóòÎèÑ Î∂ÑÏÑù */}
        <Card className="bg-white border-gray-200 shadow-sm">
          <CardHeader 
            className="cursor-pointer hover:bg-gray-50 transition-colors border-b border-gray-200"
            onClick={() => setExpandedSections(prev => ({
              ...prev,
              medicalRiskAnalysis: !prev.medicalRiskAnalysis
            }))}
          >
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-full bg-red-100 flex items-center justify-center">
                  <span className="text-red-600 font-semibold text-sm">4</span>
                </div>
                <div>
                  <CardTitle className="text-lg text-gray-900">ÏùòÌïôÏ†Å ÏúÑÌóòÎèÑ Î∂ÑÏÑù</CardTitle>
                  <CardDescription className="text-gray-600">
                    ÏÉùÏ≤¥Ïã†Ìò∏ ÌÜµÌï© Î∂ÑÏÑù Î∞è Î≥ëÎ¶¨ÌïôÏ†Å ÏúÑÌóò ÌèâÍ∞Ä
                  </CardDescription>
                </div>
              </div>
              {expandedSections.medicalRiskAnalysis ? (
                <ChevronUp className="w-5 h-5 text-gray-500" />
              ) : (
                <ChevronDown className="w-5 h-5 text-gray-500" />
              )}
            </div>
          </CardHeader>
          
          {expandedSections.medicalRiskAnalysis && (
            <CardContent className="p-6 bg-white">
              <div className="space-y-6">
                <div className="grid grid-cols-1 gap-6">
                  {/* ÏÉùÏ≤¥Ïã†Ìò∏ ÌÜµÌï© Î∂ÑÏÑù */}
                  <Card className="bg-gray-50 border-gray-200">
                    <CardHeader>
                      <CardTitle className="flex items-center gap-2 text-gray-900">
                        <Activity className="w-5 h-5 text-green-600" />
                        ÏÉùÏ≤¥Ïã†Ìò∏ ÌÜµÌï© Î∂ÑÏÑù
                      </CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      <div>
                        <h4 className="text-sm font-medium text-blue-600 mb-2">üß† ÎáåÌåå(EEG) ÏùòÌïôÏ†Å Ìï¥ÏÑù</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer 
                            content={`**ÏïåÌååÌåå ÌôúÏÑ±ÎèÑ:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.eegMedicalInterpretation?.alphaActivity || 'Ï†ïÏÉÅ Î≤îÏúÑ'}\n\n**Î≤†ÌÉÄÌåå Ìå®ÌÑ¥:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.eegMedicalInterpretation?.betaPattern || 'ÏïàÏ†ïÏ†Å'}\n\n**Í∞êÎßàÌåå ÎèôÏ°∞:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.eegMedicalInterpretation?.gammaSync || 'ÏñëÌò∏'}\n\n**ÏùòÌïôÏ†Å ÏÜåÍ≤¨:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.eegMedicalInterpretation?.medicalFindings || 'Ï†ÑÎ∞òÏ†ÅÏù∏ Îáå ÌôúÏÑ±ÎèÑÍ∞Ä Ï†ïÏÉÅ Î≤îÏúÑ ÎÇ¥Ïóê ÏûàÏúºÎ©∞, Ïù∏ÏßÄ Í∏∞Îä• Î∞è Ï†ïÏÑú Ï°∞Ï†à Îä•Î†•Ïù¥ ÏñëÌò∏Ìïú ÏÉÅÌÉúÎ°ú ÌèâÍ∞ÄÎê©ÎãàÎã§.'}`}
                            variant="compact"
                          />
                        </div>
                      </div>
                      <div>
                        <h4 className="text-sm font-medium text-red-600 mb-2">‚ù§Ô∏è Ïã¨ÌòàÍ¥Ä(PPG) ÏùòÌïôÏ†Å Ìï¥ÏÑù</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer 
                            content={`**Ïã¨Î∞ïÎ≥ÄÏù¥ÎèÑ(HRV):** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.ppgMedicalInterpretation?.hrv || 'Ï†ïÏÉÅ'}\n\n**ÌòàÍ¥Ä ÌÉÑÏÑ±ÎèÑ:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.ppgMedicalInterpretation?.vascularElasticity || 'ÏñëÌò∏'}\n\n**ÏûêÏú®Ïã†Í≤Ω Í∑†Ìòï:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.ppgMedicalInterpretation?.autonomicBalance || 'Í∑†ÌòïÏ†Å'}\n\n**ÏùòÌïôÏ†Å ÏÜåÍ≤¨:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.biosignalIntegration?.ppgMedicalInterpretation?.medicalFindings || 'Ïã¨ÌòàÍ¥ÄÍ≥Ñ Í∏∞Îä•Ïù¥ Ï†ïÏÉÅ Î≤îÏúÑÏóê ÏûàÏúºÎ©∞, Ïä§Ìä∏Î†àÏä§ Î∞òÏùëÏÑ±Í≥º ÌöåÎ≥µÎ†•Ïù¥ Ï†ÅÏ†àÌïú ÏàòÏ§ÄÏúºÎ°ú ÌèâÍ∞ÄÎê©ÎãàÎã§.'}`}
                            variant="compact"
                          />
                        </div>
                      </div>
                    </CardContent>
                  </Card>

                  {/* Î≥ëÎ¶¨ÌïôÏ†Å ÏúÑÌóò ÏöîÏÜå ÌèâÍ∞Ä */}
                  <Card className="bg-gray-50 border-gray-200">
                    <CardHeader>
                      <CardTitle className="flex items-center gap-2 text-gray-900">
                        <Shield className="w-5 h-5 text-orange-600" />
                        Î≥ëÎ¶¨ÌïôÏ†Å ÏúÑÌóò ÏöîÏÜå ÌèâÍ∞Ä
                      </CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      <div>
                        <h4 className="text-sm font-medium text-purple-600 mb-2">üß† Ïã†Í≤ΩÌïôÏ†Å ÏúÑÌóòÎèÑ</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer 
                            content={`**ÏúÑÌóò Ï†êÏàò:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.pathologicalRiskFactors?.neurologicalRisk?.riskScore || 0}/100\n\n**ÏÑ§Î™Ö:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.pathologicalRiskFactors?.neurologicalRisk?.description || 'Ïö∞Ïö∏, ÏßëÏ§ëÎ†• Ïû•Ïï† Îì± Ïã†Í≤ΩÏ†ïÏã†ÌïôÏ†Å ÏßàÌôò Î∞úÏÉù ÏúÑÌóòÎèÑ'}`}
                            variant="compact"
                          />
                        </div>
                      </div>
                      <div>
                        <h4 className="text-sm font-medium text-red-600 mb-2">üíî Ïã¨ÌòàÍ¥Ä ÏúÑÌóòÎèÑ</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer 
                            content={`**ÏúÑÌóò Ï†êÏàò:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.pathologicalRiskFactors?.cardiovascularRisk?.riskScore || 0}/100\n\n**ÏÑ§Î™Ö:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.pathologicalRiskFactors?.cardiovascularRisk?.description || 'Í≥†ÌòàÏïï, Î∂ÄÏ†ïÎß• Îì± Ïã¨ÌòàÍ¥ÄÍ≥Ñ ÏßàÌôò Î∞úÏÉù ÏúÑÌóòÎèÑ'}`}
                            variant="compact"
                          />
                        </div>
                      </div>
                      <div>
                        <h4 className="text-sm font-medium text-orange-600 mb-2">üî• ÎåÄÏÇ¨ Ï¶ùÌõÑÍµ∞ ÏúÑÌóòÎèÑ</h4>
                        <div className="prose prose-sm max-w-none prose-gray">
                          <AIAnalysisMarkdownRenderer 
                            content={`**ÏúÑÌóò Ï†êÏàò:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.pathologicalRiskFactors?.metabolicSyndromeRisk?.riskScore || 0}/100\n\n**ÏÑ§Î™Ö:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.pathologicalRiskFactors?.metabolicSyndromeRisk?.description || 'ÎãπÎá®Î≥ë, ÎπÑÎßå Îì± ÎåÄÏÇ¨ÏÑ± ÏßàÌôò Î∞úÏÉù ÏúÑÌóòÎèÑ'}`}
                            variant="compact"
                          />
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>

                {/* ÏûÑÏÉÅÏ†Å Í∂åÍ≥†ÏÇ¨Ìï≠ */}
                <Card className="bg-gray-50 border-gray-200">
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2 text-gray-900">
                      <FileText className="w-5 h-5 text-blue-600" />
                      ÏûÑÏÉÅÏ†Å Í∂åÍ≥†ÏÇ¨Ìï≠
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <h4 className="text-sm font-medium text-green-600 mb-2">‚úÖ ÏòàÎ∞© ÏùòÌïôÏ†Å Ï†ëÍ∑º</h4>
                      <div className="prose prose-sm max-w-none prose-gray">
                        <AIAnalysisMarkdownRenderer 
                          content={`‚Ä¢ **Ï†ïÍ∏∞ Í≤ÄÏßÑ:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.clinicalRecommendations?.preventiveMedicine?.regularCheckups || '3-6Í∞úÏõî Í∞ÑÍ≤©ÏúºÎ°ú Ï†ïÏã†Í±¥Í∞ï ÏÉÅÌÉú Î™®ÎãàÌÑ∞ÎßÅ Í∂åÏû•'}\n\n‚Ä¢ **ÏÉùÌôúÏäµÍ¥Ä ÍµêÏ†ï:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.clinicalRecommendations?.preventiveMedicine?.lifestyleModifications || 'Í∑úÏπôÏ†ÅÏù∏ Ïö¥Îèô, Ï∂©Î∂ÑÌïú ÏàòÎ©¥, Í∑†ÌòïÏû°Ìûå ÏòÅÏñë ÏÑ≠Ï∑®'}\n\n‚Ä¢ **Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨:** ${analysisResult.detailedAnalysis?.medicalRiskAnalysis?.clinicalRecommendations?.preventiveMedicine?.stressManagement || 'Î™ÖÏÉÅ, ÏöîÍ∞Ä, Ïã¨Ìò∏Ìù° Îì± Ïù¥ÏôÑ Í∏∞Î≤ï Ïã§Ï≤ú'}`}
                          variant="compact"
                        />
                      </div>
                    </div>
                    <div>
                      <h4 className="text-sm font-medium text-blue-600 mb-2">üè• ÏùòÎ£åÏßÑ ÏÉÅÎã¥ Í∂åÏû• ÏÇ¨Ìï≠</h4>
                      <div className="prose prose-sm max-w-none prose-gray">
                        <AIAnalysisMarkdownRenderer 
                          content={analysisResult.detailedAnalysis?.medicalRiskAnalysis?.clinicalRecommendations?.medicalConsultation?.recommendations?.map((rec: string) => `‚Ä¢ ${rec}`).join('\n\n') || 'ÏúÑÌóòÎèÑÏóê Îî∞Î•∏ Ï∞®Îì± Í∂åÍ≥†'}
                          variant="compact"
                        />
                      </div>
                    </div>
                    <div>
                      <h4 className="text-sm font-medium text-purple-600 mb-2">üî¨ Í≥ºÌïôÏ†Å Í∑ºÍ±∞</h4>
                      <div className="prose prose-sm max-w-none prose-gray">
                        <AIAnalysisMarkdownRenderer 
                          content={analysisResult.detailedAnalysis?.medicalRiskAnalysis?.clinicalRecommendations?.scientificEvidence || 
                          'Î≥∏ Î∂ÑÏÑùÏùÄ Íµ≠Ï†ú Ï†ïÏã†ÏùòÌïôÌöå(IPA) Í∞ÄÏù¥ÎìúÎùºÏù∏Í≥º DSM-5 ÏßÑÎã® Í∏∞Ï§ÄÏùÑ Ï∞∏Ï°∞ÌïòÏó¨ ÎáåÌåå-Ïã¨ÌòàÍ¥Ä Î∞îÏù¥Ïò§ÎßàÏª§Ïùò ÏûÑÏÉÅÏ†Å Ïú†Ìö®ÏÑ±ÏùÑ Í≤ÄÏ¶ùÌïú ÏµúÏã† Ïó∞Íµ¨ Í≤∞Í≥ºÎ•º Î∞îÌÉïÏúºÎ°ú Ìï©ÎãàÎã§. (Ï∞∏Í≥†: Nature Medicine 2024, Lancet Psychiatry 2024)'}
                          variant="compact"
                        />
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </CardContent>
          )}
        </Card>

        {/* 5Îã®Í≥Ñ: ÎßûÏ∂§Ìòï Ï∂îÏ≤úÏÇ¨Ìï≠ */}
        <Card className="bg-white border-gray-200 shadow-sm">
          <CardHeader 
            className="cursor-pointer hover:bg-gray-50 transition-colors border-b border-gray-200"
            onClick={() => setExpandedSections(prev => ({
              ...prev,
              recommendations: !prev.recommendations
            }))}
          >
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-full bg-yellow-100 flex items-center justify-center">
                  <span className="text-yellow-600 font-semibold text-sm">5</span>
                </div>
                <div>
                  <CardTitle className="text-lg text-gray-900">ÎßûÏ∂§Ìòï Ï∂îÏ≤úÏÇ¨Ìï≠</CardTitle>
                  <CardDescription className="text-gray-600">
                    Í∞úÏù∏ ÎßûÏ∂§Ìòï Í±¥Í∞ï Í¥ÄÎ¶¨ Í∞ÄÏù¥Îìú
                  </CardDescription>
                </div>
              </div>
              {expandedSections.recommendations ? (
                <ChevronUp className="w-5 h-5 text-gray-500" />
              ) : (
                <ChevronDown className="w-5 h-5 text-gray-500" />
              )}
            </div>
          </CardHeader>
          
                     {expandedSections.recommendations && (
             <CardContent className="p-6 bg-white">
               {analysisResult.personalizedRecommendations ? (
                 <div className="space-y-6">
                   {/* Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò */}
                   <Card className="bg-gray-50 border-gray-200">
                     <CardHeader>
                       <CardTitle className="flex items-center gap-2 text-gray-900">
                         <CheckCircle className="w-5 h-5 text-green-600" />
                         Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú Ï°∞Ïπò
                       </CardTitle>
                     </CardHeader>
                     <CardContent className="space-y-4">
                       <div>
                         <h4 className="text-sm font-medium text-blue-600 mb-2">ÏÉùÌôúÏäµÍ¥Ä</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.immediate.lifestyle.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                       <div>
                         <h4 className="text-sm font-medium text-green-600 mb-2">Ïö¥Îèô</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.immediate.exercise.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                     </CardContent>
                   </Card>

                   {/* Îã®Í∏∞ Î™©Ìëú */}
                   <Card className="bg-gray-50 border-gray-200">
                     <CardHeader>
                       <CardTitle className="flex items-center gap-2 text-gray-900">
                         <Target className="w-5 h-5 text-orange-600" />
                         Îã®Í∏∞ Î™©Ìëú (1-4Ï£º)
                       </CardTitle>
                     </CardHeader>
                     <CardContent className="space-y-4">
                       <div>
                         <h4 className="text-sm font-medium text-blue-600 mb-2">ÏÉùÌôúÏäµÍ¥Ä</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.shortTerm.lifestyle.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                       <div>
                         <h4 className="text-sm font-medium text-orange-600 mb-2">Ïä§Ìä∏Î†àÏä§ Í¥ÄÎ¶¨</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.shortTerm.stressManagement.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                     </CardContent>
                   </Card>

                   {/* Ïû•Í∏∞ Î™©Ìëú */}
                   <Card className="bg-gray-50 border-gray-200">
                     <CardHeader>
                       <CardTitle className="flex items-center gap-2 text-gray-900">
                         <TrendingUp className="w-5 h-5 text-purple-600" />
                         Ïû•Í∏∞ Î™©Ìëú (1-3Í∞úÏõî)
                       </CardTitle>
                     </CardHeader>
                     <CardContent className="space-y-4">
                       <div>
                         <h4 className="text-sm font-medium text-purple-600 mb-2">Ï†ïÏã†Í±¥Í∞ï Í¥ÄÎ¶¨</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.longTerm.mentalCare.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                       <div>
                         <h4 className="text-sm font-medium text-pink-600 mb-2">ÏÇ¨ÌöåÏ†Å ÏßÄÏõê</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.longTerm.socialSupport.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                     </CardContent>
                   </Card>

                   {/* ÏßÅÏóÖÎ≥Ñ ÌäπÌôî Ï∂îÏ≤ú */}
                   <Card className="bg-gray-50 border-gray-200">
                     <CardHeader>
                       <CardTitle className="flex items-center gap-2 text-gray-900">
                         <Briefcase className="w-5 h-5 text-teal-600" />
                         ÏßÅÏóÖÎ≥Ñ ÌäπÌôî Ï∂îÏ≤ú
                       </CardTitle>
                     </CardHeader>
                     <CardContent className="space-y-4">
                       <div>
                         <h4 className="text-sm font-medium text-indigo-600 mb-2">ÏßÅÏû• Ï†ÑÎûµ</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.occupationSpecific.workplaceStrategies.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                       <div>
                         <h4 className="text-sm font-medium text-teal-600 mb-2">ÏãúÍ∞Ñ Í¥ÄÎ¶¨</h4>
                         <div className="prose prose-sm max-w-none prose-gray">
                           <AIAnalysisMarkdownRenderer 
                             content={analysisResult.personalizedRecommendations.occupationSpecific.timeManagement.join('\n\n')}
                             variant="compact"
                           />
                         </div>
                       </div>
                     </CardContent>
                   </Card>
                 </div>
               ) : (
                 <div className="prose prose-sm max-w-none prose-gray">
                   <AIAnalysisMarkdownRenderer 
                     content="Ï∂îÏ≤úÏÇ¨Ìï≠Ïù¥ ÏóÜÏäµÎãàÎã§."
                     variant="compact"
                   />
                 </div>
               )}
             </CardContent>
           )}
        </Card>
      </div>
    </div>
  );
};

export default ReportDetailViewer; 