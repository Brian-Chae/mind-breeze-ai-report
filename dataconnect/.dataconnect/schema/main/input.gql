"""
✨ `AIReportUsage_KeyOutput` returns the primary key fields of table type `AIReportUsage`.

It has the same format as `AIReportUsage_Key`, but is only used as mutation return value.
"""
scalar AIReportUsage_KeyOutput
"""
✨ `BioSignalSession_KeyOutput` returns the primary key fields of table type `BioSignalSession`.

It has the same format as `BioSignalSession_Key`, but is only used as mutation return value.
"""
scalar BioSignalSession_KeyOutput
"""
✨ `BusinessMetrics_KeyOutput` returns the primary key fields of table type `BusinessMetrics`.

It has the same format as `BusinessMetrics_Key`, but is only used as mutation return value.
"""
scalar BusinessMetrics_KeyOutput
"""
✨ `Company_KeyOutput` returns the primary key fields of table type `Company`.

It has the same format as `Company_Key`, but is only used as mutation return value.
"""
scalar Company_KeyOutput
"""
✨ `CompanyMember_KeyOutput` returns the primary key fields of table type `CompanyMember`.

It has the same format as `CompanyMember_Key`, but is only used as mutation return value.
"""
scalar CompanyMember_KeyOutput
"""
✨ `ConsentRecord_KeyOutput` returns the primary key fields of table type `ConsentRecord`.

It has the same format as `ConsentRecord_Key`, but is only used as mutation return value.
"""
scalar ConsentRecord_KeyOutput
"""
✨ `ConsultationUsage_KeyOutput` returns the primary key fields of table type `ConsultationUsage`.

It has the same format as `ConsultationUsage_Key`, but is only used as mutation return value.
"""
scalar ConsultationUsage_KeyOutput
"""
✨ `Contract_KeyOutput` returns the primary key fields of table type `Contract`.

It has the same format as `Contract_Key`, but is only used as mutation return value.
"""
scalar Contract_KeyOutput
"""
✨ `CreditPackage_KeyOutput` returns the primary key fields of table type `CreditPackage`.

It has the same format as `CreditPackage_Key`, but is only used as mutation return value.
"""
scalar CreditPackage_KeyOutput
"""
✨ `CreditTransaction_KeyOutput` returns the primary key fields of table type `CreditTransaction`.

It has the same format as `CreditTransaction_Key`, but is only used as mutation return value.
"""
scalar CreditTransaction_KeyOutput
"""
✨ `Device_KeyOutput` returns the primary key fields of table type `Device`.

It has the same format as `Device_Key`, but is only used as mutation return value.
"""
scalar Device_KeyOutput
"""
✨ `ManualMoodLog_KeyOutput` returns the primary key fields of table type `ManualMoodLog`.

It has the same format as `ManualMoodLog_Key`, but is only used as mutation return value.
"""
scalar ManualMoodLog_KeyOutput
"""
✨ `MeasurementSession_KeyOutput` returns the primary key fields of table type `MeasurementSession`.

It has the same format as `MeasurementSession_Key`, but is only used as mutation return value.
"""
scalar MeasurementSession_KeyOutput
"""
✨ `MentalHealthReport_KeyOutput` returns the primary key fields of table type `MentalHealthReport`.

It has the same format as `MentalHealthReport_Key`, but is only used as mutation return value.
"""
scalar MentalHealthReport_KeyOutput
"""
✨ `Organization_KeyOutput` returns the primary key fields of table type `Organization`.

It has the same format as `Organization_Key`, but is only used as mutation return value.
"""
scalar Organization_KeyOutput
"""
✨ `OrganizationMember_KeyOutput` returns the primary key fields of table type `OrganizationMember`.

It has the same format as `OrganizationMember_Key`, but is only used as mutation return value.
"""
scalar OrganizationMember_KeyOutput
"""
✨ `TrialService_KeyOutput` returns the primary key fields of table type `TrialService`.

It has the same format as `TrialService_Key`, but is only used as mutation return value.
"""
scalar TrialService_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'AIReportUsage'. It includes all necessary fields for creating or upserting rows into table.
"""
input AIReportUsage_Data {
  """
  ✨ Generated from Field `AIReportUsage`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AIReportUsage`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `AIReportUsage`.`organizationId` of type `UUID`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `AIReportUsage`.`organizationId` of type `UUID`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIReportUsage`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `AIReportUsage`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIReportUsage`.`organization` of type `Organization`
  """
  organization: Organization_Key
  """
  ✨ Generated from Field `AIReportUsage`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost` of type `Int!`
  """
  creditCost: Int
  """
  ✨ `_expr` server value variant of `creditCost` (✨ Generated from Field `AIReportUsage`.`creditCost` of type `Int!`)
  """
  creditCost_expr: Int_Expr
  """
  ✨ `_update` server value variant of `creditCost` (✨ Generated from Field `AIReportUsage`.`creditCost` of type `Int!`)
  """
  creditCost_update: [Int_Update!]
  """
  ✨ Generated from Field `AIReportUsage`.`feedback` of type `String`
  """
  feedback: String
  """
  ✨ `_expr` server value variant of `feedback` (✨ Generated from Field `AIReportUsage`.`feedback` of type `String`)
  """
  feedback_expr: String_Expr
  """
  ✨ Generated from Field `AIReportUsage`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `generatedAt` (✨ Generated from Field `AIReportUsage`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `generatedAt` (✨ Generated from Field `AIReportUsage`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `generatedAt` (✨ Generated from Field `AIReportUsage`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore` of type `Float`
  """
  qualityScore: Float
  """
  ✨ `_expr` server value variant of `qualityScore` (✨ Generated from Field `AIReportUsage`.`qualityScore` of type `Float`)
  """
  qualityScore_expr: Float_Expr
  """
  ✨ `_update` server value variant of `qualityScore` (✨ Generated from Field `AIReportUsage`.`qualityScore` of type `Float`)
  """
  qualityScore_update: [Float_Update!]
  """
  ✨ Generated from Field `AIReportUsage`.`reportContent` of type `String`
  """
  reportContent: String
  """
  ✨ `_expr` server value variant of `reportContent` (✨ Generated from Field `AIReportUsage`.`reportContent` of type `String`)
  """
  reportContent_expr: String_Expr
  """
  ✨ Generated from Field `AIReportUsage`.`reportType` of type `String!`
  """
  reportType: String
  """
  ✨ `_expr` server value variant of `reportType` (✨ Generated from Field `AIReportUsage`.`reportType` of type `String!`)
  """
  reportType_expr: String_Expr
  """
  ✨ Generated from Field `AIReportUsage`.`sessionDataId` of type `String!`
  """
  sessionDataId: String
  """
  ✨ `_expr` server value variant of `sessionDataId` (✨ Generated from Field `AIReportUsage`.`sessionDataId` of type `String!`)
  """
  sessionDataId_expr: String_Expr
}
"""
✨ Generated filter input type for table 'AIReportUsage'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIReportUsage_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [AIReportUsage_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: AIReportUsage_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [AIReportUsage_Filter!]
  """
  ✨ Generated from Field `AIReportUsage`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`organizationId` of type `UUID`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`organization` of type `Organization`
  """
  organization: Organization_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost` of type `Int!`
  """
  creditCost: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`feedback` of type `String`
  """
  feedback: String_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore` of type `Float`
  """
  qualityScore: Float_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`reportContent` of type `String`
  """
  reportContent: String_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`reportType` of type `String!`
  """
  reportType: String_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`sessionDataId` of type `String!`
  """
  sessionDataId: String_Filter
}
"""
✨ Generated first-row input type for table 'AIReportUsage'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input AIReportUsage_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [AIReportUsage_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: AIReportUsage_Filter
}
"""
✨ Generated having input type for table 'AIReportUsage'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIReportUsage_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [AIReportUsage_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: AIReportUsage_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [AIReportUsage_Having!]
  """
  ✨ Generated from Field `AIReportUsage`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost_count` of type `Int!`
  """
  creditCost_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`feedback_count` of type `Int!`
  """
  feedback_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`generatedAt_count` of type `Int!`
  """
  generatedAt_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore_count` of type `Int!`
  """
  qualityScore_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`reportContent_count` of type `Int!`
  """
  reportContent_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`reportType_count` of type `Int!`
  """
  reportType_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`sessionDataId_count` of type `Int!`
  """
  sessionDataId_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost_sum` of type `Int`
  """
  creditCost_sum: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore_sum` of type `Float`
  """
  qualityScore_sum: Float_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost_avg` of type `Float`
  """
  creditCost_avg: Float_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore_avg` of type `Float`
  """
  qualityScore_avg: Float_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost_min` of type `Int`
  """
  creditCost_min: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`generatedAt_min` of type `Timestamp`
  """
  generatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore_min` of type `Float`
  """
  qualityScore_min: Float_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost_max` of type `Int`
  """
  creditCost_max: Int_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`generatedAt_max` of type `Timestamp`
  """
  generatedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore_max` of type `Float`
  """
  qualityScore_max: Float_Filter
}
"""
✨ Generated key input type for table 'AIReportUsage'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input AIReportUsage_Key {
  """
  ✨ Generated from Field `AIReportUsage`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AIReportUsage`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'AIReportUsage'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input AIReportUsage_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: AIReportUsage_Filter
}
"""
✨ Generated order input type for table 'AIReportUsage'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input AIReportUsage_Order {
  """
  ✨ Generated from Field `AIReportUsage`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`organizationId` of type `UUID`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`organization` of type `Organization`
  """
  organization: Organization_Order
  """
  ✨ Generated from Field `AIReportUsage`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `AIReportUsage`.`creditCost` of type `Int!`
  """
  creditCost: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`feedback` of type `String`
  """
  feedback: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`qualityScore` of type `Float`
  """
  qualityScore: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`reportContent` of type `String`
  """
  reportContent: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`reportType` of type `String!`
  """
  reportType: OrderDirection
  """
  ✨ Generated from Field `AIReportUsage`.`sessionDataId` of type `String!`
  """
  sessionDataId: OrderDirection
}
"""
✨ Generated data input type for table 'BioSignalSession'. It includes all necessary fields for creating or upserting rows into table.
"""
input BioSignalSession_Data {
  """
  ✨ Generated from Field `BioSignalSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `BioSignalSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `BioSignalSession`.`deviceId` of type `UUID!`
  """
  deviceId: UUID
  """
  ✨ `_expr` server value variant of `deviceId` (✨ Generated from Field `BioSignalSession`.`deviceId` of type `UUID!`)
  """
  deviceId_expr: UUID_Expr
  """
  ✨ Generated from Field `BioSignalSession`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `BioSignalSession`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `BioSignalSession`.`device` of type `Device!`
  """
  device: Device_Key
  """
  ✨ Generated from Field `BioSignalSession`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate` of type `Float`
  """
  avgHeartRate: Float
  """
  ✨ `_expr` server value variant of `avgHeartRate` (✨ Generated from Field `BioSignalSession`.`avgHeartRate` of type `Float`)
  """
  avgHeartRate_expr: Float_Expr
  """
  ✨ `_update` server value variant of `avgHeartRate` (✨ Generated from Field `BioSignalSession`.`avgHeartRate` of type `Float`)
  """
  avgHeartRate_update: [Float_Update!]
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds` of type `Int!`
  """
  durationSeconds: Int
  """
  ✨ `_expr` server value variant of `durationSeconds` (✨ Generated from Field `BioSignalSession`.`durationSeconds` of type `Int!`)
  """
  durationSeconds_expr: Int_Expr
  """
  ✨ `_update` server value variant of `durationSeconds` (✨ Generated from Field `BioSignalSession`.`durationSeconds` of type `Int!`)
  """
  durationSeconds_update: [Int_Update!]
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency` of type `Float`
  """
  eegDominantFrequency: Float
  """
  ✨ `_expr` server value variant of `eegDominantFrequency` (✨ Generated from Field `BioSignalSession`.`eegDominantFrequency` of type `Float`)
  """
  eegDominantFrequency_expr: Float_Expr
  """
  ✨ `_update` server value variant of `eegDominantFrequency` (✨ Generated from Field `BioSignalSession`.`eegDominantFrequency` of type `Float`)
  """
  eegDominantFrequency_update: [Float_Update!]
  """
  ✨ Generated from Field `BioSignalSession`.`endTime` of type `Timestamp!`
  """
  endTime: Timestamp
  """
  ✨ `_expr` server value variant of `endTime` (✨ Generated from Field `BioSignalSession`.`endTime` of type `Timestamp!`)
  """
  endTime_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `endTime` (✨ Generated from Field `BioSignalSession`.`endTime` of type `Timestamp!`)
  """
  endTime_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `endTime` (✨ Generated from Field `BioSignalSession`.`endTime` of type `Timestamp!`)
  """
  endTime_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `BioSignalSession`.`hrvMetrics` of type `String`
  """
  hrvMetrics: String
  """
  ✨ `_expr` server value variant of `hrvMetrics` (✨ Generated from Field `BioSignalSession`.`hrvMetrics` of type `String`)
  """
  hrvMetrics_expr: String_Expr
  """
  ✨ Generated from Field `BioSignalSession`.`rawDataUri` of type `String`
  """
  rawDataUri: String
  """
  ✨ `_expr` server value variant of `rawDataUri` (✨ Generated from Field `BioSignalSession`.`rawDataUri` of type `String`)
  """
  rawDataUri_expr: String_Expr
  """
  ✨ Generated from Field `BioSignalSession`.`startTime` of type `Timestamp!`
  """
  startTime: Timestamp
  """
  ✨ `_expr` server value variant of `startTime` (✨ Generated from Field `BioSignalSession`.`startTime` of type `Timestamp!`)
  """
  startTime_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `startTime` (✨ Generated from Field `BioSignalSession`.`startTime` of type `Timestamp!`)
  """
  startTime_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `startTime` (✨ Generated from Field `BioSignalSession`.`startTime` of type `Timestamp!`)
  """
  startTime_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex` of type `Float`
  """
  stressIndex: Float
  """
  ✨ `_expr` server value variant of `stressIndex` (✨ Generated from Field `BioSignalSession`.`stressIndex` of type `Float`)
  """
  stressIndex_expr: Float_Expr
  """
  ✨ `_update` server value variant of `stressIndex` (✨ Generated from Field `BioSignalSession`.`stressIndex` of type `Float`)
  """
  stressIndex_update: [Float_Update!]
}
"""
✨ Generated filter input type for table 'BioSignalSession'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input BioSignalSession_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [BioSignalSession_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: BioSignalSession_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [BioSignalSession_Filter!]
  """
  ✨ Generated from Field `BioSignalSession`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`deviceId` of type `UUID!`
  """
  deviceId: UUID_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`device` of type `Device!`
  """
  device: Device_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate` of type `Float`
  """
  avgHeartRate: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds` of type `Int!`
  """
  durationSeconds: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency` of type `Float`
  """
  eegDominantFrequency: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`endTime` of type `Timestamp!`
  """
  endTime: Timestamp_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`hrvMetrics` of type `String`
  """
  hrvMetrics: String_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`rawDataUri` of type `String`
  """
  rawDataUri: String_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`startTime` of type `Timestamp!`
  """
  startTime: Timestamp_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex` of type `Float`
  """
  stressIndex: Float_Filter
}
"""
✨ Generated first-row input type for table 'BioSignalSession'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input BioSignalSession_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [BioSignalSession_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: BioSignalSession_Filter
}
"""
✨ Generated having input type for table 'BioSignalSession'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input BioSignalSession_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [BioSignalSession_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: BioSignalSession_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [BioSignalSession_Having!]
  """
  ✨ Generated from Field `BioSignalSession`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate_count` of type `Int!`
  """
  avgHeartRate_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`deviceId_count` of type `Int!`
  """
  deviceId_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds_count` of type `Int!`
  """
  durationSeconds_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency_count` of type `Int!`
  """
  eegDominantFrequency_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`endTime_count` of type `Int!`
  """
  endTime_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`hrvMetrics_count` of type `Int!`
  """
  hrvMetrics_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`rawDataUri_count` of type `Int!`
  """
  rawDataUri_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`startTime_count` of type `Int!`
  """
  startTime_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex_count` of type `Int!`
  """
  stressIndex_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate_sum` of type `Float`
  """
  avgHeartRate_sum: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds_sum` of type `Int`
  """
  durationSeconds_sum: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency_sum` of type `Float`
  """
  eegDominantFrequency_sum: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex_sum` of type `Float`
  """
  stressIndex_sum: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate_avg` of type `Float`
  """
  avgHeartRate_avg: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds_avg` of type `Float`
  """
  durationSeconds_avg: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency_avg` of type `Float`
  """
  eegDominantFrequency_avg: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex_avg` of type `Float`
  """
  stressIndex_avg: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate_min` of type `Float`
  """
  avgHeartRate_min: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds_min` of type `Int`
  """
  durationSeconds_min: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency_min` of type `Float`
  """
  eegDominantFrequency_min: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`endTime_min` of type `Timestamp`
  """
  endTime_min: Timestamp_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`startTime_min` of type `Timestamp`
  """
  startTime_min: Timestamp_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex_min` of type `Float`
  """
  stressIndex_min: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate_max` of type `Float`
  """
  avgHeartRate_max: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds_max` of type `Int`
  """
  durationSeconds_max: Int_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency_max` of type `Float`
  """
  eegDominantFrequency_max: Float_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`endTime_max` of type `Timestamp`
  """
  endTime_max: Timestamp_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`startTime_max` of type `Timestamp`
  """
  startTime_max: Timestamp_Filter
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex_max` of type `Float`
  """
  stressIndex_max: Float_Filter
}
"""
✨ Generated key input type for table 'BioSignalSession'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input BioSignalSession_Key {
  """
  ✨ Generated from Field `BioSignalSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `BioSignalSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'BioSignalSession'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input BioSignalSession_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: BioSignalSession_Filter
}
"""
✨ Generated order input type for table 'BioSignalSession'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input BioSignalSession_Order {
  """
  ✨ Generated from Field `BioSignalSession`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`deviceId` of type `UUID!`
  """
  deviceId: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`device` of type `Device!`
  """
  device: Device_Order
  """
  ✨ Generated from Field `BioSignalSession`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `BioSignalSession`.`avgHeartRate` of type `Float`
  """
  avgHeartRate: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`durationSeconds` of type `Int!`
  """
  durationSeconds: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`eegDominantFrequency` of type `Float`
  """
  eegDominantFrequency: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`endTime` of type `Timestamp!`
  """
  endTime: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`hrvMetrics` of type `String`
  """
  hrvMetrics: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`rawDataUri` of type `String`
  """
  rawDataUri: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`startTime` of type `Timestamp!`
  """
  startTime: OrderDirection
  """
  ✨ Generated from Field `BioSignalSession`.`stressIndex` of type `Float`
  """
  stressIndex: OrderDirection
}
"""
✨ Generated data input type for table 'BusinessMetrics'. It includes all necessary fields for creating or upserting rows into table.
"""
input BusinessMetrics_Data {
  """
  ✨ Generated from Field `BusinessMetrics`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `BusinessMetrics`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `BusinessMetrics`.`organizationId` of type `UUID!`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `BusinessMetrics`.`organizationId` of type `UUID!`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `BusinessMetrics`.`organization` of type `Organization!`
  """
  organization: Organization_Key
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount` of type `Int!`
  """
  activeMemberCount: Int
  """
  ✨ `_expr` server value variant of `activeMemberCount` (✨ Generated from Field `BusinessMetrics`.`activeMemberCount` of type `Int!`)
  """
  activeMemberCount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `activeMemberCount` (✨ Generated from Field `BusinessMetrics`.`activeMemberCount` of type `Int!`)
  """
  activeMemberCount_update: [Int_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating` of type `Float!`
  """
  avgConsultationRating: Float
  """
  ✨ `_expr` server value variant of `avgConsultationRating` (✨ Generated from Field `BusinessMetrics`.`avgConsultationRating` of type `Float!`)
  """
  avgConsultationRating_expr: Float_Expr
  """
  ✨ `_update` server value variant of `avgConsultationRating` (✨ Generated from Field `BusinessMetrics`.`avgConsultationRating` of type `Float!`)
  """
  avgConsultationRating_update: [Float_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating` of type `Float!`
  """
  avgReportRating: Float
  """
  ✨ `_expr` server value variant of `avgReportRating` (✨ Generated from Field `BusinessMetrics`.`avgReportRating` of type `Float!`)
  """
  avgReportRating_expr: Float_Expr
  """
  ✨ `_update` server value variant of `avgReportRating` (✨ Generated from Field `BusinessMetrics`.`avgReportRating` of type `Float!`)
  """
  avgReportRating_update: [Float_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements` of type `Int!`
  """
  completedMeasurements: Int
  """
  ✨ `_expr` server value variant of `completedMeasurements` (✨ Generated from Field `BusinessMetrics`.`completedMeasurements` of type `Int!`)
  """
  completedMeasurements_expr: Int_Expr
  """
  ✨ `_update` server value variant of `completedMeasurements` (✨ Generated from Field `BusinessMetrics`.`completedMeasurements` of type `Int!`)
  """
  completedMeasurements_update: [Int_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate` of type `Float!`
  """
  completionRate: Float
  """
  ✨ `_expr` server value variant of `completionRate` (✨ Generated from Field `BusinessMetrics`.`completionRate` of type `Float!`)
  """
  completionRate_expr: Float_Expr
  """
  ✨ `_update` server value variant of `completionRate` (✨ Generated from Field `BusinessMetrics`.`completionRate` of type `Float!`)
  """
  completionRate_update: [Float_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions` of type `Int!`
  """
  consultationsSessions: Int
  """
  ✨ `_expr` server value variant of `consultationsSessions` (✨ Generated from Field `BusinessMetrics`.`consultationsSessions` of type `Int!`)
  """
  consultationsSessions_expr: Int_Expr
  """
  ✨ `_update` server value variant of `consultationsSessions` (✨ Generated from Field `BusinessMetrics`.`consultationsSessions` of type `Int!`)
  """
  consultationsSessions_update: [Int_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed` of type `Int!`
  """
  creditsConsumed: Int
  """
  ✨ `_expr` server value variant of `creditsConsumed` (✨ Generated from Field `BusinessMetrics`.`creditsConsumed` of type `Int!`)
  """
  creditsConsumed_expr: Int_Expr
  """
  ✨ `_update` server value variant of `creditsConsumed` (✨ Generated from Field `BusinessMetrics`.`creditsConsumed` of type `Int!`)
  """
  creditsConsumed_update: [Int_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `generatedAt` (✨ Generated from Field `BusinessMetrics`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `generatedAt` (✨ Generated from Field `BusinessMetrics`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `generatedAt` (✨ Generated from Field `BusinessMetrics`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore` of type `Float`
  """
  npsScore: Float
  """
  ✨ `_expr` server value variant of `npsScore` (✨ Generated from Field `BusinessMetrics`.`npsScore` of type `Float`)
  """
  npsScore_expr: Float_Expr
  """
  ✨ `_update` server value variant of `npsScore` (✨ Generated from Field `BusinessMetrics`.`npsScore` of type `Float`)
  """
  npsScore_update: [Float_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate` of type `Float!`
  """
  participationRate: Float
  """
  ✨ `_expr` server value variant of `participationRate` (✨ Generated from Field `BusinessMetrics`.`participationRate` of type `Float!`)
  """
  participationRate_expr: Float_Expr
  """
  ✨ `_update` server value variant of `participationRate` (✨ Generated from Field `BusinessMetrics`.`participationRate` of type `Float!`)
  """
  participationRate_update: [Float_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`periodEnd` of type `Date!`
  """
  periodEnd: Date
  """
  ✨ `_date` server value variant of `periodEnd` (✨ Generated from Field `BusinessMetrics`.`periodEnd` of type `Date!`)
  """
  periodEnd_date: Date_Relative
  """
  ✨ `_expr` server value variant of `periodEnd` (✨ Generated from Field `BusinessMetrics`.`periodEnd` of type `Date!`)
  """
  periodEnd_expr: Date_Expr
  """
  ✨ `_update` server value variant of `periodEnd` (✨ Generated from Field `BusinessMetrics`.`periodEnd` of type `Date!`)
  """
  periodEnd_update: [Date_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`periodStart` of type `Date!`
  """
  periodStart: Date
  """
  ✨ `_date` server value variant of `periodStart` (✨ Generated from Field `BusinessMetrics`.`periodStart` of type `Date!`)
  """
  periodStart_date: Date_Relative
  """
  ✨ `_expr` server value variant of `periodStart` (✨ Generated from Field `BusinessMetrics`.`periodStart` of type `Date!`)
  """
  periodStart_expr: Date_Expr
  """
  ✨ `_update` server value variant of `periodStart` (✨ Generated from Field `BusinessMetrics`.`periodStart` of type `Date!`)
  """
  periodStart_update: [Date_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: Int
  """
  ✨ `_expr` server value variant of `reportsGenerated` (✨ Generated from Field `BusinessMetrics`.`reportsGenerated` of type `Int!`)
  """
  reportsGenerated_expr: Int_Expr
  """
  ✨ `_update` server value variant of `reportsGenerated` (✨ Generated from Field `BusinessMetrics`.`reportsGenerated` of type `Int!`)
  """
  reportsGenerated_update: [Int_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements` of type `Int!`
  """
  scheduledMeasurements: Int
  """
  ✨ `_expr` server value variant of `scheduledMeasurements` (✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements` of type `Int!`)
  """
  scheduledMeasurements_expr: Int_Expr
  """
  ✨ `_update` server value variant of `scheduledMeasurements` (✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements` of type `Int!`)
  """
  scheduledMeasurements_update: [Int_Update!]
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount` of type `Int!`
  """
  totalMemberCount: Int
  """
  ✨ `_expr` server value variant of `totalMemberCount` (✨ Generated from Field `BusinessMetrics`.`totalMemberCount` of type `Int!`)
  """
  totalMemberCount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `totalMemberCount` (✨ Generated from Field `BusinessMetrics`.`totalMemberCount` of type `Int!`)
  """
  totalMemberCount_update: [Int_Update!]
}
"""
✨ Generated filter input type for table 'BusinessMetrics'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input BusinessMetrics_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [BusinessMetrics_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: BusinessMetrics_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [BusinessMetrics_Filter!]
  """
  ✨ Generated from Field `BusinessMetrics`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`organizationId` of type `UUID!`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`organization` of type `Organization!`
  """
  organization: Organization_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount` of type `Int!`
  """
  activeMemberCount: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating` of type `Float!`
  """
  avgConsultationRating: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating` of type `Float!`
  """
  avgReportRating: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements` of type `Int!`
  """
  completedMeasurements: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate` of type `Float!`
  """
  completionRate: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions` of type `Int!`
  """
  consultationsSessions: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed` of type `Int!`
  """
  creditsConsumed: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore` of type `Float`
  """
  npsScore: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate` of type `Float!`
  """
  participationRate: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodEnd` of type `Date!`
  """
  periodEnd: Date_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodStart` of type `Date!`
  """
  periodStart: Date_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements` of type `Int!`
  """
  scheduledMeasurements: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount` of type `Int!`
  """
  totalMemberCount: Int_Filter
}
"""
✨ Generated first-row input type for table 'BusinessMetrics'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input BusinessMetrics_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [BusinessMetrics_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: BusinessMetrics_Filter
}
"""
✨ Generated having input type for table 'BusinessMetrics'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input BusinessMetrics_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [BusinessMetrics_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: BusinessMetrics_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [BusinessMetrics_Having!]
  """
  ✨ Generated from Field `BusinessMetrics`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount_count` of type `Int!`
  """
  activeMemberCount_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating_count` of type `Int!`
  """
  avgConsultationRating_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating_count` of type `Int!`
  """
  avgReportRating_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements_count` of type `Int!`
  """
  completedMeasurements_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate_count` of type `Int!`
  """
  completionRate_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions_count` of type `Int!`
  """
  consultationsSessions_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed_count` of type `Int!`
  """
  creditsConsumed_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`generatedAt_count` of type `Int!`
  """
  generatedAt_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore_count` of type `Int!`
  """
  npsScore_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate_count` of type `Int!`
  """
  participationRate_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodEnd_count` of type `Int!`
  """
  periodEnd_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodStart_count` of type `Int!`
  """
  periodStart_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated_count` of type `Int!`
  """
  reportsGenerated_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements_count` of type `Int!`
  """
  scheduledMeasurements_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount_count` of type `Int!`
  """
  totalMemberCount_count: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount_sum` of type `Int`
  """
  activeMemberCount_sum: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating_sum` of type `Float`
  """
  avgConsultationRating_sum: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating_sum` of type `Float`
  """
  avgReportRating_sum: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements_sum` of type `Int`
  """
  completedMeasurements_sum: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate_sum` of type `Float`
  """
  completionRate_sum: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions_sum` of type `Int`
  """
  consultationsSessions_sum: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed_sum` of type `Int`
  """
  creditsConsumed_sum: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore_sum` of type `Float`
  """
  npsScore_sum: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate_sum` of type `Float`
  """
  participationRate_sum: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated_sum` of type `Int`
  """
  reportsGenerated_sum: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements_sum` of type `Int`
  """
  scheduledMeasurements_sum: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount_sum` of type `Int`
  """
  totalMemberCount_sum: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount_avg` of type `Float`
  """
  activeMemberCount_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating_avg` of type `Float`
  """
  avgConsultationRating_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating_avg` of type `Float`
  """
  avgReportRating_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements_avg` of type `Float`
  """
  completedMeasurements_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate_avg` of type `Float`
  """
  completionRate_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions_avg` of type `Float`
  """
  consultationsSessions_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed_avg` of type `Float`
  """
  creditsConsumed_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore_avg` of type `Float`
  """
  npsScore_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate_avg` of type `Float`
  """
  participationRate_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated_avg` of type `Float`
  """
  reportsGenerated_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements_avg` of type `Float`
  """
  scheduledMeasurements_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount_avg` of type `Float`
  """
  totalMemberCount_avg: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount_min` of type `Int`
  """
  activeMemberCount_min: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating_min` of type `Float`
  """
  avgConsultationRating_min: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating_min` of type `Float`
  """
  avgReportRating_min: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements_min` of type `Int`
  """
  completedMeasurements_min: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate_min` of type `Float`
  """
  completionRate_min: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions_min` of type `Int`
  """
  consultationsSessions_min: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed_min` of type `Int`
  """
  creditsConsumed_min: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`generatedAt_min` of type `Timestamp`
  """
  generatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore_min` of type `Float`
  """
  npsScore_min: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate_min` of type `Float`
  """
  participationRate_min: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodEnd_min` of type `Date`
  """
  periodEnd_min: Date_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodStart_min` of type `Date`
  """
  periodStart_min: Date_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated_min` of type `Int`
  """
  reportsGenerated_min: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements_min` of type `Int`
  """
  scheduledMeasurements_min: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount_min` of type `Int`
  """
  totalMemberCount_min: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount_max` of type `Int`
  """
  activeMemberCount_max: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating_max` of type `Float`
  """
  avgConsultationRating_max: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating_max` of type `Float`
  """
  avgReportRating_max: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements_max` of type `Int`
  """
  completedMeasurements_max: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate_max` of type `Float`
  """
  completionRate_max: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions_max` of type `Int`
  """
  consultationsSessions_max: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed_max` of type `Int`
  """
  creditsConsumed_max: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`generatedAt_max` of type `Timestamp`
  """
  generatedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore_max` of type `Float`
  """
  npsScore_max: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate_max` of type `Float`
  """
  participationRate_max: Float_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodEnd_max` of type `Date`
  """
  periodEnd_max: Date_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`periodStart_max` of type `Date`
  """
  periodStart_max: Date_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated_max` of type `Int`
  """
  reportsGenerated_max: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements_max` of type `Int`
  """
  scheduledMeasurements_max: Int_Filter
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount_max` of type `Int`
  """
  totalMemberCount_max: Int_Filter
}
"""
✨ Generated key input type for table 'BusinessMetrics'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input BusinessMetrics_Key {
  """
  ✨ Generated from Field `BusinessMetrics`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `BusinessMetrics`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'BusinessMetrics'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input BusinessMetrics_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: BusinessMetrics_Filter
}
"""
✨ Generated order input type for table 'BusinessMetrics'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input BusinessMetrics_Order {
  """
  ✨ Generated from Field `BusinessMetrics`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`organizationId` of type `UUID!`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`organization` of type `Organization!`
  """
  organization: Organization_Order
  """
  ✨ Generated from Field `BusinessMetrics`.`activeMemberCount` of type `Int!`
  """
  activeMemberCount: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`avgConsultationRating` of type `Float!`
  """
  avgConsultationRating: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`avgReportRating` of type `Float!`
  """
  avgReportRating: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`completedMeasurements` of type `Int!`
  """
  completedMeasurements: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`completionRate` of type `Float!`
  """
  completionRate: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`consultationsSessions` of type `Int!`
  """
  consultationsSessions: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`creditsConsumed` of type `Int!`
  """
  creditsConsumed: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`npsScore` of type `Float`
  """
  npsScore: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`participationRate` of type `Float!`
  """
  participationRate: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`periodEnd` of type `Date!`
  """
  periodEnd: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`periodStart` of type `Date!`
  """
  periodStart: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`scheduledMeasurements` of type `Int!`
  """
  scheduledMeasurements: OrderDirection
  """
  ✨ Generated from Field `BusinessMetrics`.`totalMemberCount` of type `Int!`
  """
  totalMemberCount: OrderDirection
}
"""
✨ Generated data input type for table 'Company'. It includes all necessary fields for creating or upserting rows into table.
"""
input Company_Data {
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Company`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Company`.`address` of type `String!`
  """
  address: String
  """
  ✨ `_expr` server value variant of `address` (✨ Generated from Field `Company`.`address` of type `String!`)
  """
  address_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`adminUserId` of type `UUID!`
  """
  adminUserId: UUID
  """
  ✨ `_expr` server value variant of `adminUserId` (✨ Generated from Field `Company`.`adminUserId` of type `UUID!`)
  """
  adminUserId_expr: UUID_Expr
  """
  ✨ Generated from Field `Company`.`businessRegistrationNumber` of type `String!`
  """
  businessRegistrationNumber: String
  """
  ✨ `_expr` server value variant of `businessRegistrationNumber` (✨ Generated from Field `Company`.`businessRegistrationNumber` of type `String!`)
  """
  businessRegistrationNumber_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`companyCode` of type `String!`
  """
  companyCode: String
  """
  ✨ `_expr` server value variant of `companyCode` (✨ Generated from Field `Company`.`companyCode` of type `String!`)
  """
  companyCode_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`companyName` of type `String!`
  """
  companyName: String
  """
  ✨ `_expr` server value variant of `companyName` (✨ Generated from Field `Company`.`companyName` of type `String!`)
  """
  companyName_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`contactEmail` of type `String!`
  """
  contactEmail: String
  """
  ✨ `_expr` server value variant of `contactEmail` (✨ Generated from Field `Company`.`contactEmail` of type `String!`)
  """
  contactEmail_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`contactPhone` of type `String!`
  """
  contactPhone: String
  """
  ✨ `_expr` server value variant of `contactPhone` (✨ Generated from Field `Company`.`contactPhone` of type `String!`)
  """
  contactPhone_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`contractEndDate` of type `Date`
  """
  contractEndDate: Date
  """
  ✨ `_date` server value variant of `contractEndDate` (✨ Generated from Field `Company`.`contractEndDate` of type `Date`)
  """
  contractEndDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `contractEndDate` (✨ Generated from Field `Company`.`contractEndDate` of type `Date`)
  """
  contractEndDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `contractEndDate` (✨ Generated from Field `Company`.`contractEndDate` of type `Date`)
  """
  contractEndDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Company`.`contractStartDate` of type `Date`
  """
  contractStartDate: Date
  """
  ✨ `_date` server value variant of `contractStartDate` (✨ Generated from Field `Company`.`contractStartDate` of type `Date`)
  """
  contractStartDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `contractStartDate` (✨ Generated from Field `Company`.`contractStartDate` of type `Date`)
  """
  contractStartDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `contractStartDate` (✨ Generated from Field `Company`.`contractStartDate` of type `Date`)
  """
  contractStartDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Company`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Company`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Company`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Company`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Company`.`creditBalance` of type `Int!`
  """
  creditBalance: Int
  """
  ✨ `_expr` server value variant of `creditBalance` (✨ Generated from Field `Company`.`creditBalance` of type `Int!`)
  """
  creditBalance_expr: Int_Expr
  """
  ✨ `_update` server value variant of `creditBalance` (✨ Generated from Field `Company`.`creditBalance` of type `Int!`)
  """
  creditBalance_update: [Int_Update!]
  """
  ✨ Generated from Field `Company`.`employeeCount` of type `Int!`
  """
  employeeCount: Int
  """
  ✨ `_expr` server value variant of `employeeCount` (✨ Generated from Field `Company`.`employeeCount` of type `Int!`)
  """
  employeeCount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `employeeCount` (✨ Generated from Field `Company`.`employeeCount` of type `Int!`)
  """
  employeeCount_update: [Int_Update!]
  """
  ✨ Generated from Field `Company`.`industry` of type `String`
  """
  industry: String
  """
  ✨ `_expr` server value variant of `industry` (✨ Generated from Field `Company`.`industry` of type `String`)
  """
  industry_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`settings` of type `String`
  """
  settings: String
  """
  ✨ `_expr` server value variant of `settings` (✨ Generated from Field `Company`.`settings` of type `String`)
  """
  settings_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Company`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Company`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Company`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Company'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Company_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Company_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Company_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Company_Filter!]
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Company`.`address` of type `String!`
  """
  address: String_Filter
  """
  ✨ Generated from Field `Company`.`adminUserId` of type `UUID!`
  """
  adminUserId: UUID_Filter
  """
  ✨ Generated from Field `Company`.`businessRegistrationNumber` of type `String!`
  """
  businessRegistrationNumber: String_Filter
  """
  ✨ Generated from Field `Company`.`companyCode` of type `String!`
  """
  companyCode: String_Filter
  """
  ✨ Generated from Field `Company`.`companyName` of type `String!`
  """
  companyName: String_Filter
  """
  ✨ Generated from Field `Company`.`contactEmail` of type `String!`
  """
  contactEmail: String_Filter
  """
  ✨ Generated from Field `Company`.`contactPhone` of type `String!`
  """
  contactPhone: String_Filter
  """
  ✨ Generated from Field `Company`.`contractEndDate` of type `Date`
  """
  contractEndDate: Date_Filter
  """
  ✨ Generated from Field `Company`.`contractStartDate` of type `Date`
  """
  contractStartDate: Date_Filter
  """
  ✨ Generated from Field `Company`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Company`.`creditBalance` of type `Int!`
  """
  creditBalance: Int_Filter
  """
  ✨ Generated from Field `Company`.`employeeCount` of type `Int!`
  """
  employeeCount: Int_Filter
  """
  ✨ Generated from Field `Company`.`industry` of type `String`
  """
  industry: String_Filter
  """
  ✨ Generated from Field `Company`.`settings` of type `String`
  """
  settings: String_Filter
  """
  ✨ Generated from Field `Company`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Company`.`companyMembers_on_company` of type `[CompanyMember!]!`
  """
  companyMembers_on_company: CompanyMember_ListFilter
  """
  ✨ Generated from Field `Company`.`consentRecords_on_company` of type `[ConsentRecord!]!`
  """
  consentRecords_on_company: ConsentRecord_ListFilter
  """
  ✨ Generated from Field `Company`.`creditTransactions_on_company` of type `[CreditTransaction!]!`
  """
  creditTransactions_on_company: CreditTransaction_ListFilter
  """
  ✨ Generated from Field `Company`.`measurementSessions_on_company` of type `[MeasurementSession!]!`
  """
  measurementSessions_on_company: MeasurementSession_ListFilter
}
"""
✨ Generated first-row input type for table 'Company'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Company_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Company_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Company_Filter
}
"""
✨ Generated having input type for table 'Company'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Company_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Company_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Company_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Company_Having!]
  """
  ✨ Generated from Field `Company`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Company`.`address_count` of type `Int!`
  """
  address_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`adminUserId_count` of type `Int!`
  """
  adminUserId_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`businessRegistrationNumber_count` of type `Int!`
  """
  businessRegistrationNumber_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`companyCode_count` of type `Int!`
  """
  companyCode_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`companyName_count` of type `Int!`
  """
  companyName_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`contactEmail_count` of type `Int!`
  """
  contactEmail_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`contactPhone_count` of type `Int!`
  """
  contactPhone_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`contractEndDate_count` of type `Int!`
  """
  contractEndDate_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`contractStartDate_count` of type `Int!`
  """
  contractStartDate_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`creditBalance_count` of type `Int!`
  """
  creditBalance_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`employeeCount_count` of type `Int!`
  """
  employeeCount_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`industry_count` of type `Int!`
  """
  industry_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`paymentStatus_count` of type `Int!`
  """
  paymentStatus_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`servicePackage_count` of type `Int!`
  """
  servicePackage_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`settings_count` of type `Int!`
  """
  settings_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`creditBalance_sum` of type `Int`
  """
  creditBalance_sum: Int_Filter
  """
  ✨ Generated from Field `Company`.`employeeCount_sum` of type `Int`
  """
  employeeCount_sum: Int_Filter
  """
  ✨ Generated from Field `Company`.`creditBalance_avg` of type `Float`
  """
  creditBalance_avg: Float_Filter
  """
  ✨ Generated from Field `Company`.`employeeCount_avg` of type `Float`
  """
  employeeCount_avg: Float_Filter
  """
  ✨ Generated from Field `Company`.`contractEndDate_min` of type `Date`
  """
  contractEndDate_min: Date_Filter
  """
  ✨ Generated from Field `Company`.`contractStartDate_min` of type `Date`
  """
  contractStartDate_min: Date_Filter
  """
  ✨ Generated from Field `Company`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Company`.`creditBalance_min` of type `Int`
  """
  creditBalance_min: Int_Filter
  """
  ✨ Generated from Field `Company`.`employeeCount_min` of type `Int`
  """
  employeeCount_min: Int_Filter
  """
  ✨ Generated from Field `Company`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Company`.`contractEndDate_max` of type `Date`
  """
  contractEndDate_max: Date_Filter
  """
  ✨ Generated from Field `Company`.`contractStartDate_max` of type `Date`
  """
  contractStartDate_max: Date_Filter
  """
  ✨ Generated from Field `Company`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Company`.`creditBalance_max` of type `Int`
  """
  creditBalance_max: Int_Filter
  """
  ✨ Generated from Field `Company`.`employeeCount_max` of type `Int`
  """
  employeeCount_max: Int_Filter
  """
  ✨ Generated from Field `Company`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Company'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Company_Key {
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Company`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Company'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Company_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Company_Filter
}
"""
✨ Generated order input type for table 'Company'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Company_Order {
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Company`.`address` of type `String!`
  """
  address: OrderDirection
  """
  ✨ Generated from Field `Company`.`adminUserId` of type `UUID!`
  """
  adminUserId: OrderDirection
  """
  ✨ Generated from Field `Company`.`businessRegistrationNumber` of type `String!`
  """
  businessRegistrationNumber: OrderDirection
  """
  ✨ Generated from Field `Company`.`companyCode` of type `String!`
  """
  companyCode: OrderDirection
  """
  ✨ Generated from Field `Company`.`companyName` of type `String!`
  """
  companyName: OrderDirection
  """
  ✨ Generated from Field `Company`.`contactEmail` of type `String!`
  """
  contactEmail: OrderDirection
  """
  ✨ Generated from Field `Company`.`contactPhone` of type `String!`
  """
  contactPhone: OrderDirection
  """
  ✨ Generated from Field `Company`.`contractEndDate` of type `Date`
  """
  contractEndDate: OrderDirection
  """
  ✨ Generated from Field `Company`.`contractStartDate` of type `Date`
  """
  contractStartDate: OrderDirection
  """
  ✨ Generated from Field `Company`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Company`.`creditBalance` of type `Int!`
  """
  creditBalance: OrderDirection
  """
  ✨ Generated from Field `Company`.`employeeCount` of type `Int!`
  """
  employeeCount: OrderDirection
  """
  ✨ Generated from Field `Company`.`industry` of type `String`
  """
  industry: OrderDirection
  """
  ✨ Generated from Field `Company`.`settings` of type `String`
  """
  settings: OrderDirection
  """
  ✨ Generated from Field `Company`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'CompanyMember'. It includes all necessary fields for creating or upserting rows into table.
"""
input CompanyMember_Data {
  """
  ✨ Generated from Field `CompanyMember`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `CompanyMember`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `CompanyMember`.`companyId` of type `UUID!`
  """
  companyId: UUID
  """
  ✨ `_expr` server value variant of `companyId` (✨ Generated from Field `CompanyMember`.`companyId` of type `UUID!`)
  """
  companyId_expr: UUID_Expr
  """
  ✨ Generated from Field `CompanyMember`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `CompanyMember`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `CompanyMember`.`company` of type `Company!`
  """
  company: Company_Key
  """
  ✨ Generated from Field `CompanyMember`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed` of type `Int!`
  """
  consultationsUsed: Int
  """
  ✨ `_expr` server value variant of `consultationsUsed` (✨ Generated from Field `CompanyMember`.`consultationsUsed` of type `Int!`)
  """
  consultationsUsed_expr: Int_Expr
  """
  ✨ `_update` server value variant of `consultationsUsed` (✨ Generated from Field `CompanyMember`.`consultationsUsed` of type `Int!`)
  """
  consultationsUsed_update: [Int_Update!]
  """
  ✨ Generated from Field `CompanyMember`.`department` of type `String`
  """
  department: String
  """
  ✨ `_expr` server value variant of `department` (✨ Generated from Field `CompanyMember`.`department` of type `String`)
  """
  department_expr: String_Expr
  """
  ✨ Generated from Field `CompanyMember`.`employeeId` of type `String`
  """
  employeeId: String
  """
  ✨ `_expr` server value variant of `employeeId` (✨ Generated from Field `CompanyMember`.`employeeId` of type `String`)
  """
  employeeId_expr: String_Expr
  """
  ✨ Generated from Field `CompanyMember`.`isActive` of type `Boolean!`
  """
  isActive: Boolean
  """
  ✨ `_expr` server value variant of `isActive` (✨ Generated from Field `CompanyMember`.`isActive` of type `Boolean!`)
  """
  isActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `CompanyMember`.`joinedAt` of type `Timestamp!`
  """
  joinedAt: Timestamp
  """
  ✨ `_expr` server value variant of `joinedAt` (✨ Generated from Field `CompanyMember`.`joinedAt` of type `Timestamp!`)
  """
  joinedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `joinedAt` (✨ Generated from Field `CompanyMember`.`joinedAt` of type `Timestamp!`)
  """
  joinedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `joinedAt` (✨ Generated from Field `CompanyMember`.`joinedAt` of type `Timestamp!`)
  """
  joinedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `CompanyMember`.`lastActivityAt` of type `Timestamp`
  """
  lastActivityAt: Timestamp
  """
  ✨ `_expr` server value variant of `lastActivityAt` (✨ Generated from Field `CompanyMember`.`lastActivityAt` of type `Timestamp`)
  """
  lastActivityAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastActivityAt` (✨ Generated from Field `CompanyMember`.`lastActivityAt` of type `Timestamp`)
  """
  lastActivityAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastActivityAt` (✨ Generated from Field `CompanyMember`.`lastActivityAt` of type `Timestamp`)
  """
  lastActivityAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `CompanyMember`.`position` of type `String`
  """
  position: String
  """
  ✨ `_expr` server value variant of `position` (✨ Generated from Field `CompanyMember`.`position` of type `String`)
  """
  position_expr: String_Expr
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: Int
  """
  ✨ `_expr` server value variant of `reportsGenerated` (✨ Generated from Field `CompanyMember`.`reportsGenerated` of type `Int!`)
  """
  reportsGenerated_expr: Int_Expr
  """
  ✨ `_update` server value variant of `reportsGenerated` (✨ Generated from Field `CompanyMember`.`reportsGenerated` of type `Int!`)
  """
  reportsGenerated_update: [Int_Update!]
}
"""
✨ Generated filter input type for table 'CompanyMember'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CompanyMember_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [CompanyMember_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: CompanyMember_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [CompanyMember_Filter!]
  """
  ✨ Generated from Field `CompanyMember`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `CompanyMember`.`companyId` of type `UUID!`
  """
  companyId: UUID_Filter
  """
  ✨ Generated from Field `CompanyMember`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `CompanyMember`.`company` of type `Company!`
  """
  company: Company_Filter
  """
  ✨ Generated from Field `CompanyMember`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed` of type `Int!`
  """
  consultationsUsed: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`department` of type `String`
  """
  department: String_Filter
  """
  ✨ Generated from Field `CompanyMember`.`employeeId` of type `String`
  """
  employeeId: String_Filter
  """
  ✨ Generated from Field `CompanyMember`.`isActive` of type `Boolean!`
  """
  isActive: Boolean_Filter
  """
  ✨ Generated from Field `CompanyMember`.`joinedAt` of type `Timestamp!`
  """
  joinedAt: Timestamp_Filter
  """
  ✨ Generated from Field `CompanyMember`.`lastActivityAt` of type `Timestamp`
  """
  lastActivityAt: Timestamp_Filter
  """
  ✨ Generated from Field `CompanyMember`.`position` of type `String`
  """
  position: String_Filter
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: Int_Filter
}
"""
✨ Generated first-row input type for table 'CompanyMember'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input CompanyMember_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [CompanyMember_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: CompanyMember_Filter
}
"""
✨ Generated having input type for table 'CompanyMember'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CompanyMember_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [CompanyMember_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: CompanyMember_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [CompanyMember_Having!]
  """
  ✨ Generated from Field `CompanyMember`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`companyId_count` of type `Int!`
  """
  companyId_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed_count` of type `Int!`
  """
  consultationsUsed_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`department_count` of type `Int!`
  """
  department_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`employeeId_count` of type `Int!`
  """
  employeeId_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`isActive_count` of type `Int!`
  """
  isActive_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`joinedAt_count` of type `Int!`
  """
  joinedAt_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`lastActivityAt_count` of type `Int!`
  """
  lastActivityAt_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`position_count` of type `Int!`
  """
  position_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated_count` of type `Int!`
  """
  reportsGenerated_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed_sum` of type `Int`
  """
  consultationsUsed_sum: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated_sum` of type `Int`
  """
  reportsGenerated_sum: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed_avg` of type `Float`
  """
  consultationsUsed_avg: Float_Filter
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated_avg` of type `Float`
  """
  reportsGenerated_avg: Float_Filter
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed_min` of type `Int`
  """
  consultationsUsed_min: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`joinedAt_min` of type `Timestamp`
  """
  joinedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `CompanyMember`.`lastActivityAt_min` of type `Timestamp`
  """
  lastActivityAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated_min` of type `Int`
  """
  reportsGenerated_min: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed_max` of type `Int`
  """
  consultationsUsed_max: Int_Filter
  """
  ✨ Generated from Field `CompanyMember`.`joinedAt_max` of type `Timestamp`
  """
  joinedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `CompanyMember`.`lastActivityAt_max` of type `Timestamp`
  """
  lastActivityAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated_max` of type `Int`
  """
  reportsGenerated_max: Int_Filter
}
"""
✨ Generated key input type for table 'CompanyMember'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input CompanyMember_Key {
  """
  ✨ Generated from Field `CompanyMember`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `CompanyMember`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'CompanyMember'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input CompanyMember_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: CompanyMember_Filter
}
"""
✨ Generated order input type for table 'CompanyMember'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input CompanyMember_Order {
  """
  ✨ Generated from Field `CompanyMember`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`companyId` of type `UUID!`
  """
  companyId: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`company` of type `Company!`
  """
  company: Company_Order
  """
  ✨ Generated from Field `CompanyMember`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `CompanyMember`.`consultationsUsed` of type `Int!`
  """
  consultationsUsed: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`department` of type `String`
  """
  department: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`employeeId` of type `String`
  """
  employeeId: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`isActive` of type `Boolean!`
  """
  isActive: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`joinedAt` of type `Timestamp!`
  """
  joinedAt: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`lastActivityAt` of type `Timestamp`
  """
  lastActivityAt: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`position` of type `String`
  """
  position: OrderDirection
  """
  ✨ Generated from Field `CompanyMember`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: OrderDirection
}
"""
✨ Generated filter input type for table 'CompanyPaymentStatus'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CompanyPaymentStatus_Filter {
  """
  Match if field is exactly equal to provided value.
  """
  eq: CompanyPaymentStatus
  """
  Match if field is not equal to provided value.
  """
  ne: CompanyPaymentStatus
  """
  When true, match if field `IS NULL`. When false, match if field is `NOT NULL`.
  """
  isNull: Boolean
  """
  Match if field value is among the provided list of values.
  """
  in: [CompanyPaymentStatus!]
  """
  Match if field value is not among the provided list of values.
  """
  nin: [CompanyPaymentStatus!]
  """
  Match if field value is greater than the provided value, based on index ordering of supported enum values.
  """
  gt: CompanyPaymentStatus
  """
  Match if field is greater than or equal to the provided value.
  """
  ge: CompanyPaymentStatus
  """
  Match if field value is less than the provided value, based on index ordering of supported enum values.
  """
  lt: CompanyPaymentStatus
  """
  Match if field is less than or equal to the provided value, based on index ordering of supported enum values.
  """
  le: CompanyPaymentStatus
}
"""
✨ Generated list filter input type for table 'CompanyPaymentStatus'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input CompanyPaymentStatus_ListFilter {
  """
  Match if list field contains the provided value as a member.
  """
  includes: CompanyPaymentStatus
  """
  Match if list field contains all of the provided values as members.
  """
  includesAll: [CompanyPaymentStatus!]
  """
  Match if list field does not contain the provided value as a member.
  """
  excludes: CompanyPaymentStatus
  """
  Match if list field does not contain any of the provided values as members.
  """
  excludesAll: [CompanyPaymentStatus!]
  """
  The desired number of enum values that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: CompanyPaymentStatus_Filter
}
"""
✨ Generated data input type for table 'ConsentRecord'. It includes all necessary fields for creating or upserting rows into table.
"""
input ConsentRecord_Data {
  """
  ✨ Generated from Field `ConsentRecord`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ConsentRecord`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `ConsentRecord`.`companyId` of type `UUID!`
  """
  companyId: UUID
  """
  ✨ `_expr` server value variant of `companyId` (✨ Generated from Field `ConsentRecord`.`companyId` of type `UUID!`)
  """
  companyId_expr: UUID_Expr
  """
  ✨ Generated from Field `ConsentRecord`.`company` of type `Company!`
  """
  company: Company_Key
  """
  ✨ Generated from Field `ConsentRecord`.`consentGivenAt` of type `Timestamp!`
  """
  consentGivenAt: Timestamp
  """
  ✨ `_expr` server value variant of `consentGivenAt` (✨ Generated from Field `ConsentRecord`.`consentGivenAt` of type `Timestamp!`)
  """
  consentGivenAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `consentGivenAt` (✨ Generated from Field `ConsentRecord`.`consentGivenAt` of type `Timestamp!`)
  """
  consentGivenAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `consentGivenAt` (✨ Generated from Field `ConsentRecord`.`consentGivenAt` of type `Timestamp!`)
  """
  consentGivenAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `ConsentRecord`.`consentText` of type `String!`
  """
  consentText: String
  """
  ✨ `_expr` server value variant of `consentText` (✨ Generated from Field `ConsentRecord`.`consentText` of type `String!`)
  """
  consentText_expr: String_Expr
  """
  ✨ Generated from Field `ConsentRecord`.`consentType` of type `String!`
  """
  consentType: String
  """
  ✨ `_expr` server value variant of `consentType` (✨ Generated from Field `ConsentRecord`.`consentType` of type `String!`)
  """
  consentType_expr: String_Expr
  """
  ✨ Generated from Field `ConsentRecord`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `ConsentRecord`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `ConsentRecord`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `ConsentRecord`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `ConsentRecord`.`isActive` of type `Boolean!`
  """
  isActive: Boolean
  """
  ✨ `_expr` server value variant of `isActive` (✨ Generated from Field `ConsentRecord`.`isActive` of type `Boolean!`)
  """
  isActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `ConsentRecord`.`subjectBirthDate` of type `Date!`
  """
  subjectBirthDate: Date
  """
  ✨ `_date` server value variant of `subjectBirthDate` (✨ Generated from Field `ConsentRecord`.`subjectBirthDate` of type `Date!`)
  """
  subjectBirthDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `subjectBirthDate` (✨ Generated from Field `ConsentRecord`.`subjectBirthDate` of type `Date!`)
  """
  subjectBirthDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `subjectBirthDate` (✨ Generated from Field `ConsentRecord`.`subjectBirthDate` of type `Date!`)
  """
  subjectBirthDate_update: [Date_Update!]
  """
  ✨ Generated from Field `ConsentRecord`.`subjectName` of type `String!`
  """
  subjectName: String
  """
  ✨ `_expr` server value variant of `subjectName` (✨ Generated from Field `ConsentRecord`.`subjectName` of type `String!`)
  """
  subjectName_expr: String_Expr
  """
  ✨ Generated from Field `ConsentRecord`.`subjectPhone` of type `String!`
  """
  subjectPhone: String
  """
  ✨ `_expr` server value variant of `subjectPhone` (✨ Generated from Field `ConsentRecord`.`subjectPhone` of type `String!`)
  """
  subjectPhone_expr: String_Expr
}
"""
✨ Generated filter input type for table 'ConsentRecord'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ConsentRecord_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ConsentRecord_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ConsentRecord_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ConsentRecord_Filter!]
  """
  ✨ Generated from Field `ConsentRecord`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`companyId` of type `UUID!`
  """
  companyId: UUID_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`company` of type `Company!`
  """
  company: Company_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentGivenAt` of type `Timestamp!`
  """
  consentGivenAt: Timestamp_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentText` of type `String!`
  """
  consentText: String_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentType` of type `String!`
  """
  consentType: String_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`isActive` of type `Boolean!`
  """
  isActive: Boolean_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectBirthDate` of type `Date!`
  """
  subjectBirthDate: Date_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectName` of type `String!`
  """
  subjectName: String_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectPhone` of type `String!`
  """
  subjectPhone: String_Filter
}
"""
✨ Generated first-row input type for table 'ConsentRecord'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ConsentRecord_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ConsentRecord_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ConsentRecord_Filter
}
"""
✨ Generated having input type for table 'ConsentRecord'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ConsentRecord_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ConsentRecord_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ConsentRecord_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ConsentRecord_Having!]
  """
  ✨ Generated from Field `ConsentRecord`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`companyId_count` of type `Int!`
  """
  companyId_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentGivenAt_count` of type `Int!`
  """
  consentGivenAt_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentText_count` of type `Int!`
  """
  consentText_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentType_count` of type `Int!`
  """
  consentType_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`isActive_count` of type `Int!`
  """
  isActive_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectBirthDate_count` of type `Int!`
  """
  subjectBirthDate_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectName_count` of type `Int!`
  """
  subjectName_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectPhone_count` of type `Int!`
  """
  subjectPhone_count: Int_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentGivenAt_min` of type `Timestamp`
  """
  consentGivenAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectBirthDate_min` of type `Date`
  """
  subjectBirthDate_min: Date_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`consentGivenAt_max` of type `Timestamp`
  """
  consentGivenAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `ConsentRecord`.`subjectBirthDate_max` of type `Date`
  """
  subjectBirthDate_max: Date_Filter
}
"""
✨ Generated key input type for table 'ConsentRecord'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ConsentRecord_Key {
  """
  ✨ Generated from Field `ConsentRecord`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ConsentRecord`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'ConsentRecord'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ConsentRecord_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ConsentRecord_Filter
}
"""
✨ Generated order input type for table 'ConsentRecord'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ConsentRecord_Order {
  """
  ✨ Generated from Field `ConsentRecord`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`companyId` of type `UUID!`
  """
  companyId: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`company` of type `Company!`
  """
  company: Company_Order
  """
  ✨ Generated from Field `ConsentRecord`.`consentGivenAt` of type `Timestamp!`
  """
  consentGivenAt: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`consentText` of type `String!`
  """
  consentText: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`consentType` of type `String!`
  """
  consentType: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`isActive` of type `Boolean!`
  """
  isActive: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`subjectBirthDate` of type `Date!`
  """
  subjectBirthDate: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`subjectName` of type `String!`
  """
  subjectName: OrderDirection
  """
  ✨ Generated from Field `ConsentRecord`.`subjectPhone` of type `String!`
  """
  subjectPhone: OrderDirection
}
"""
✨ Generated data input type for table 'ConsultationUsage'. It includes all necessary fields for creating or upserting rows into table.
"""
input ConsultationUsage_Data {
  """
  ✨ Generated from Field `ConsultationUsage`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ConsultationUsage`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `ConsultationUsage`.`organizationId` of type `UUID`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `ConsultationUsage`.`organizationId` of type `UUID`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `ConsultationUsage`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `ConsultationUsage`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `ConsultationUsage`.`organization` of type `Organization`
  """
  organization: Organization_Key
  """
  ✨ Generated from Field `ConsultationUsage`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `ConsultationUsage`.`consultationType` of type `String!`
  """
  consultationType: String
  """
  ✨ `_expr` server value variant of `consultationType` (✨ Generated from Field `ConsultationUsage`.`consultationType` of type `String!`)
  """
  consultationType_expr: String_Expr
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost` of type `Int!`
  """
  creditCost: Int
  """
  ✨ `_expr` server value variant of `creditCost` (✨ Generated from Field `ConsultationUsage`.`creditCost` of type `Int!`)
  """
  creditCost_expr: Int_Expr
  """
  ✨ `_update` server value variant of `creditCost` (✨ Generated from Field `ConsultationUsage`.`creditCost` of type `Int!`)
  """
  creditCost_update: [Int_Update!]
  """
  ✨ Generated from Field `ConsultationUsage`.`duration` of type `Int`
  """
  duration: Int
  """
  ✨ `_expr` server value variant of `duration` (✨ Generated from Field `ConsultationUsage`.`duration` of type `Int`)
  """
  duration_expr: Int_Expr
  """
  ✨ `_update` server value variant of `duration` (✨ Generated from Field `ConsultationUsage`.`duration` of type `Int`)
  """
  duration_update: [Int_Update!]
  """
  ✨ Generated from Field `ConsultationUsage`.`endedAt` of type `Timestamp`
  """
  endedAt: Timestamp
  """
  ✨ `_expr` server value variant of `endedAt` (✨ Generated from Field `ConsultationUsage`.`endedAt` of type `Timestamp`)
  """
  endedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `endedAt` (✨ Generated from Field `ConsultationUsage`.`endedAt` of type `Timestamp`)
  """
  endedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `endedAt` (✨ Generated from Field `ConsultationUsage`.`endedAt` of type `Timestamp`)
  """
  endedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `ConsultationUsage`.`feedback` of type `String`
  """
  feedback: String
  """
  ✨ `_expr` server value variant of `feedback` (✨ Generated from Field `ConsultationUsage`.`feedback` of type `String`)
  """
  feedback_expr: String_Expr
  """
  ✨ Generated from Field `ConsultationUsage`.`messages` of type `String!`
  """
  messages: String
  """
  ✨ `_expr` server value variant of `messages` (✨ Generated from Field `ConsultationUsage`.`messages` of type `String!`)
  """
  messages_expr: String_Expr
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction` of type `Int`
  """
  satisfaction: Int
  """
  ✨ `_expr` server value variant of `satisfaction` (✨ Generated from Field `ConsultationUsage`.`satisfaction` of type `Int`)
  """
  satisfaction_expr: Int_Expr
  """
  ✨ `_update` server value variant of `satisfaction` (✨ Generated from Field `ConsultationUsage`.`satisfaction` of type `Int`)
  """
  satisfaction_update: [Int_Update!]
  """
  ✨ Generated from Field `ConsultationUsage`.`startedAt` of type `Timestamp!`
  """
  startedAt: Timestamp
  """
  ✨ `_expr` server value variant of `startedAt` (✨ Generated from Field `ConsultationUsage`.`startedAt` of type `Timestamp!`)
  """
  startedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `startedAt` (✨ Generated from Field `ConsultationUsage`.`startedAt` of type `Timestamp!`)
  """
  startedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `startedAt` (✨ Generated from Field `ConsultationUsage`.`startedAt` of type `Timestamp!`)
  """
  startedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'ConsultationUsage'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ConsultationUsage_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ConsultationUsage_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ConsultationUsage_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ConsultationUsage_Filter!]
  """
  ✨ Generated from Field `ConsultationUsage`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`organizationId` of type `UUID`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`organization` of type `Organization`
  """
  organization: Organization_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`consultationType` of type `String!`
  """
  consultationType: String_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost` of type `Int!`
  """
  creditCost: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`duration` of type `Int`
  """
  duration: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`endedAt` of type `Timestamp`
  """
  endedAt: Timestamp_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`feedback` of type `String`
  """
  feedback: String_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`messages` of type `String!`
  """
  messages: String_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction` of type `Int`
  """
  satisfaction: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`startedAt` of type `Timestamp!`
  """
  startedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'ConsultationUsage'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ConsultationUsage_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ConsultationUsage_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ConsultationUsage_Filter
}
"""
✨ Generated having input type for table 'ConsultationUsage'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ConsultationUsage_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ConsultationUsage_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ConsultationUsage_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ConsultationUsage_Having!]
  """
  ✨ Generated from Field `ConsultationUsage`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`consultationType_count` of type `Int!`
  """
  consultationType_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost_count` of type `Int!`
  """
  creditCost_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`duration_count` of type `Int!`
  """
  duration_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`endedAt_count` of type `Int!`
  """
  endedAt_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`feedback_count` of type `Int!`
  """
  feedback_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`messages_count` of type `Int!`
  """
  messages_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction_count` of type `Int!`
  """
  satisfaction_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`startedAt_count` of type `Int!`
  """
  startedAt_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost_sum` of type `Int`
  """
  creditCost_sum: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`duration_sum` of type `Int`
  """
  duration_sum: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction_sum` of type `Int`
  """
  satisfaction_sum: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost_avg` of type `Float`
  """
  creditCost_avg: Float_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`duration_avg` of type `Float`
  """
  duration_avg: Float_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction_avg` of type `Float`
  """
  satisfaction_avg: Float_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost_min` of type `Int`
  """
  creditCost_min: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`duration_min` of type `Int`
  """
  duration_min: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`endedAt_min` of type `Timestamp`
  """
  endedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction_min` of type `Int`
  """
  satisfaction_min: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`startedAt_min` of type `Timestamp`
  """
  startedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost_max` of type `Int`
  """
  creditCost_max: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`duration_max` of type `Int`
  """
  duration_max: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`endedAt_max` of type `Timestamp`
  """
  endedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction_max` of type `Int`
  """
  satisfaction_max: Int_Filter
  """
  ✨ Generated from Field `ConsultationUsage`.`startedAt_max` of type `Timestamp`
  """
  startedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'ConsultationUsage'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ConsultationUsage_Key {
  """
  ✨ Generated from Field `ConsultationUsage`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ConsultationUsage`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'ConsultationUsage'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ConsultationUsage_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ConsultationUsage_Filter
}
"""
✨ Generated order input type for table 'ConsultationUsage'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ConsultationUsage_Order {
  """
  ✨ Generated from Field `ConsultationUsage`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`organizationId` of type `UUID`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`organization` of type `Organization`
  """
  organization: Organization_Order
  """
  ✨ Generated from Field `ConsultationUsage`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `ConsultationUsage`.`consultationType` of type `String!`
  """
  consultationType: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`creditCost` of type `Int!`
  """
  creditCost: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`duration` of type `Int`
  """
  duration: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`endedAt` of type `Timestamp`
  """
  endedAt: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`feedback` of type `String`
  """
  feedback: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`messages` of type `String!`
  """
  messages: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`satisfaction` of type `Int`
  """
  satisfaction: OrderDirection
  """
  ✨ Generated from Field `ConsultationUsage`.`startedAt` of type `Timestamp!`
  """
  startedAt: OrderDirection
}
"""
✨ Generated data input type for table 'Contract'. It includes all necessary fields for creating or upserting rows into table.
"""
input Contract_Data {
  """
  ✨ Generated from Field `Contract`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Contract`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Contract`.`organizationId` of type `UUID!`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `Contract`.`organizationId` of type `UUID!`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `Contract`.`signedById` of type `UUID!`
  """
  signedById: UUID
  """
  ✨ `_expr` server value variant of `signedById` (✨ Generated from Field `Contract`.`signedById` of type `UUID!`)
  """
  signedById_expr: UUID_Expr
  """
  ✨ Generated from Field `Contract`.`organization` of type `Organization!`
  """
  organization: Organization_Key
  """
  ✨ Generated from Field `Contract`.`signedBy` of type `User!`
  """
  signedBy: User_Key
  """
  ✨ Generated from Field `Contract`.`billingCycle` of type `String!`
  """
  billingCycle: String
  """
  ✨ `_expr` server value variant of `billingCycle` (✨ Generated from Field `Contract`.`billingCycle` of type `String!`)
  """
  billingCycle_expr: String_Expr
  """
  ✨ Generated from Field `Contract`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Contract`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Contract`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Contract`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Contract`.`endDate` of type `Date!`
  """
  endDate: Date
  """
  ✨ `_date` server value variant of `endDate` (✨ Generated from Field `Contract`.`endDate` of type `Date!`)
  """
  endDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `endDate` (✨ Generated from Field `Contract`.`endDate` of type `Date!`)
  """
  endDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `endDate` (✨ Generated from Field `Contract`.`endDate` of type `Date!`)
  """
  endDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Contract`.`memberCount` of type `Int!`
  """
  memberCount: Int
  """
  ✨ `_expr` server value variant of `memberCount` (✨ Generated from Field `Contract`.`memberCount` of type `Int!`)
  """
  memberCount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `memberCount` (✨ Generated from Field `Contract`.`memberCount` of type `Int!`)
  """
  memberCount_update: [Int_Update!]
  """
  ✨ Generated from Field `Contract`.`paymentMethod` of type `String!`
  """
  paymentMethod: String
  """
  ✨ `_expr` server value variant of `paymentMethod` (✨ Generated from Field `Contract`.`paymentMethod` of type `String!`)
  """
  paymentMethod_expr: String_Expr
  """
  ✨ Generated from Field `Contract`.`pricePerMember` of type `Int!`
  """
  pricePerMember: Int
  """
  ✨ `_expr` server value variant of `pricePerMember` (✨ Generated from Field `Contract`.`pricePerMember` of type `Int!`)
  """
  pricePerMember_expr: Int_Expr
  """
  ✨ `_update` server value variant of `pricePerMember` (✨ Generated from Field `Contract`.`pricePerMember` of type `Int!`)
  """
  pricePerMember_update: [Int_Update!]
  """
  ✨ Generated from Field `Contract`.`renewalTerms` of type `String`
  """
  renewalTerms: String
  """
  ✨ `_expr` server value variant of `renewalTerms` (✨ Generated from Field `Contract`.`renewalTerms` of type `String`)
  """
  renewalTerms_expr: String_Expr
  """
  ✨ Generated from Field `Contract`.`startDate` of type `Date!`
  """
  startDate: Date
  """
  ✨ `_date` server value variant of `startDate` (✨ Generated from Field `Contract`.`startDate` of type `Date!`)
  """
  startDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `startDate` (✨ Generated from Field `Contract`.`startDate` of type `Date!`)
  """
  startDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `startDate` (✨ Generated from Field `Contract`.`startDate` of type `Date!`)
  """
  startDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Contract`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Contract`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `Contract`.`totalAmount` of type `Int!`
  """
  totalAmount: Int
  """
  ✨ `_expr` server value variant of `totalAmount` (✨ Generated from Field `Contract`.`totalAmount` of type `Int!`)
  """
  totalAmount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `totalAmount` (✨ Generated from Field `Contract`.`totalAmount` of type `Int!`)
  """
  totalAmount_update: [Int_Update!]
  """
  ✨ Generated from Field `Contract`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Contract`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Contract`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Contract`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Contract'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Contract_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Contract_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Contract_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Contract_Filter!]
  """
  ✨ Generated from Field `Contract`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Contract`.`organizationId` of type `UUID!`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `Contract`.`signedById` of type `UUID!`
  """
  signedById: UUID_Filter
  """
  ✨ Generated from Field `Contract`.`organization` of type `Organization!`
  """
  organization: Organization_Filter
  """
  ✨ Generated from Field `Contract`.`signedBy` of type `User!`
  """
  signedBy: User_Filter
  """
  ✨ Generated from Field `Contract`.`billingCycle` of type `String!`
  """
  billingCycle: String_Filter
  """
  ✨ Generated from Field `Contract`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Contract`.`endDate` of type `Date!`
  """
  endDate: Date_Filter
  """
  ✨ Generated from Field `Contract`.`memberCount` of type `Int!`
  """
  memberCount: Int_Filter
  """
  ✨ Generated from Field `Contract`.`paymentMethod` of type `String!`
  """
  paymentMethod: String_Filter
  """
  ✨ Generated from Field `Contract`.`pricePerMember` of type `Int!`
  """
  pricePerMember: Int_Filter
  """
  ✨ Generated from Field `Contract`.`renewalTerms` of type `String`
  """
  renewalTerms: String_Filter
  """
  ✨ Generated from Field `Contract`.`startDate` of type `Date!`
  """
  startDate: Date_Filter
  """
  ✨ Generated from Field `Contract`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `Contract`.`totalAmount` of type `Int!`
  """
  totalAmount: Int_Filter
  """
  ✨ Generated from Field `Contract`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Contract'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Contract_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Contract_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Contract_Filter
}
"""
✨ Generated having input type for table 'Contract'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Contract_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Contract_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Contract_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Contract_Having!]
  """
  ✨ Generated from Field `Contract`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`billingCycle_count` of type `Int!`
  """
  billingCycle_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`endDate_count` of type `Int!`
  """
  endDate_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`memberCount_count` of type `Int!`
  """
  memberCount_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`paymentMethod_count` of type `Int!`
  """
  paymentMethod_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`pricePerMember_count` of type `Int!`
  """
  pricePerMember_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`renewalTerms_count` of type `Int!`
  """
  renewalTerms_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`servicePackage_count` of type `Int!`
  """
  servicePackage_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`signedById_count` of type `Int!`
  """
  signedById_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`startDate_count` of type `Int!`
  """
  startDate_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`totalAmount_count` of type `Int!`
  """
  totalAmount_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Contract`.`memberCount_sum` of type `Int`
  """
  memberCount_sum: Int_Filter
  """
  ✨ Generated from Field `Contract`.`pricePerMember_sum` of type `Int`
  """
  pricePerMember_sum: Int_Filter
  """
  ✨ Generated from Field `Contract`.`totalAmount_sum` of type `Int`
  """
  totalAmount_sum: Int_Filter
  """
  ✨ Generated from Field `Contract`.`memberCount_avg` of type `Float`
  """
  memberCount_avg: Float_Filter
  """
  ✨ Generated from Field `Contract`.`pricePerMember_avg` of type `Float`
  """
  pricePerMember_avg: Float_Filter
  """
  ✨ Generated from Field `Contract`.`totalAmount_avg` of type `Float`
  """
  totalAmount_avg: Float_Filter
  """
  ✨ Generated from Field `Contract`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Contract`.`endDate_min` of type `Date`
  """
  endDate_min: Date_Filter
  """
  ✨ Generated from Field `Contract`.`memberCount_min` of type `Int`
  """
  memberCount_min: Int_Filter
  """
  ✨ Generated from Field `Contract`.`pricePerMember_min` of type `Int`
  """
  pricePerMember_min: Int_Filter
  """
  ✨ Generated from Field `Contract`.`startDate_min` of type `Date`
  """
  startDate_min: Date_Filter
  """
  ✨ Generated from Field `Contract`.`totalAmount_min` of type `Int`
  """
  totalAmount_min: Int_Filter
  """
  ✨ Generated from Field `Contract`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Contract`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Contract`.`endDate_max` of type `Date`
  """
  endDate_max: Date_Filter
  """
  ✨ Generated from Field `Contract`.`memberCount_max` of type `Int`
  """
  memberCount_max: Int_Filter
  """
  ✨ Generated from Field `Contract`.`pricePerMember_max` of type `Int`
  """
  pricePerMember_max: Int_Filter
  """
  ✨ Generated from Field `Contract`.`startDate_max` of type `Date`
  """
  startDate_max: Date_Filter
  """
  ✨ Generated from Field `Contract`.`totalAmount_max` of type `Int`
  """
  totalAmount_max: Int_Filter
  """
  ✨ Generated from Field `Contract`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Contract'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Contract_Key {
  """
  ✨ Generated from Field `Contract`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Contract`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Contract'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Contract_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Contract_Filter
}
"""
✨ Generated order input type for table 'Contract'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Contract_Order {
  """
  ✨ Generated from Field `Contract`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Contract`.`organizationId` of type `UUID!`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `Contract`.`signedById` of type `UUID!`
  """
  signedById: OrderDirection
  """
  ✨ Generated from Field `Contract`.`organization` of type `Organization!`
  """
  organization: Organization_Order
  """
  ✨ Generated from Field `Contract`.`signedBy` of type `User!`
  """
  signedBy: User_Order
  """
  ✨ Generated from Field `Contract`.`billingCycle` of type `String!`
  """
  billingCycle: OrderDirection
  """
  ✨ Generated from Field `Contract`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Contract`.`endDate` of type `Date!`
  """
  endDate: OrderDirection
  """
  ✨ Generated from Field `Contract`.`memberCount` of type `Int!`
  """
  memberCount: OrderDirection
  """
  ✨ Generated from Field `Contract`.`paymentMethod` of type `String!`
  """
  paymentMethod: OrderDirection
  """
  ✨ Generated from Field `Contract`.`pricePerMember` of type `Int!`
  """
  pricePerMember: OrderDirection
  """
  ✨ Generated from Field `Contract`.`renewalTerms` of type `String`
  """
  renewalTerms: OrderDirection
  """
  ✨ Generated from Field `Contract`.`startDate` of type `Date!`
  """
  startDate: OrderDirection
  """
  ✨ Generated from Field `Contract`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Contract`.`totalAmount` of type `Int!`
  """
  totalAmount: OrderDirection
  """
  ✨ Generated from Field `Contract`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'CreditPackage'. It includes all necessary fields for creating or upserting rows into table.
"""
input CreditPackage_Data {
  """
  ✨ Generated from Field `CreditPackage`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `CreditPackage`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `CreditPackage`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `CreditPackage`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `CreditPackage`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `CreditPackage`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount` of type `Int!`
  """
  creditAmount: Int
  """
  ✨ `_expr` server value variant of `creditAmount` (✨ Generated from Field `CreditPackage`.`creditAmount` of type `Int!`)
  """
  creditAmount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `creditAmount` (✨ Generated from Field `CreditPackage`.`creditAmount` of type `Int!`)
  """
  creditAmount_update: [Int_Update!]
  """
  ✨ Generated from Field `CreditPackage`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `CreditPackage`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `CreditPackage`.`isActive` of type `Boolean!`
  """
  isActive: Boolean
  """
  ✨ `_expr` server value variant of `isActive` (✨ Generated from Field `CreditPackage`.`isActive` of type `Boolean!`)
  """
  isActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `CreditPackage`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `CreditPackage`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `CreditPackage`.`price` of type `Int!`
  """
  price: Int
  """
  ✨ `_expr` server value variant of `price` (✨ Generated from Field `CreditPackage`.`price` of type `Int!`)
  """
  price_expr: Int_Expr
  """
  ✨ `_update` server value variant of `price` (✨ Generated from Field `CreditPackage`.`price` of type `Int!`)
  """
  price_update: [Int_Update!]
  """
  ✨ Generated from Field `CreditPackage`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `CreditPackage`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `CreditPackage`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `CreditPackage`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `CreditPackage`.`validityDays` of type `Int!`
  """
  validityDays: Int
  """
  ✨ `_expr` server value variant of `validityDays` (✨ Generated from Field `CreditPackage`.`validityDays` of type `Int!`)
  """
  validityDays_expr: Int_Expr
  """
  ✨ `_update` server value variant of `validityDays` (✨ Generated from Field `CreditPackage`.`validityDays` of type `Int!`)
  """
  validityDays_update: [Int_Update!]
  """
  ✨ Generated from Field `CreditPackage`.`volumeDiscounts` of type `String`
  """
  volumeDiscounts: String
  """
  ✨ `_expr` server value variant of `volumeDiscounts` (✨ Generated from Field `CreditPackage`.`volumeDiscounts` of type `String`)
  """
  volumeDiscounts_expr: String_Expr
}
"""
✨ Generated filter input type for table 'CreditPackage'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CreditPackage_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [CreditPackage_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: CreditPackage_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [CreditPackage_Filter!]
  """
  ✨ Generated from Field `CreditPackage`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `CreditPackage`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount` of type `Int!`
  """
  creditAmount: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `CreditPackage`.`isActive` of type `Boolean!`
  """
  isActive: Boolean_Filter
  """
  ✨ Generated from Field `CreditPackage`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `CreditPackage`.`price` of type `Int!`
  """
  price: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `CreditPackage`.`validityDays` of type `Int!`
  """
  validityDays: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`volumeDiscounts` of type `String`
  """
  volumeDiscounts: String_Filter
}
"""
✨ Generated first-row input type for table 'CreditPackage'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input CreditPackage_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [CreditPackage_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: CreditPackage_Filter
}
"""
✨ Generated having input type for table 'CreditPackage'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CreditPackage_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [CreditPackage_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: CreditPackage_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [CreditPackage_Having!]
  """
  ✨ Generated from Field `CreditPackage`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount_count` of type `Int!`
  """
  creditAmount_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`isActive_count` of type `Int!`
  """
  isActive_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`price_count` of type `Int!`
  """
  price_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`validityDays_count` of type `Int!`
  """
  validityDays_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`volumeDiscounts_count` of type `Int!`
  """
  volumeDiscounts_count: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount_sum` of type `Int`
  """
  creditAmount_sum: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`price_sum` of type `Int`
  """
  price_sum: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`validityDays_sum` of type `Int`
  """
  validityDays_sum: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount_avg` of type `Float`
  """
  creditAmount_avg: Float_Filter
  """
  ✨ Generated from Field `CreditPackage`.`price_avg` of type `Float`
  """
  price_avg: Float_Filter
  """
  ✨ Generated from Field `CreditPackage`.`validityDays_avg` of type `Float`
  """
  validityDays_avg: Float_Filter
  """
  ✨ Generated from Field `CreditPackage`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount_min` of type `Int`
  """
  creditAmount_min: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`price_min` of type `Int`
  """
  price_min: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `CreditPackage`.`validityDays_min` of type `Int`
  """
  validityDays_min: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount_max` of type `Int`
  """
  creditAmount_max: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`price_max` of type `Int`
  """
  price_max: Int_Filter
  """
  ✨ Generated from Field `CreditPackage`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `CreditPackage`.`validityDays_max` of type `Int`
  """
  validityDays_max: Int_Filter
}
"""
✨ Generated key input type for table 'CreditPackage'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input CreditPackage_Key {
  """
  ✨ Generated from Field `CreditPackage`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `CreditPackage`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'CreditPackage'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input CreditPackage_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: CreditPackage_Filter
}
"""
✨ Generated order input type for table 'CreditPackage'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input CreditPackage_Order {
  """
  ✨ Generated from Field `CreditPackage`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`creditAmount` of type `Int!`
  """
  creditAmount: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`isActive` of type `Boolean!`
  """
  isActive: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`price` of type `Int!`
  """
  price: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`validityDays` of type `Int!`
  """
  validityDays: OrderDirection
  """
  ✨ Generated from Field `CreditPackage`.`volumeDiscounts` of type `String`
  """
  volumeDiscounts: OrderDirection
}
"""
✨ Generated data input type for table 'CreditTransaction'. It includes all necessary fields for creating or upserting rows into table.
"""
input CreditTransaction_Data {
  """
  ✨ Generated from Field `CreditTransaction`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `CreditTransaction`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `CreditTransaction`.`companyId` of type `UUID`
  """
  companyId: UUID
  """
  ✨ `_expr` server value variant of `companyId` (✨ Generated from Field `CreditTransaction`.`companyId` of type `UUID`)
  """
  companyId_expr: UUID_Expr
  """
  ✨ Generated from Field `CreditTransaction`.`createdById` of type `UUID!`
  """
  createdById: UUID
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `CreditTransaction`.`createdById` of type `UUID!`)
  """
  createdById_expr: UUID_Expr
  """
  ✨ Generated from Field `CreditTransaction`.`organizationId` of type `UUID`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `CreditTransaction`.`organizationId` of type `UUID`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `CreditTransaction`.`userId` of type `UUID`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `CreditTransaction`.`userId` of type `UUID`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `CreditTransaction`.`company` of type `Company`
  """
  company: Company_Key
  """
  ✨ Generated from Field `CreditTransaction`.`createdBy` of type `User!`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `CreditTransaction`.`organization` of type `Organization`
  """
  organization: Organization_Key
  """
  ✨ Generated from Field `CreditTransaction`.`user` of type `User`
  """
  user: User_Key
  """
  ✨ Generated from Field `CreditTransaction`.`amount` of type `Int!`
  """
  amount: Int
  """
  ✨ `_expr` server value variant of `amount` (✨ Generated from Field `CreditTransaction`.`amount` of type `Int!`)
  """
  amount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `amount` (✨ Generated from Field `CreditTransaction`.`amount` of type `Int!`)
  """
  amount_update: [Int_Update!]
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter` of type `Int!`
  """
  balanceAfter: Int
  """
  ✨ `_expr` server value variant of `balanceAfter` (✨ Generated from Field `CreditTransaction`.`balanceAfter` of type `Int!`)
  """
  balanceAfter_expr: Int_Expr
  """
  ✨ `_update` server value variant of `balanceAfter` (✨ Generated from Field `CreditTransaction`.`balanceAfter` of type `Int!`)
  """
  balanceAfter_update: [Int_Update!]
  """
  ✨ Generated from Field `CreditTransaction`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `CreditTransaction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `CreditTransaction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `CreditTransaction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `CreditTransaction`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `CreditTransaction`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `CreditTransaction`.`metadata` of type `String`
  """
  metadata: String
  """
  ✨ `_expr` server value variant of `metadata` (✨ Generated from Field `CreditTransaction`.`metadata` of type `String`)
  """
  metadata_expr: String_Expr
}
"""
✨ Generated filter input type for table 'CreditTransaction'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CreditTransaction_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [CreditTransaction_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: CreditTransaction_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [CreditTransaction_Filter!]
  """
  ✨ Generated from Field `CreditTransaction`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`companyId` of type `UUID`
  """
  companyId: UUID_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`createdById` of type `UUID!`
  """
  createdById: UUID_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`organizationId` of type `UUID`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`userId` of type `UUID`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`company` of type `Company`
  """
  company: Company_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`createdBy` of type `User!`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`organization` of type `Organization`
  """
  organization: Organization_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`user` of type `User`
  """
  user: User_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`amount` of type `Int!`
  """
  amount: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter` of type `Int!`
  """
  balanceAfter: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`metadata` of type `String`
  """
  metadata: String_Filter
}
"""
✨ Generated first-row input type for table 'CreditTransaction'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input CreditTransaction_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [CreditTransaction_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: CreditTransaction_Filter
}
"""
✨ Generated having input type for table 'CreditTransaction'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CreditTransaction_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [CreditTransaction_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: CreditTransaction_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [CreditTransaction_Having!]
  """
  ✨ Generated from Field `CreditTransaction`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`amount_count` of type `Int!`
  """
  amount_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter_count` of type `Int!`
  """
  balanceAfter_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`companyId_count` of type `Int!`
  """
  companyId_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`metadata_count` of type `Int!`
  """
  metadata_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`type_count` of type `Int!`
  """
  type_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`amount_sum` of type `Int`
  """
  amount_sum: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter_sum` of type `Int`
  """
  balanceAfter_sum: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`amount_avg` of type `Float`
  """
  amount_avg: Float_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter_avg` of type `Float`
  """
  balanceAfter_avg: Float_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`amount_min` of type `Int`
  """
  amount_min: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter_min` of type `Int`
  """
  balanceAfter_min: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`amount_max` of type `Int`
  """
  amount_max: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter_max` of type `Int`
  """
  balanceAfter_max: Int_Filter
  """
  ✨ Generated from Field `CreditTransaction`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'CreditTransaction'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input CreditTransaction_Key {
  """
  ✨ Generated from Field `CreditTransaction`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `CreditTransaction`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'CreditTransaction'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input CreditTransaction_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: CreditTransaction_Filter
}
"""
✨ Generated order input type for table 'CreditTransaction'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input CreditTransaction_Order {
  """
  ✨ Generated from Field `CreditTransaction`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`companyId` of type `UUID`
  """
  companyId: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`createdById` of type `UUID!`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`organizationId` of type `UUID`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`userId` of type `UUID`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`company` of type `Company`
  """
  company: Company_Order
  """
  ✨ Generated from Field `CreditTransaction`.`createdBy` of type `User!`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `CreditTransaction`.`organization` of type `Organization`
  """
  organization: Organization_Order
  """
  ✨ Generated from Field `CreditTransaction`.`user` of type `User`
  """
  user: User_Order
  """
  ✨ Generated from Field `CreditTransaction`.`amount` of type `Int!`
  """
  amount: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`balanceAfter` of type `Int!`
  """
  balanceAfter: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `CreditTransaction`.`metadata` of type `String`
  """
  metadata: OrderDirection
}
"""
✨ Generated filter input type for table 'CreditTransactionType'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CreditTransactionType_Filter {
  """
  Match if field is exactly equal to provided value.
  """
  eq: CreditTransactionType
  """
  Match if field is not equal to provided value.
  """
  ne: CreditTransactionType
  """
  When true, match if field `IS NULL`. When false, match if field is `NOT NULL`.
  """
  isNull: Boolean
  """
  Match if field value is among the provided list of values.
  """
  in: [CreditTransactionType!]
  """
  Match if field value is not among the provided list of values.
  """
  nin: [CreditTransactionType!]
  """
  Match if field value is greater than the provided value, based on index ordering of supported enum values.
  """
  gt: CreditTransactionType
  """
  Match if field is greater than or equal to the provided value.
  """
  ge: CreditTransactionType
  """
  Match if field value is less than the provided value, based on index ordering of supported enum values.
  """
  lt: CreditTransactionType
  """
  Match if field is less than or equal to the provided value, based on index ordering of supported enum values.
  """
  le: CreditTransactionType
}
"""
✨ Generated list filter input type for table 'CreditTransactionType'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input CreditTransactionType_ListFilter {
  """
  Match if list field contains the provided value as a member.
  """
  includes: CreditTransactionType
  """
  Match if list field contains all of the provided values as members.
  """
  includesAll: [CreditTransactionType!]
  """
  Match if list field does not contain the provided value as a member.
  """
  excludes: CreditTransactionType
  """
  Match if list field does not contain any of the provided values as members.
  """
  excludesAll: [CreditTransactionType!]
  """
  The desired number of enum values that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: CreditTransactionType_Filter
}
"""
✨ Generated data input type for table 'Device'. It includes all necessary fields for creating or upserting rows into table.
"""
input Device_Data {
  """
  ✨ Generated from Field `Device`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Device`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Device`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Device`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Device`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Device`.`lastSyncAt` of type `Timestamp`
  """
  lastSyncAt: Timestamp
  """
  ✨ `_expr` server value variant of `lastSyncAt` (✨ Generated from Field `Device`.`lastSyncAt` of type `Timestamp`)
  """
  lastSyncAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastSyncAt` (✨ Generated from Field `Device`.`lastSyncAt` of type `Timestamp`)
  """
  lastSyncAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastSyncAt` (✨ Generated from Field `Device`.`lastSyncAt` of type `Timestamp`)
  """
  lastSyncAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Device`.`manufacturer` of type `String`
  """
  manufacturer: String
  """
  ✨ `_expr` server value variant of `manufacturer` (✨ Generated from Field `Device`.`manufacturer` of type `String`)
  """
  manufacturer_expr: String_Expr
  """
  ✨ Generated from Field `Device`.`model` of type `String!`
  """
  model: String
  """
  ✨ `_expr` server value variant of `model` (✨ Generated from Field `Device`.`model` of type `String!`)
  """
  model_expr: String_Expr
  """
  ✨ Generated from Field `Device`.`pairedAt` of type `Timestamp!`
  """
  pairedAt: Timestamp
  """
  ✨ `_expr` server value variant of `pairedAt` (✨ Generated from Field `Device`.`pairedAt` of type `Timestamp!`)
  """
  pairedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `pairedAt` (✨ Generated from Field `Device`.`pairedAt` of type `Timestamp!`)
  """
  pairedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `pairedAt` (✨ Generated from Field `Device`.`pairedAt` of type `Timestamp!`)
  """
  pairedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Device`.`serialNumber` of type `String!`
  """
  serialNumber: String
  """
  ✨ `_expr` server value variant of `serialNumber` (✨ Generated from Field `Device`.`serialNumber` of type `String!`)
  """
  serialNumber_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Device'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Device_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Device_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Device_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Device_Filter!]
  """
  ✨ Generated from Field `Device`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Device`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Device`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Device`.`lastSyncAt` of type `Timestamp`
  """
  lastSyncAt: Timestamp_Filter
  """
  ✨ Generated from Field `Device`.`manufacturer` of type `String`
  """
  manufacturer: String_Filter
  """
  ✨ Generated from Field `Device`.`model` of type `String!`
  """
  model: String_Filter
  """
  ✨ Generated from Field `Device`.`pairedAt` of type `Timestamp!`
  """
  pairedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Device`.`serialNumber` of type `String!`
  """
  serialNumber: String_Filter
  """
  ✨ Generated from Field `Device`.`bioSignalSessions_on_device` of type `[BioSignalSession!]!`
  """
  bioSignalSessions_on_device: BioSignalSession_ListFilter
}
"""
✨ Generated first-row input type for table 'Device'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Device_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Device_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Device_Filter
}
"""
✨ Generated having input type for table 'Device'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Device_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Device_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Device_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Device_Having!]
  """
  ✨ Generated from Field `Device`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Device`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Device`.`lastSyncAt_count` of type `Int!`
  """
  lastSyncAt_count: Int_Filter
  """
  ✨ Generated from Field `Device`.`manufacturer_count` of type `Int!`
  """
  manufacturer_count: Int_Filter
  """
  ✨ Generated from Field `Device`.`model_count` of type `Int!`
  """
  model_count: Int_Filter
  """
  ✨ Generated from Field `Device`.`pairedAt_count` of type `Int!`
  """
  pairedAt_count: Int_Filter
  """
  ✨ Generated from Field `Device`.`serialNumber_count` of type `Int!`
  """
  serialNumber_count: Int_Filter
  """
  ✨ Generated from Field `Device`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Device`.`lastSyncAt_min` of type `Timestamp`
  """
  lastSyncAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Device`.`pairedAt_min` of type `Timestamp`
  """
  pairedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Device`.`lastSyncAt_max` of type `Timestamp`
  """
  lastSyncAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Device`.`pairedAt_max` of type `Timestamp`
  """
  pairedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Device'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Device_Key {
  """
  ✨ Generated from Field `Device`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Device`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Device'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Device_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Device_Filter
}
"""
✨ Generated order input type for table 'Device'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Device_Order {
  """
  ✨ Generated from Field `Device`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Device`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Device`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Device`.`lastSyncAt` of type `Timestamp`
  """
  lastSyncAt: OrderDirection
  """
  ✨ Generated from Field `Device`.`manufacturer` of type `String`
  """
  manufacturer: OrderDirection
  """
  ✨ Generated from Field `Device`.`model` of type `String!`
  """
  model: OrderDirection
  """
  ✨ Generated from Field `Device`.`pairedAt` of type `Timestamp!`
  """
  pairedAt: OrderDirection
  """
  ✨ Generated from Field `Device`.`serialNumber` of type `String!`
  """
  serialNumber: OrderDirection
}
"""
✨ Generated data input type for table 'ManualMoodLog'. It includes all necessary fields for creating or upserting rows into table.
"""
input ManualMoodLog_Data {
  """
  ✨ Generated from Field `ManualMoodLog`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ManualMoodLog`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `ManualMoodLog`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `ManualMoodLog`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `ManualMoodLog`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `ManualMoodLog`.`mood` of type `String!`
  """
  mood: String
  """
  ✨ `_expr` server value variant of `mood` (✨ Generated from Field `ManualMoodLog`.`mood` of type `String!`)
  """
  mood_expr: String_Expr
  """
  ✨ Generated from Field `ManualMoodLog`.`notes` of type `String`
  """
  notes: String
  """
  ✨ `_expr` server value variant of `notes` (✨ Generated from Field `ManualMoodLog`.`notes` of type `String`)
  """
  notes_expr: String_Expr
  """
  ✨ Generated from Field `ManualMoodLog`.`stressors` of type `[String]`
  """
  stressors: [String!]
  """
  ✨ `_update` server value variant of `stressors` (✨ Generated from Field `ManualMoodLog`.`stressors` of type `[String]`)
  """
  stressors_update: [String_ListUpdate!]
  """
  ✨ Generated from Field `ManualMoodLog`.`timestamp` of type `Timestamp!`
  """
  timestamp: Timestamp
  """
  ✨ `_expr` server value variant of `timestamp` (✨ Generated from Field `ManualMoodLog`.`timestamp` of type `Timestamp!`)
  """
  timestamp_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `timestamp` (✨ Generated from Field `ManualMoodLog`.`timestamp` of type `Timestamp!`)
  """
  timestamp_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `timestamp` (✨ Generated from Field `ManualMoodLog`.`timestamp` of type `Timestamp!`)
  """
  timestamp_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'ManualMoodLog'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ManualMoodLog_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ManualMoodLog_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ManualMoodLog_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ManualMoodLog_Filter!]
  """
  ✨ Generated from Field `ManualMoodLog`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`mood` of type `String!`
  """
  mood: String_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`notes` of type `String`
  """
  notes: String_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`stressors` of type `[String]`
  """
  stressors: String_ListFilter
  """
  ✨ Generated from Field `ManualMoodLog`.`timestamp` of type `Timestamp!`
  """
  timestamp: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'ManualMoodLog'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ManualMoodLog_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ManualMoodLog_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ManualMoodLog_Filter
}
"""
✨ Generated having input type for table 'ManualMoodLog'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ManualMoodLog_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ManualMoodLog_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ManualMoodLog_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ManualMoodLog_Having!]
  """
  ✨ Generated from Field `ManualMoodLog`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`mood_count` of type `Int!`
  """
  mood_count: Int_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`notes_count` of type `Int!`
  """
  notes_count: Int_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`timestamp_count` of type `Int!`
  """
  timestamp_count: Int_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`timestamp_min` of type `Timestamp`
  """
  timestamp_min: Timestamp_Filter
  """
  ✨ Generated from Field `ManualMoodLog`.`timestamp_max` of type `Timestamp`
  """
  timestamp_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'ManualMoodLog'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ManualMoodLog_Key {
  """
  ✨ Generated from Field `ManualMoodLog`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ManualMoodLog`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'ManualMoodLog'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ManualMoodLog_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ManualMoodLog_Filter
}
"""
✨ Generated order input type for table 'ManualMoodLog'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ManualMoodLog_Order {
  """
  ✨ Generated from Field `ManualMoodLog`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ManualMoodLog`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `ManualMoodLog`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `ManualMoodLog`.`mood` of type `String!`
  """
  mood: OrderDirection
  """
  ✨ Generated from Field `ManualMoodLog`.`notes` of type `String`
  """
  notes: OrderDirection
  """
  ✨ Generated from Field `ManualMoodLog`.`timestamp` of type `Timestamp!`
  """
  timestamp: OrderDirection
}
"""
✨ Generated data input type for table 'MeasurementSession'. It includes all necessary fields for creating or upserting rows into table.
"""
input MeasurementSession_Data {
  """
  ✨ Generated from Field `MeasurementSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `MeasurementSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`companyId` of type `UUID!`
  """
  companyId: UUID
  """
  ✨ `_expr` server value variant of `companyId` (✨ Generated from Field `MeasurementSession`.`companyId` of type `UUID!`)
  """
  companyId_expr: UUID_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`measuredById` of type `UUID!`
  """
  measuredById: UUID
  """
  ✨ `_expr` server value variant of `measuredById` (✨ Generated from Field `MeasurementSession`.`measuredById` of type `UUID!`)
  """
  measuredById_expr: UUID_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`company` of type `Company!`
  """
  company: Company_Key
  """
  ✨ Generated from Field `MeasurementSession`.`measuredBy` of type `User!`
  """
  measuredBy: User_Key
  """
  ✨ Generated from Field `MeasurementSession`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `MeasurementSession`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `MeasurementSession`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `MeasurementSession`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`duration` of type `Int!`
  """
  duration: Int
  """
  ✨ `_expr` server value variant of `duration` (✨ Generated from Field `MeasurementSession`.`duration` of type `Int!`)
  """
  duration_expr: Int_Expr
  """
  ✨ `_update` server value variant of `duration` (✨ Generated from Field `MeasurementSession`.`duration` of type `Int!`)
  """
  duration_update: [Int_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel` of type `Float`
  """
  focusLevel: Float
  """
  ✨ `_expr` server value variant of `focusLevel` (✨ Generated from Field `MeasurementSession`.`focusLevel` of type `Float`)
  """
  focusLevel_expr: Float_Expr
  """
  ✨ `_update` server value variant of `focusLevel` (✨ Generated from Field `MeasurementSession`.`focusLevel` of type `Float`)
  """
  focusLevel_update: [Float_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore` of type `Int`
  """
  overallScore: Int
  """
  ✨ `_expr` server value variant of `overallScore` (✨ Generated from Field `MeasurementSession`.`overallScore` of type `Int`)
  """
  overallScore_expr: Int_Expr
  """
  ✨ `_update` server value variant of `overallScore` (✨ Generated from Field `MeasurementSession`.`overallScore` of type `Int`)
  """
  overallScore_update: [Int_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`processedDataUri` of type `String`
  """
  processedDataUri: String
  """
  ✨ `_expr` server value variant of `processedDataUri` (✨ Generated from Field `MeasurementSession`.`processedDataUri` of type `String`)
  """
  processedDataUri_expr: String_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`rawDataUri` of type `String`
  """
  rawDataUri: String
  """
  ✨ `_expr` server value variant of `rawDataUri` (✨ Generated from Field `MeasurementSession`.`rawDataUri` of type `String`)
  """
  rawDataUri_expr: String_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`reportGenerated` of type `Boolean!`
  """
  reportGenerated: Boolean
  """
  ✨ `_expr` server value variant of `reportGenerated` (✨ Generated from Field `MeasurementSession`.`reportGenerated` of type `Boolean!`)
  """
  reportGenerated_expr: Boolean_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`sessionDate` of type `Date!`
  """
  sessionDate: Date
  """
  ✨ `_date` server value variant of `sessionDate` (✨ Generated from Field `MeasurementSession`.`sessionDate` of type `Date!`)
  """
  sessionDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `sessionDate` (✨ Generated from Field `MeasurementSession`.`sessionDate` of type `Date!`)
  """
  sessionDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `sessionDate` (✨ Generated from Field `MeasurementSession`.`sessionDate` of type `Date!`)
  """
  sessionDate_update: [Date_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`sessionTime` of type `Timestamp!`
  """
  sessionTime: Timestamp
  """
  ✨ `_expr` server value variant of `sessionTime` (✨ Generated from Field `MeasurementSession`.`sessionTime` of type `Timestamp!`)
  """
  sessionTime_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `sessionTime` (✨ Generated from Field `MeasurementSession`.`sessionTime` of type `Timestamp!`)
  """
  sessionTime_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `sessionTime` (✨ Generated from Field `MeasurementSession`.`sessionTime` of type `Timestamp!`)
  """
  sessionTime_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel` of type `Float`
  """
  stressLevel: Float
  """
  ✨ `_expr` server value variant of `stressLevel` (✨ Generated from Field `MeasurementSession`.`stressLevel` of type `Float`)
  """
  stressLevel_expr: Float_Expr
  """
  ✨ `_update` server value variant of `stressLevel` (✨ Generated from Field `MeasurementSession`.`stressLevel` of type `Float`)
  """
  stressLevel_update: [Float_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`subjectBirthDate` of type `Date!`
  """
  subjectBirthDate: Date
  """
  ✨ `_date` server value variant of `subjectBirthDate` (✨ Generated from Field `MeasurementSession`.`subjectBirthDate` of type `Date!`)
  """
  subjectBirthDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `subjectBirthDate` (✨ Generated from Field `MeasurementSession`.`subjectBirthDate` of type `Date!`)
  """
  subjectBirthDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `subjectBirthDate` (✨ Generated from Field `MeasurementSession`.`subjectBirthDate` of type `Date!`)
  """
  subjectBirthDate_update: [Date_Update!]
  """
  ✨ Generated from Field `MeasurementSession`.`subjectName` of type `String!`
  """
  subjectName: String
  """
  ✨ `_expr` server value variant of `subjectName` (✨ Generated from Field `MeasurementSession`.`subjectName` of type `String!`)
  """
  subjectName_expr: String_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`subjectPhone` of type `String!`
  """
  subjectPhone: String
  """
  ✨ `_expr` server value variant of `subjectPhone` (✨ Generated from Field `MeasurementSession`.`subjectPhone` of type `String!`)
  """
  subjectPhone_expr: String_Expr
  """
  ✨ Generated from Field `MeasurementSession`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `MeasurementSession`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `MeasurementSession`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `MeasurementSession`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'MeasurementSession'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input MeasurementSession_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [MeasurementSession_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: MeasurementSession_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [MeasurementSession_Filter!]
  """
  ✨ Generated from Field `MeasurementSession`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`companyId` of type `UUID!`
  """
  companyId: UUID_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`measuredById` of type `UUID!`
  """
  measuredById: UUID_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`company` of type `Company!`
  """
  company: Company_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`measuredBy` of type `User!`
  """
  measuredBy: User_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`duration` of type `Int!`
  """
  duration: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel` of type `Float`
  """
  focusLevel: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore` of type `Int`
  """
  overallScore: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`processedDataUri` of type `String`
  """
  processedDataUri: String_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`rawDataUri` of type `String`
  """
  rawDataUri: String_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`reportGenerated` of type `Boolean!`
  """
  reportGenerated: Boolean_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionDate` of type `Date!`
  """
  sessionDate: Date_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionTime` of type `Timestamp!`
  """
  sessionTime: Timestamp_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel` of type `Float`
  """
  stressLevel: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectBirthDate` of type `Date!`
  """
  subjectBirthDate: Date_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectName` of type `String!`
  """
  subjectName: String_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectPhone` of type `String!`
  """
  subjectPhone: String_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'MeasurementSession'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input MeasurementSession_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [MeasurementSession_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: MeasurementSession_Filter
}
"""
✨ Generated having input type for table 'MeasurementSession'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input MeasurementSession_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [MeasurementSession_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: MeasurementSession_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [MeasurementSession_Having!]
  """
  ✨ Generated from Field `MeasurementSession`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`companyId_count` of type `Int!`
  """
  companyId_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`duration_count` of type `Int!`
  """
  duration_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel_count` of type `Int!`
  """
  focusLevel_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`measuredById_count` of type `Int!`
  """
  measuredById_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore_count` of type `Int!`
  """
  overallScore_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`processedDataUri_count` of type `Int!`
  """
  processedDataUri_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`rawDataUri_count` of type `Int!`
  """
  rawDataUri_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`reportGenerated_count` of type `Int!`
  """
  reportGenerated_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionDate_count` of type `Int!`
  """
  sessionDate_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionTime_count` of type `Int!`
  """
  sessionTime_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel_count` of type `Int!`
  """
  stressLevel_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectBirthDate_count` of type `Int!`
  """
  subjectBirthDate_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectName_count` of type `Int!`
  """
  subjectName_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectPhone_count` of type `Int!`
  """
  subjectPhone_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`duration_sum` of type `Int`
  """
  duration_sum: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel_sum` of type `Float`
  """
  focusLevel_sum: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore_sum` of type `Int`
  """
  overallScore_sum: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel_sum` of type `Float`
  """
  stressLevel_sum: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`duration_avg` of type `Float`
  """
  duration_avg: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel_avg` of type `Float`
  """
  focusLevel_avg: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore_avg` of type `Float`
  """
  overallScore_avg: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel_avg` of type `Float`
  """
  stressLevel_avg: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`duration_min` of type `Int`
  """
  duration_min: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel_min` of type `Float`
  """
  focusLevel_min: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore_min` of type `Int`
  """
  overallScore_min: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionDate_min` of type `Date`
  """
  sessionDate_min: Date_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionTime_min` of type `Timestamp`
  """
  sessionTime_min: Timestamp_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel_min` of type `Float`
  """
  stressLevel_min: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectBirthDate_min` of type `Date`
  """
  subjectBirthDate_min: Date_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`duration_max` of type `Int`
  """
  duration_max: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel_max` of type `Float`
  """
  focusLevel_max: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore_max` of type `Int`
  """
  overallScore_max: Int_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionDate_max` of type `Date`
  """
  sessionDate_max: Date_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`sessionTime_max` of type `Timestamp`
  """
  sessionTime_max: Timestamp_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel_max` of type `Float`
  """
  stressLevel_max: Float_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`subjectBirthDate_max` of type `Date`
  """
  subjectBirthDate_max: Date_Filter
  """
  ✨ Generated from Field `MeasurementSession`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'MeasurementSession'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input MeasurementSession_Key {
  """
  ✨ Generated from Field `MeasurementSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `MeasurementSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'MeasurementSession'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input MeasurementSession_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: MeasurementSession_Filter
}
"""
✨ Generated order input type for table 'MeasurementSession'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input MeasurementSession_Order {
  """
  ✨ Generated from Field `MeasurementSession`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`companyId` of type `UUID!`
  """
  companyId: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`measuredById` of type `UUID!`
  """
  measuredById: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`company` of type `Company!`
  """
  company: Company_Order
  """
  ✨ Generated from Field `MeasurementSession`.`measuredBy` of type `User!`
  """
  measuredBy: User_Order
  """
  ✨ Generated from Field `MeasurementSession`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`duration` of type `Int!`
  """
  duration: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`focusLevel` of type `Float`
  """
  focusLevel: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`overallScore` of type `Int`
  """
  overallScore: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`processedDataUri` of type `String`
  """
  processedDataUri: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`rawDataUri` of type `String`
  """
  rawDataUri: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`reportGenerated` of type `Boolean!`
  """
  reportGenerated: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`sessionDate` of type `Date!`
  """
  sessionDate: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`sessionTime` of type `Timestamp!`
  """
  sessionTime: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`stressLevel` of type `Float`
  """
  stressLevel: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`subjectBirthDate` of type `Date!`
  """
  subjectBirthDate: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`subjectName` of type `String!`
  """
  subjectName: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`subjectPhone` of type `String!`
  """
  subjectPhone: OrderDirection
  """
  ✨ Generated from Field `MeasurementSession`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'MentalHealthReport'. It includes all necessary fields for creating or upserting rows into table.
"""
input MentalHealthReport_Data {
  """
  ✨ Generated from Field `MentalHealthReport`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `MentalHealthReport`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `MentalHealthReport`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `MentalHealthReport`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `MentalHealthReport`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `MentalHealthReport`.`anxietyIndicators` of type `String`
  """
  anxietyIndicators: String
  """
  ✨ `_expr` server value variant of `anxietyIndicators` (✨ Generated from Field `MentalHealthReport`.`anxietyIndicators` of type `String`)
  """
  anxietyIndicators_expr: String_Expr
  """
  ✨ Generated from Field `MentalHealthReport`.`associatedSessionIds` of type `[UUID]`
  """
  associatedSessionIds: [UUID!]
  """
  ✨ `_update` server value variant of `associatedSessionIds` (✨ Generated from Field `MentalHealthReport`.`associatedSessionIds` of type `[UUID]`)
  """
  associatedSessionIds_update: [UUID_ListUpdate!]
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel` of type `Float`
  """
  focusLevel: Float
  """
  ✨ `_expr` server value variant of `focusLevel` (✨ Generated from Field `MentalHealthReport`.`focusLevel` of type `Float`)
  """
  focusLevel_expr: Float_Expr
  """
  ✨ `_update` server value variant of `focusLevel` (✨ Generated from Field `MentalHealthReport`.`focusLevel` of type `Float`)
  """
  focusLevel_update: [Float_Update!]
  """
  ✨ Generated from Field `MentalHealthReport`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `generatedAt` (✨ Generated from Field `MentalHealthReport`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `generatedAt` (✨ Generated from Field `MentalHealthReport`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `generatedAt` (✨ Generated from Field `MentalHealthReport`.`generatedAt` of type `Timestamp!`)
  """
  generatedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore` of type `Int!`
  """
  overallScore: Int
  """
  ✨ `_expr` server value variant of `overallScore` (✨ Generated from Field `MentalHealthReport`.`overallScore` of type `Int!`)
  """
  overallScore_expr: Int_Expr
  """
  ✨ `_update` server value variant of `overallScore` (✨ Generated from Field `MentalHealthReport`.`overallScore` of type `Int!`)
  """
  overallScore_update: [Int_Update!]
  """
  ✨ Generated from Field `MentalHealthReport`.`recommendations` of type `String`
  """
  recommendations: String
  """
  ✨ `_expr` server value variant of `recommendations` (✨ Generated from Field `MentalHealthReport`.`recommendations` of type `String`)
  """
  recommendations_expr: String_Expr
  """
  ✨ Generated from Field `MentalHealthReport`.`reportDate` of type `Date!`
  """
  reportDate: Date
  """
  ✨ `_date` server value variant of `reportDate` (✨ Generated from Field `MentalHealthReport`.`reportDate` of type `Date!`)
  """
  reportDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `reportDate` (✨ Generated from Field `MentalHealthReport`.`reportDate` of type `Date!`)
  """
  reportDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `reportDate` (✨ Generated from Field `MentalHealthReport`.`reportDate` of type `Date!`)
  """
  reportDate_update: [Date_Update!]
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore` of type `Float`
  """
  sleepQualityScore: Float
  """
  ✨ `_expr` server value variant of `sleepQualityScore` (✨ Generated from Field `MentalHealthReport`.`sleepQualityScore` of type `Float`)
  """
  sleepQualityScore_expr: Float_Expr
  """
  ✨ `_update` server value variant of `sleepQualityScore` (✨ Generated from Field `MentalHealthReport`.`sleepQualityScore` of type `Float`)
  """
  sleepQualityScore_update: [Float_Update!]
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel` of type `Float`
  """
  stressLevel: Float
  """
  ✨ `_expr` server value variant of `stressLevel` (✨ Generated from Field `MentalHealthReport`.`stressLevel` of type `Float`)
  """
  stressLevel_expr: Float_Expr
  """
  ✨ `_update` server value variant of `stressLevel` (✨ Generated from Field `MentalHealthReport`.`stressLevel` of type `Float`)
  """
  stressLevel_update: [Float_Update!]
  """
  ✨ Generated from Field `MentalHealthReport`.`summaryText` of type `String`
  """
  summaryText: String
  """
  ✨ `_expr` server value variant of `summaryText` (✨ Generated from Field `MentalHealthReport`.`summaryText` of type `String`)
  """
  summaryText_expr: String_Expr
}
"""
✨ Generated filter input type for table 'MentalHealthReport'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input MentalHealthReport_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [MentalHealthReport_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: MentalHealthReport_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [MentalHealthReport_Filter!]
  """
  ✨ Generated from Field `MentalHealthReport`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`anxietyIndicators` of type `String`
  """
  anxietyIndicators: String_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`associatedSessionIds` of type `[UUID]`
  """
  associatedSessionIds: UUID_ListFilter
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel` of type `Float`
  """
  focusLevel: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore` of type `Int!`
  """
  overallScore: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`recommendations` of type `String`
  """
  recommendations: String_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`reportDate` of type `Date!`
  """
  reportDate: Date_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore` of type `Float`
  """
  sleepQualityScore: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel` of type `Float`
  """
  stressLevel: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`summaryText` of type `String`
  """
  summaryText: String_Filter
}
"""
✨ Generated first-row input type for table 'MentalHealthReport'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input MentalHealthReport_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [MentalHealthReport_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: MentalHealthReport_Filter
}
"""
✨ Generated having input type for table 'MentalHealthReport'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input MentalHealthReport_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [MentalHealthReport_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: MentalHealthReport_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [MentalHealthReport_Having!]
  """
  ✨ Generated from Field `MentalHealthReport`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`anxietyIndicators_count` of type `Int!`
  """
  anxietyIndicators_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel_count` of type `Int!`
  """
  focusLevel_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`generatedAt_count` of type `Int!`
  """
  generatedAt_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore_count` of type `Int!`
  """
  overallScore_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`recommendations_count` of type `Int!`
  """
  recommendations_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`reportDate_count` of type `Int!`
  """
  reportDate_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore_count` of type `Int!`
  """
  sleepQualityScore_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel_count` of type `Int!`
  """
  stressLevel_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`summaryText_count` of type `Int!`
  """
  summaryText_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel_sum` of type `Float`
  """
  focusLevel_sum: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore_sum` of type `Int`
  """
  overallScore_sum: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore_sum` of type `Float`
  """
  sleepQualityScore_sum: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel_sum` of type `Float`
  """
  stressLevel_sum: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel_avg` of type `Float`
  """
  focusLevel_avg: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore_avg` of type `Float`
  """
  overallScore_avg: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore_avg` of type `Float`
  """
  sleepQualityScore_avg: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel_avg` of type `Float`
  """
  stressLevel_avg: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel_min` of type `Float`
  """
  focusLevel_min: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`generatedAt_min` of type `Timestamp`
  """
  generatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore_min` of type `Int`
  """
  overallScore_min: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`reportDate_min` of type `Date`
  """
  reportDate_min: Date_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore_min` of type `Float`
  """
  sleepQualityScore_min: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel_min` of type `Float`
  """
  stressLevel_min: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel_max` of type `Float`
  """
  focusLevel_max: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`generatedAt_max` of type `Timestamp`
  """
  generatedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore_max` of type `Int`
  """
  overallScore_max: Int_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`reportDate_max` of type `Date`
  """
  reportDate_max: Date_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore_max` of type `Float`
  """
  sleepQualityScore_max: Float_Filter
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel_max` of type `Float`
  """
  stressLevel_max: Float_Filter
}
"""
✨ Generated key input type for table 'MentalHealthReport'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input MentalHealthReport_Key {
  """
  ✨ Generated from Field `MentalHealthReport`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `MentalHealthReport`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'MentalHealthReport'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input MentalHealthReport_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: MentalHealthReport_Filter
}
"""
✨ Generated order input type for table 'MentalHealthReport'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input MentalHealthReport_Order {
  """
  ✨ Generated from Field `MentalHealthReport`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `MentalHealthReport`.`anxietyIndicators` of type `String`
  """
  anxietyIndicators: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`focusLevel` of type `Float`
  """
  focusLevel: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`generatedAt` of type `Timestamp!`
  """
  generatedAt: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`overallScore` of type `Int!`
  """
  overallScore: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`recommendations` of type `String`
  """
  recommendations: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`reportDate` of type `Date!`
  """
  reportDate: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`sleepQualityScore` of type `Float`
  """
  sleepQualityScore: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`stressLevel` of type `Float`
  """
  stressLevel: OrderDirection
  """
  ✨ Generated from Field `MentalHealthReport`.`summaryText` of type `String`
  """
  summaryText: OrderDirection
}
"""
✨ Generated data input type for table 'Organization'. It includes all necessary fields for creating or upserting rows into table.
"""
input Organization_Data {
  """
  ✨ Generated from Field `Organization`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Organization`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Organization`.`adminUserId` of type `UUID!`
  """
  adminUserId: UUID
  """
  ✨ `_expr` server value variant of `adminUserId` (✨ Generated from Field `Organization`.`adminUserId` of type `UUID!`)
  """
  adminUserId_expr: UUID_Expr
  """
  ✨ Generated from Field `Organization`.`adminUser` of type `User!`
  """
  adminUser: User_Key
  """
  ✨ Generated from Field `Organization`.`address` of type `String`
  """
  address: String
  """
  ✨ `_expr` server value variant of `address` (✨ Generated from Field `Organization`.`address` of type `String`)
  """
  address_expr: String_Expr
  """
  ✨ Generated from Field `Organization`.`basePrice` of type `Int!`
  """
  basePrice: Int
  """
  ✨ `_expr` server value variant of `basePrice` (✨ Generated from Field `Organization`.`basePrice` of type `Int!`)
  """
  basePrice_expr: Int_Expr
  """
  ✨ `_update` server value variant of `basePrice` (✨ Generated from Field `Organization`.`basePrice` of type `Int!`)
  """
  basePrice_update: [Int_Update!]
  """
  ✨ Generated from Field `Organization`.`businessNumber` of type `String!`
  """
  businessNumber: String
  """
  ✨ `_expr` server value variant of `businessNumber` (✨ Generated from Field `Organization`.`businessNumber` of type `String!`)
  """
  businessNumber_expr: String_Expr
  """
  ✨ Generated from Field `Organization`.`contactEmail` of type `String!`
  """
  contactEmail: String
  """
  ✨ `_expr` server value variant of `contactEmail` (✨ Generated from Field `Organization`.`contactEmail` of type `String!`)
  """
  contactEmail_expr: String_Expr
  """
  ✨ Generated from Field `Organization`.`contactPhone` of type `String`
  """
  contactPhone: String
  """
  ✨ `_expr` server value variant of `contactPhone` (✨ Generated from Field `Organization`.`contactPhone` of type `String`)
  """
  contactPhone_expr: String_Expr
  """
  ✨ Generated from Field `Organization`.`contractEndDate` of type `Date`
  """
  contractEndDate: Date
  """
  ✨ `_date` server value variant of `contractEndDate` (✨ Generated from Field `Organization`.`contractEndDate` of type `Date`)
  """
  contractEndDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `contractEndDate` (✨ Generated from Field `Organization`.`contractEndDate` of type `Date`)
  """
  contractEndDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `contractEndDate` (✨ Generated from Field `Organization`.`contractEndDate` of type `Date`)
  """
  contractEndDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Organization`.`contractStartDate` of type `Date`
  """
  contractStartDate: Date
  """
  ✨ `_date` server value variant of `contractStartDate` (✨ Generated from Field `Organization`.`contractStartDate` of type `Date`)
  """
  contractStartDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `contractStartDate` (✨ Generated from Field `Organization`.`contractStartDate` of type `Date`)
  """
  contractStartDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `contractStartDate` (✨ Generated from Field `Organization`.`contractStartDate` of type `Date`)
  """
  contractStartDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Organization`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Organization`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Organization`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Organization`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Organization`.`creditBalance` of type `Int!`
  """
  creditBalance: Int
  """
  ✨ `_expr` server value variant of `creditBalance` (✨ Generated from Field `Organization`.`creditBalance` of type `Int!`)
  """
  creditBalance_expr: Int_Expr
  """
  ✨ `_update` server value variant of `creditBalance` (✨ Generated from Field `Organization`.`creditBalance` of type `Int!`)
  """
  creditBalance_update: [Int_Update!]
  """
  ✨ Generated from Field `Organization`.`discountedPrice` of type `Int!`
  """
  discountedPrice: Int
  """
  ✨ `_expr` server value variant of `discountedPrice` (✨ Generated from Field `Organization`.`discountedPrice` of type `Int!`)
  """
  discountedPrice_expr: Int_Expr
  """
  ✨ `_update` server value variant of `discountedPrice` (✨ Generated from Field `Organization`.`discountedPrice` of type `Int!`)
  """
  discountedPrice_update: [Int_Update!]
  """
  ✨ Generated from Field `Organization`.`isTrialActive` of type `Boolean!`
  """
  isTrialActive: Boolean
  """
  ✨ `_expr` server value variant of `isTrialActive` (✨ Generated from Field `Organization`.`isTrialActive` of type `Boolean!`)
  """
  isTrialActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `Organization`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Organization`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Organization`.`settings` of type `String`
  """
  settings: String
  """
  ✨ `_expr` server value variant of `settings` (✨ Generated from Field `Organization`.`settings` of type `String`)
  """
  settings_expr: String_Expr
  """
  ✨ Generated from Field `Organization`.`totalMemberCount` of type `Int!`
  """
  totalMemberCount: Int
  """
  ✨ `_expr` server value variant of `totalMemberCount` (✨ Generated from Field `Organization`.`totalMemberCount` of type `Int!`)
  """
  totalMemberCount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `totalMemberCount` (✨ Generated from Field `Organization`.`totalMemberCount` of type `Int!`)
  """
  totalMemberCount_update: [Int_Update!]
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal` of type `Int!`
  """
  trialCreditsTotal: Int
  """
  ✨ `_expr` server value variant of `trialCreditsTotal` (✨ Generated from Field `Organization`.`trialCreditsTotal` of type `Int!`)
  """
  trialCreditsTotal_expr: Int_Expr
  """
  ✨ `_update` server value variant of `trialCreditsTotal` (✨ Generated from Field `Organization`.`trialCreditsTotal` of type `Int!`)
  """
  trialCreditsTotal_update: [Int_Update!]
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed` of type `Int!`
  """
  trialCreditsUsed: Int
  """
  ✨ `_expr` server value variant of `trialCreditsUsed` (✨ Generated from Field `Organization`.`trialCreditsUsed` of type `Int!`)
  """
  trialCreditsUsed_expr: Int_Expr
  """
  ✨ `_update` server value variant of `trialCreditsUsed` (✨ Generated from Field `Organization`.`trialCreditsUsed` of type `Int!`)
  """
  trialCreditsUsed_update: [Int_Update!]
  """
  ✨ Generated from Field `Organization`.`trialEndDate` of type `Date`
  """
  trialEndDate: Date
  """
  ✨ `_date` server value variant of `trialEndDate` (✨ Generated from Field `Organization`.`trialEndDate` of type `Date`)
  """
  trialEndDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `trialEndDate` (✨ Generated from Field `Organization`.`trialEndDate` of type `Date`)
  """
  trialEndDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `trialEndDate` (✨ Generated from Field `Organization`.`trialEndDate` of type `Date`)
  """
  trialEndDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Organization`.`trialStartDate` of type `Date`
  """
  trialStartDate: Date
  """
  ✨ `_date` server value variant of `trialStartDate` (✨ Generated from Field `Organization`.`trialStartDate` of type `Date`)
  """
  trialStartDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `trialStartDate` (✨ Generated from Field `Organization`.`trialStartDate` of type `Date`)
  """
  trialStartDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `trialStartDate` (✨ Generated from Field `Organization`.`trialStartDate` of type `Date`)
  """
  trialStartDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Organization`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Organization`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Organization`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Organization`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Organization'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Organization_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Organization_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Organization_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Organization_Filter!]
  """
  ✨ Generated from Field `Organization`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Organization`.`adminUserId` of type `UUID!`
  """
  adminUserId: UUID_Filter
  """
  ✨ Generated from Field `Organization`.`adminUser` of type `User!`
  """
  adminUser: User_Filter
  """
  ✨ Generated from Field `Organization`.`address` of type `String`
  """
  address: String_Filter
  """
  ✨ Generated from Field `Organization`.`basePrice` of type `Int!`
  """
  basePrice: Int_Filter
  """
  ✨ Generated from Field `Organization`.`businessNumber` of type `String!`
  """
  businessNumber: String_Filter
  """
  ✨ Generated from Field `Organization`.`contactEmail` of type `String!`
  """
  contactEmail: String_Filter
  """
  ✨ Generated from Field `Organization`.`contactPhone` of type `String`
  """
  contactPhone: String_Filter
  """
  ✨ Generated from Field `Organization`.`contractEndDate` of type `Date`
  """
  contractEndDate: Date_Filter
  """
  ✨ Generated from Field `Organization`.`contractStartDate` of type `Date`
  """
  contractStartDate: Date_Filter
  """
  ✨ Generated from Field `Organization`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Organization`.`creditBalance` of type `Int!`
  """
  creditBalance: Int_Filter
  """
  ✨ Generated from Field `Organization`.`discountedPrice` of type `Int!`
  """
  discountedPrice: Int_Filter
  """
  ✨ Generated from Field `Organization`.`isTrialActive` of type `Boolean!`
  """
  isTrialActive: Boolean_Filter
  """
  ✨ Generated from Field `Organization`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Organization`.`settings` of type `String`
  """
  settings: String_Filter
  """
  ✨ Generated from Field `Organization`.`totalMemberCount` of type `Int!`
  """
  totalMemberCount: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal` of type `Int!`
  """
  trialCreditsTotal: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed` of type `Int!`
  """
  trialCreditsUsed: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialEndDate` of type `Date`
  """
  trialEndDate: Date_Filter
  """
  ✨ Generated from Field `Organization`.`trialStartDate` of type `Date`
  """
  trialStartDate: Date_Filter
  """
  ✨ Generated from Field `Organization`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Organization`.`aIReportUsages_on_organization` of type `[AIReportUsage!]!`
  """
  aIReportUsages_on_organization: AIReportUsage_ListFilter
  """
  ✨ Generated from Field `Organization`.`businessMetricss_on_organization` of type `[BusinessMetrics!]!`
  """
  businessMetricss_on_organization: BusinessMetrics_ListFilter
  """
  ✨ Generated from Field `Organization`.`consultationUsages_on_organization` of type `[ConsultationUsage!]!`
  """
  consultationUsages_on_organization: ConsultationUsage_ListFilter
  """
  ✨ Generated from Field `Organization`.`contracts_on_organization` of type `[Contract!]!`
  """
  contracts_on_organization: Contract_ListFilter
  """
  ✨ Generated from Field `Organization`.`creditTransactions_on_organization` of type `[CreditTransaction!]!`
  """
  creditTransactions_on_organization: CreditTransaction_ListFilter
  """
  ✨ Generated from Field `Organization`.`organizationMembers_on_organization` of type `[OrganizationMember!]!`
  """
  organizationMembers_on_organization: OrganizationMember_ListFilter
  """
  ✨ Generated from Field `Organization`.`trialServices_on_organization` of type `[TrialService!]!`
  """
  trialServices_on_organization: TrialService_ListFilter
}
"""
✨ Generated first-row input type for table 'Organization'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Organization_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Organization_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Organization_Filter
}
"""
✨ Generated having input type for table 'Organization'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Organization_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Organization_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Organization_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Organization_Having!]
  """
  ✨ Generated from Field `Organization`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`address_count` of type `Int!`
  """
  address_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`adminUserId_count` of type `Int!`
  """
  adminUserId_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`basePrice_count` of type `Int!`
  """
  basePrice_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`businessNumber_count` of type `Int!`
  """
  businessNumber_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`contactEmail_count` of type `Int!`
  """
  contactEmail_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`contactPhone_count` of type `Int!`
  """
  contactPhone_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`contractEndDate_count` of type `Int!`
  """
  contractEndDate_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`contractStartDate_count` of type `Int!`
  """
  contractStartDate_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`creditBalance_count` of type `Int!`
  """
  creditBalance_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`discountedPrice_count` of type `Int!`
  """
  discountedPrice_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`isTrialActive_count` of type `Int!`
  """
  isTrialActive_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`servicePackage_count` of type `Int!`
  """
  servicePackage_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`settings_count` of type `Int!`
  """
  settings_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`totalMemberCount_count` of type `Int!`
  """
  totalMemberCount_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal_count` of type `Int!`
  """
  trialCreditsTotal_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed_count` of type `Int!`
  """
  trialCreditsUsed_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialEndDate_count` of type `Int!`
  """
  trialEndDate_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialStartDate_count` of type `Int!`
  """
  trialStartDate_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialType_count` of type `Int!`
  """
  trialType_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`volumeTier_count` of type `Int!`
  """
  volumeTier_count: Int_Filter
  """
  ✨ Generated from Field `Organization`.`basePrice_sum` of type `Int`
  """
  basePrice_sum: Int_Filter
  """
  ✨ Generated from Field `Organization`.`creditBalance_sum` of type `Int`
  """
  creditBalance_sum: Int_Filter
  """
  ✨ Generated from Field `Organization`.`discountedPrice_sum` of type `Int`
  """
  discountedPrice_sum: Int_Filter
  """
  ✨ Generated from Field `Organization`.`totalMemberCount_sum` of type `Int`
  """
  totalMemberCount_sum: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal_sum` of type `Int`
  """
  trialCreditsTotal_sum: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed_sum` of type `Int`
  """
  trialCreditsUsed_sum: Int_Filter
  """
  ✨ Generated from Field `Organization`.`basePrice_avg` of type `Float`
  """
  basePrice_avg: Float_Filter
  """
  ✨ Generated from Field `Organization`.`creditBalance_avg` of type `Float`
  """
  creditBalance_avg: Float_Filter
  """
  ✨ Generated from Field `Organization`.`discountedPrice_avg` of type `Float`
  """
  discountedPrice_avg: Float_Filter
  """
  ✨ Generated from Field `Organization`.`totalMemberCount_avg` of type `Float`
  """
  totalMemberCount_avg: Float_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal_avg` of type `Float`
  """
  trialCreditsTotal_avg: Float_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed_avg` of type `Float`
  """
  trialCreditsUsed_avg: Float_Filter
  """
  ✨ Generated from Field `Organization`.`basePrice_min` of type `Int`
  """
  basePrice_min: Int_Filter
  """
  ✨ Generated from Field `Organization`.`contractEndDate_min` of type `Date`
  """
  contractEndDate_min: Date_Filter
  """
  ✨ Generated from Field `Organization`.`contractStartDate_min` of type `Date`
  """
  contractStartDate_min: Date_Filter
  """
  ✨ Generated from Field `Organization`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Organization`.`creditBalance_min` of type `Int`
  """
  creditBalance_min: Int_Filter
  """
  ✨ Generated from Field `Organization`.`discountedPrice_min` of type `Int`
  """
  discountedPrice_min: Int_Filter
  """
  ✨ Generated from Field `Organization`.`totalMemberCount_min` of type `Int`
  """
  totalMemberCount_min: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal_min` of type `Int`
  """
  trialCreditsTotal_min: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed_min` of type `Int`
  """
  trialCreditsUsed_min: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialEndDate_min` of type `Date`
  """
  trialEndDate_min: Date_Filter
  """
  ✨ Generated from Field `Organization`.`trialStartDate_min` of type `Date`
  """
  trialStartDate_min: Date_Filter
  """
  ✨ Generated from Field `Organization`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Organization`.`basePrice_max` of type `Int`
  """
  basePrice_max: Int_Filter
  """
  ✨ Generated from Field `Organization`.`contractEndDate_max` of type `Date`
  """
  contractEndDate_max: Date_Filter
  """
  ✨ Generated from Field `Organization`.`contractStartDate_max` of type `Date`
  """
  contractStartDate_max: Date_Filter
  """
  ✨ Generated from Field `Organization`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Organization`.`creditBalance_max` of type `Int`
  """
  creditBalance_max: Int_Filter
  """
  ✨ Generated from Field `Organization`.`discountedPrice_max` of type `Int`
  """
  discountedPrice_max: Int_Filter
  """
  ✨ Generated from Field `Organization`.`totalMemberCount_max` of type `Int`
  """
  totalMemberCount_max: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal_max` of type `Int`
  """
  trialCreditsTotal_max: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed_max` of type `Int`
  """
  trialCreditsUsed_max: Int_Filter
  """
  ✨ Generated from Field `Organization`.`trialEndDate_max` of type `Date`
  """
  trialEndDate_max: Date_Filter
  """
  ✨ Generated from Field `Organization`.`trialStartDate_max` of type `Date`
  """
  trialStartDate_max: Date_Filter
  """
  ✨ Generated from Field `Organization`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Organization'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Organization_Key {
  """
  ✨ Generated from Field `Organization`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Organization`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Organization'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Organization_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Organization_Filter
}
"""
✨ Generated order input type for table 'Organization'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Organization_Order {
  """
  ✨ Generated from Field `Organization`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Organization`.`adminUserId` of type `UUID!`
  """
  adminUserId: OrderDirection
  """
  ✨ Generated from Field `Organization`.`adminUser` of type `User!`
  """
  adminUser: User_Order
  """
  ✨ Generated from Field `Organization`.`address` of type `String`
  """
  address: OrderDirection
  """
  ✨ Generated from Field `Organization`.`basePrice` of type `Int!`
  """
  basePrice: OrderDirection
  """
  ✨ Generated from Field `Organization`.`businessNumber` of type `String!`
  """
  businessNumber: OrderDirection
  """
  ✨ Generated from Field `Organization`.`contactEmail` of type `String!`
  """
  contactEmail: OrderDirection
  """
  ✨ Generated from Field `Organization`.`contactPhone` of type `String`
  """
  contactPhone: OrderDirection
  """
  ✨ Generated from Field `Organization`.`contractEndDate` of type `Date`
  """
  contractEndDate: OrderDirection
  """
  ✨ Generated from Field `Organization`.`contractStartDate` of type `Date`
  """
  contractStartDate: OrderDirection
  """
  ✨ Generated from Field `Organization`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Organization`.`creditBalance` of type `Int!`
  """
  creditBalance: OrderDirection
  """
  ✨ Generated from Field `Organization`.`discountedPrice` of type `Int!`
  """
  discountedPrice: OrderDirection
  """
  ✨ Generated from Field `Organization`.`isTrialActive` of type `Boolean!`
  """
  isTrialActive: OrderDirection
  """
  ✨ Generated from Field `Organization`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Organization`.`settings` of type `String`
  """
  settings: OrderDirection
  """
  ✨ Generated from Field `Organization`.`totalMemberCount` of type `Int!`
  """
  totalMemberCount: OrderDirection
  """
  ✨ Generated from Field `Organization`.`trialCreditsTotal` of type `Int!`
  """
  trialCreditsTotal: OrderDirection
  """
  ✨ Generated from Field `Organization`.`trialCreditsUsed` of type `Int!`
  """
  trialCreditsUsed: OrderDirection
  """
  ✨ Generated from Field `Organization`.`trialEndDate` of type `Date`
  """
  trialEndDate: OrderDirection
  """
  ✨ Generated from Field `Organization`.`trialStartDate` of type `Date`
  """
  trialStartDate: OrderDirection
  """
  ✨ Generated from Field `Organization`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'OrganizationMember'. It includes all necessary fields for creating or upserting rows into table.
"""
input OrganizationMember_Data {
  """
  ✨ Generated from Field `OrganizationMember`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `OrganizationMember`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `OrganizationMember`.`organizationId` of type `UUID!`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `OrganizationMember`.`organizationId` of type `UUID!`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `OrganizationMember`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `OrganizationMember`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `OrganizationMember`.`organization` of type `Organization!`
  """
  organization: Organization_Key
  """
  ✨ Generated from Field `OrganizationMember`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed` of type `Int!`
  """
  consultationsUsed: Int
  """
  ✨ `_expr` server value variant of `consultationsUsed` (✨ Generated from Field `OrganizationMember`.`consultationsUsed` of type `Int!`)
  """
  consultationsUsed_expr: Int_Expr
  """
  ✨ `_update` server value variant of `consultationsUsed` (✨ Generated from Field `OrganizationMember`.`consultationsUsed` of type `Int!`)
  """
  consultationsUsed_update: [Int_Update!]
  """
  ✨ Generated from Field `OrganizationMember`.`department` of type `String`
  """
  department: String
  """
  ✨ `_expr` server value variant of `department` (✨ Generated from Field `OrganizationMember`.`department` of type `String`)
  """
  department_expr: String_Expr
  """
  ✨ Generated from Field `OrganizationMember`.`employeeId` of type `String!`
  """
  employeeId: String
  """
  ✨ `_expr` server value variant of `employeeId` (✨ Generated from Field `OrganizationMember`.`employeeId` of type `String!`)
  """
  employeeId_expr: String_Expr
  """
  ✨ Generated from Field `OrganizationMember`.`isActive` of type `Boolean!`
  """
  isActive: Boolean
  """
  ✨ `_expr` server value variant of `isActive` (✨ Generated from Field `OrganizationMember`.`isActive` of type `Boolean!`)
  """
  isActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `OrganizationMember`.`joinedAt` of type `Timestamp!`
  """
  joinedAt: Timestamp
  """
  ✨ `_expr` server value variant of `joinedAt` (✨ Generated from Field `OrganizationMember`.`joinedAt` of type `Timestamp!`)
  """
  joinedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `joinedAt` (✨ Generated from Field `OrganizationMember`.`joinedAt` of type `Timestamp!`)
  """
  joinedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `joinedAt` (✨ Generated from Field `OrganizationMember`.`joinedAt` of type `Timestamp!`)
  """
  joinedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `OrganizationMember`.`lastActivityAt` of type `Timestamp`
  """
  lastActivityAt: Timestamp
  """
  ✨ `_expr` server value variant of `lastActivityAt` (✨ Generated from Field `OrganizationMember`.`lastActivityAt` of type `Timestamp`)
  """
  lastActivityAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastActivityAt` (✨ Generated from Field `OrganizationMember`.`lastActivityAt` of type `Timestamp`)
  """
  lastActivityAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastActivityAt` (✨ Generated from Field `OrganizationMember`.`lastActivityAt` of type `Timestamp`)
  """
  lastActivityAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `OrganizationMember`.`position` of type `String`
  """
  position: String
  """
  ✨ `_expr` server value variant of `position` (✨ Generated from Field `OrganizationMember`.`position` of type `String`)
  """
  position_expr: String_Expr
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: Int
  """
  ✨ `_expr` server value variant of `reportsGenerated` (✨ Generated from Field `OrganizationMember`.`reportsGenerated` of type `Int!`)
  """
  reportsGenerated_expr: Int_Expr
  """
  ✨ `_update` server value variant of `reportsGenerated` (✨ Generated from Field `OrganizationMember`.`reportsGenerated` of type `Int!`)
  """
  reportsGenerated_update: [Int_Update!]
}
"""
✨ Generated filter input type for table 'OrganizationMember'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input OrganizationMember_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [OrganizationMember_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: OrganizationMember_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [OrganizationMember_Filter!]
  """
  ✨ Generated from Field `OrganizationMember`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`organizationId` of type `UUID!`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`organization` of type `Organization!`
  """
  organization: Organization_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed` of type `Int!`
  """
  consultationsUsed: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`department` of type `String`
  """
  department: String_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`employeeId` of type `String!`
  """
  employeeId: String_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`isActive` of type `Boolean!`
  """
  isActive: Boolean_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`joinedAt` of type `Timestamp!`
  """
  joinedAt: Timestamp_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`lastActivityAt` of type `Timestamp`
  """
  lastActivityAt: Timestamp_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`position` of type `String`
  """
  position: String_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: Int_Filter
}
"""
✨ Generated first-row input type for table 'OrganizationMember'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input OrganizationMember_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [OrganizationMember_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: OrganizationMember_Filter
}
"""
✨ Generated having input type for table 'OrganizationMember'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input OrganizationMember_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [OrganizationMember_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: OrganizationMember_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [OrganizationMember_Having!]
  """
  ✨ Generated from Field `OrganizationMember`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed_count` of type `Int!`
  """
  consultationsUsed_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`department_count` of type `Int!`
  """
  department_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`employeeId_count` of type `Int!`
  """
  employeeId_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`isActive_count` of type `Int!`
  """
  isActive_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`joinedAt_count` of type `Int!`
  """
  joinedAt_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`lastActivityAt_count` of type `Int!`
  """
  lastActivityAt_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`position_count` of type `Int!`
  """
  position_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated_count` of type `Int!`
  """
  reportsGenerated_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed_sum` of type `Int`
  """
  consultationsUsed_sum: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated_sum` of type `Int`
  """
  reportsGenerated_sum: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed_avg` of type `Float`
  """
  consultationsUsed_avg: Float_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated_avg` of type `Float`
  """
  reportsGenerated_avg: Float_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed_min` of type `Int`
  """
  consultationsUsed_min: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`joinedAt_min` of type `Timestamp`
  """
  joinedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`lastActivityAt_min` of type `Timestamp`
  """
  lastActivityAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated_min` of type `Int`
  """
  reportsGenerated_min: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed_max` of type `Int`
  """
  consultationsUsed_max: Int_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`joinedAt_max` of type `Timestamp`
  """
  joinedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`lastActivityAt_max` of type `Timestamp`
  """
  lastActivityAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated_max` of type `Int`
  """
  reportsGenerated_max: Int_Filter
}
"""
✨ Generated key input type for table 'OrganizationMember'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input OrganizationMember_Key {
  """
  ✨ Generated from Field `OrganizationMember`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `OrganizationMember`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'OrganizationMember'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input OrganizationMember_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: OrganizationMember_Filter
}
"""
✨ Generated order input type for table 'OrganizationMember'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input OrganizationMember_Order {
  """
  ✨ Generated from Field `OrganizationMember`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`organizationId` of type `UUID!`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`organization` of type `Organization!`
  """
  organization: Organization_Order
  """
  ✨ Generated from Field `OrganizationMember`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `OrganizationMember`.`consultationsUsed` of type `Int!`
  """
  consultationsUsed: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`department` of type `String`
  """
  department: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`employeeId` of type `String!`
  """
  employeeId: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`isActive` of type `Boolean!`
  """
  isActive: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`joinedAt` of type `Timestamp!`
  """
  joinedAt: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`lastActivityAt` of type `Timestamp`
  """
  lastActivityAt: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`position` of type `String`
  """
  position: OrderDirection
  """
  ✨ Generated from Field `OrganizationMember`.`reportsGenerated` of type `Int!`
  """
  reportsGenerated: OrderDirection
}
"""
✨ Generated filter input type for table 'OrganizationStatus'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input OrganizationStatus_Filter {
  """
  Match if field is exactly equal to provided value.
  """
  eq: OrganizationStatus
  """
  Match if field is not equal to provided value.
  """
  ne: OrganizationStatus
  """
  When true, match if field `IS NULL`. When false, match if field is `NOT NULL`.
  """
  isNull: Boolean
  """
  Match if field value is among the provided list of values.
  """
  in: [OrganizationStatus!]
  """
  Match if field value is not among the provided list of values.
  """
  nin: [OrganizationStatus!]
  """
  Match if field value is greater than the provided value, based on index ordering of supported enum values.
  """
  gt: OrganizationStatus
  """
  Match if field is greater than or equal to the provided value.
  """
  ge: OrganizationStatus
  """
  Match if field value is less than the provided value, based on index ordering of supported enum values.
  """
  lt: OrganizationStatus
  """
  Match if field is less than or equal to the provided value, based on index ordering of supported enum values.
  """
  le: OrganizationStatus
}
"""
✨ Generated list filter input type for table 'OrganizationStatus'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input OrganizationStatus_ListFilter {
  """
  Match if list field contains the provided value as a member.
  """
  includes: OrganizationStatus
  """
  Match if list field contains all of the provided values as members.
  """
  includesAll: [OrganizationStatus!]
  """
  Match if list field does not contain the provided value as a member.
  """
  excludes: OrganizationStatus
  """
  Match if list field does not contain any of the provided values as members.
  """
  excludesAll: [OrganizationStatus!]
  """
  The desired number of enum values that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: OrganizationStatus_Filter
}
"""
✨ Generated filter input type for table 'ServicePackageType'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ServicePackageType_Filter {
  """
  Match if field is exactly equal to provided value.
  """
  eq: ServicePackageType
  """
  Match if field is not equal to provided value.
  """
  ne: ServicePackageType
  """
  When true, match if field `IS NULL`. When false, match if field is `NOT NULL`.
  """
  isNull: Boolean
  """
  Match if field value is among the provided list of values.
  """
  in: [ServicePackageType!]
  """
  Match if field value is not among the provided list of values.
  """
  nin: [ServicePackageType!]
  """
  Match if field value is greater than the provided value, based on index ordering of supported enum values.
  """
  gt: ServicePackageType
  """
  Match if field is greater than or equal to the provided value.
  """
  ge: ServicePackageType
  """
  Match if field value is less than the provided value, based on index ordering of supported enum values.
  """
  lt: ServicePackageType
  """
  Match if field is less than or equal to the provided value, based on index ordering of supported enum values.
  """
  le: ServicePackageType
}
"""
✨ Generated list filter input type for table 'ServicePackageType'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ServicePackageType_ListFilter {
  """
  Match if list field contains the provided value as a member.
  """
  includes: ServicePackageType
  """
  Match if list field contains all of the provided values as members.
  """
  includesAll: [ServicePackageType!]
  """
  Match if list field does not contain the provided value as a member.
  """
  excludes: ServicePackageType
  """
  Match if list field does not contain any of the provided values as members.
  """
  excludesAll: [ServicePackageType!]
  """
  The desired number of enum values that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ServicePackageType_Filter
}
"""
✨ Generated data input type for table 'TrialService'. It includes all necessary fields for creating or upserting rows into table.
"""
input TrialService_Data {
  """
  ✨ Generated from Field `TrialService`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `TrialService`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `TrialService`.`organizationId` of type `UUID!`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `TrialService`.`organizationId` of type `UUID!`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `TrialService`.`organization` of type `Organization!`
  """
  organization: Organization_Key
  """
  ✨ Generated from Field `TrialService`.`conversionDate` of type `Date`
  """
  conversionDate: Date
  """
  ✨ `_date` server value variant of `conversionDate` (✨ Generated from Field `TrialService`.`conversionDate` of type `Date`)
  """
  conversionDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `conversionDate` (✨ Generated from Field `TrialService`.`conversionDate` of type `Date`)
  """
  conversionDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `conversionDate` (✨ Generated from Field `TrialService`.`conversionDate` of type `Date`)
  """
  conversionDate_update: [Date_Update!]
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount` of type `Int`
  """
  conversionDiscount: Int
  """
  ✨ `_expr` server value variant of `conversionDiscount` (✨ Generated from Field `TrialService`.`conversionDiscount` of type `Int`)
  """
  conversionDiscount_expr: Int_Expr
  """
  ✨ `_update` server value variant of `conversionDiscount` (✨ Generated from Field `TrialService`.`conversionDiscount` of type `Int`)
  """
  conversionDiscount_update: [Int_Update!]
  """
  ✨ Generated from Field `TrialService`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `TrialService`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `TrialService`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `TrialService`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `TrialService`.`creditsUsed` of type `Int!`
  """
  creditsUsed: Int
  """
  ✨ `_expr` server value variant of `creditsUsed` (✨ Generated from Field `TrialService`.`creditsUsed` of type `Int!`)
  """
  creditsUsed_expr: Int_Expr
  """
  ✨ `_update` server value variant of `creditsUsed` (✨ Generated from Field `TrialService`.`creditsUsed` of type `Int!`)
  """
  creditsUsed_update: [Int_Update!]
  """
  ✨ Generated from Field `TrialService`.`endDate` of type `Date!`
  """
  endDate: Date
  """
  ✨ `_date` server value variant of `endDate` (✨ Generated from Field `TrialService`.`endDate` of type `Date!`)
  """
  endDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `endDate` (✨ Generated from Field `TrialService`.`endDate` of type `Date!`)
  """
  endDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `endDate` (✨ Generated from Field `TrialService`.`endDate` of type `Date!`)
  """
  endDate_update: [Date_Update!]
  """
  ✨ Generated from Field `TrialService`.`isActive` of type `Boolean!`
  """
  isActive: Boolean
  """
  ✨ `_expr` server value variant of `isActive` (✨ Generated from Field `TrialService`.`isActive` of type `Boolean!`)
  """
  isActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `TrialService`.`maxCredits` of type `Int!`
  """
  maxCredits: Int
  """
  ✨ `_expr` server value variant of `maxCredits` (✨ Generated from Field `TrialService`.`maxCredits` of type `Int!`)
  """
  maxCredits_expr: Int_Expr
  """
  ✨ `_update` server value variant of `maxCredits` (✨ Generated from Field `TrialService`.`maxCredits` of type `Int!`)
  """
  maxCredits_update: [Int_Update!]
  """
  ✨ Generated from Field `TrialService`.`remainingCredits` of type `Int!`
  """
  remainingCredits: Int
  """
  ✨ `_expr` server value variant of `remainingCredits` (✨ Generated from Field `TrialService`.`remainingCredits` of type `Int!`)
  """
  remainingCredits_expr: Int_Expr
  """
  ✨ `_update` server value variant of `remainingCredits` (✨ Generated from Field `TrialService`.`remainingCredits` of type `Int!`)
  """
  remainingCredits_update: [Int_Update!]
  """
  ✨ Generated from Field `TrialService`.`startDate` of type `Date!`
  """
  startDate: Date
  """
  ✨ `_date` server value variant of `startDate` (✨ Generated from Field `TrialService`.`startDate` of type `Date!`)
  """
  startDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `startDate` (✨ Generated from Field `TrialService`.`startDate` of type `Date!`)
  """
  startDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `startDate` (✨ Generated from Field `TrialService`.`startDate` of type `Date!`)
  """
  startDate_update: [Date_Update!]
  """
  ✨ Generated from Field `TrialService`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `TrialService`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `TrialService`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `TrialService`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `TrialService`.`validityDays` of type `Int!`
  """
  validityDays: Int
  """
  ✨ `_expr` server value variant of `validityDays` (✨ Generated from Field `TrialService`.`validityDays` of type `Int!`)
  """
  validityDays_expr: Int_Expr
  """
  ✨ `_update` server value variant of `validityDays` (✨ Generated from Field `TrialService`.`validityDays` of type `Int!`)
  """
  validityDays_update: [Int_Update!]
}
"""
✨ Generated filter input type for table 'TrialService'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input TrialService_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [TrialService_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: TrialService_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [TrialService_Filter!]
  """
  ✨ Generated from Field `TrialService`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `TrialService`.`organizationId` of type `UUID!`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `TrialService`.`organization` of type `Organization!`
  """
  organization: Organization_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDate` of type `Date`
  """
  conversionDate: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount` of type `Int`
  """
  conversionDiscount: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `TrialService`.`creditsUsed` of type `Int!`
  """
  creditsUsed: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`endDate` of type `Date!`
  """
  endDate: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`isActive` of type `Boolean!`
  """
  isActive: Boolean_Filter
  """
  ✨ Generated from Field `TrialService`.`maxCredits` of type `Int!`
  """
  maxCredits: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`remainingCredits` of type `Int!`
  """
  remainingCredits: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`startDate` of type `Date!`
  """
  startDate: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `TrialService`.`validityDays` of type `Int!`
  """
  validityDays: Int_Filter
}
"""
✨ Generated first-row input type for table 'TrialService'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input TrialService_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [TrialService_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: TrialService_Filter
}
"""
✨ Generated having input type for table 'TrialService'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input TrialService_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [TrialService_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: TrialService_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [TrialService_Having!]
  """
  ✨ Generated from Field `TrialService`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDate_count` of type `Int!`
  """
  conversionDate_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount_count` of type `Int!`
  """
  conversionDiscount_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`creditsUsed_count` of type `Int!`
  """
  creditsUsed_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`endDate_count` of type `Int!`
  """
  endDate_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`isActive_count` of type `Int!`
  """
  isActive_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`maxCredits_count` of type `Int!`
  """
  maxCredits_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`remainingCredits_count` of type `Int!`
  """
  remainingCredits_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`startDate_count` of type `Int!`
  """
  startDate_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`trialType_count` of type `Int!`
  """
  trialType_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`validityDays_count` of type `Int!`
  """
  validityDays_count: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount_sum` of type `Int`
  """
  conversionDiscount_sum: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`creditsUsed_sum` of type `Int`
  """
  creditsUsed_sum: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`maxCredits_sum` of type `Int`
  """
  maxCredits_sum: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`remainingCredits_sum` of type `Int`
  """
  remainingCredits_sum: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`validityDays_sum` of type `Int`
  """
  validityDays_sum: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount_avg` of type `Float`
  """
  conversionDiscount_avg: Float_Filter
  """
  ✨ Generated from Field `TrialService`.`creditsUsed_avg` of type `Float`
  """
  creditsUsed_avg: Float_Filter
  """
  ✨ Generated from Field `TrialService`.`maxCredits_avg` of type `Float`
  """
  maxCredits_avg: Float_Filter
  """
  ✨ Generated from Field `TrialService`.`remainingCredits_avg` of type `Float`
  """
  remainingCredits_avg: Float_Filter
  """
  ✨ Generated from Field `TrialService`.`validityDays_avg` of type `Float`
  """
  validityDays_avg: Float_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDate_min` of type `Date`
  """
  conversionDate_min: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount_min` of type `Int`
  """
  conversionDiscount_min: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `TrialService`.`creditsUsed_min` of type `Int`
  """
  creditsUsed_min: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`endDate_min` of type `Date`
  """
  endDate_min: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`maxCredits_min` of type `Int`
  """
  maxCredits_min: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`remainingCredits_min` of type `Int`
  """
  remainingCredits_min: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`startDate_min` of type `Date`
  """
  startDate_min: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `TrialService`.`validityDays_min` of type `Int`
  """
  validityDays_min: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDate_max` of type `Date`
  """
  conversionDate_max: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount_max` of type `Int`
  """
  conversionDiscount_max: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `TrialService`.`creditsUsed_max` of type `Int`
  """
  creditsUsed_max: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`endDate_max` of type `Date`
  """
  endDate_max: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`maxCredits_max` of type `Int`
  """
  maxCredits_max: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`remainingCredits_max` of type `Int`
  """
  remainingCredits_max: Int_Filter
  """
  ✨ Generated from Field `TrialService`.`startDate_max` of type `Date`
  """
  startDate_max: Date_Filter
  """
  ✨ Generated from Field `TrialService`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `TrialService`.`validityDays_max` of type `Int`
  """
  validityDays_max: Int_Filter
}
"""
✨ Generated key input type for table 'TrialService'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input TrialService_Key {
  """
  ✨ Generated from Field `TrialService`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `TrialService`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'TrialService'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input TrialService_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: TrialService_Filter
}
"""
✨ Generated order input type for table 'TrialService'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input TrialService_Order {
  """
  ✨ Generated from Field `TrialService`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`organizationId` of type `UUID!`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`organization` of type `Organization!`
  """
  organization: Organization_Order
  """
  ✨ Generated from Field `TrialService`.`conversionDate` of type `Date`
  """
  conversionDate: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`conversionDiscount` of type `Int`
  """
  conversionDiscount: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`creditsUsed` of type `Int!`
  """
  creditsUsed: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`endDate` of type `Date!`
  """
  endDate: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`isActive` of type `Boolean!`
  """
  isActive: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`maxCredits` of type `Int!`
  """
  maxCredits: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`remainingCredits` of type `Int!`
  """
  remainingCredits: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`startDate` of type `Date!`
  """
  startDate: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `TrialService`.`validityDays` of type `Int!`
  """
  validityDays: OrderDirection
}
"""
✨ Generated filter input type for table 'TrialType'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input TrialType_Filter {
  """
  Match if field is exactly equal to provided value.
  """
  eq: TrialType
  """
  Match if field is not equal to provided value.
  """
  ne: TrialType
  """
  When true, match if field `IS NULL`. When false, match if field is `NOT NULL`.
  """
  isNull: Boolean
  """
  Match if field value is among the provided list of values.
  """
  in: [TrialType!]
  """
  Match if field value is not among the provided list of values.
  """
  nin: [TrialType!]
  """
  Match if field value is greater than the provided value, based on index ordering of supported enum values.
  """
  gt: TrialType
  """
  Match if field is greater than or equal to the provided value.
  """
  ge: TrialType
  """
  Match if field value is less than the provided value, based on index ordering of supported enum values.
  """
  lt: TrialType
  """
  Match if field is less than or equal to the provided value, based on index ordering of supported enum values.
  """
  le: TrialType
}
"""
✨ Generated list filter input type for table 'TrialType'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input TrialType_ListFilter {
  """
  Match if list field contains the provided value as a member.
  """
  includes: TrialType
  """
  Match if list field contains all of the provided values as members.
  """
  includesAll: [TrialType!]
  """
  Match if list field does not contain the provided value as a member.
  """
  excludes: TrialType
  """
  Match if list field does not contain any of the provided values as members.
  """
  excludesAll: [TrialType!]
  """
  The desired number of enum values that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: TrialType_Filter
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`accessToken` of type `String`
  """
  accessToken: String
  """
  ✨ `_expr` server value variant of `accessToken` (✨ Generated from Field `User`.`accessToken` of type `String`)
  """
  accessToken_expr: String_Expr
  """
  ✨ Generated from Field `User`.`address` of type `String`
  """
  address: String
  """
  ✨ `_expr` server value variant of `address` (✨ Generated from Field `User`.`address` of type `String`)
  """
  address_expr: String_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`department` of type `String`
  """
  department: String
  """
  ✨ `_expr` server value variant of `department` (✨ Generated from Field `User`.`department` of type `String`)
  """
  department_expr: String_Expr
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`employeeId` of type `String`
  """
  employeeId: String
  """
  ✨ `_expr` server value variant of `employeeId` (✨ Generated from Field `User`.`employeeId` of type `String`)
  """
  employeeId_expr: String_Expr
  """
  ✨ Generated from Field `User`.`isActive` of type `Boolean!`
  """
  isActive: Boolean
  """
  ✨ `_expr` server value variant of `isActive` (✨ Generated from Field `User`.`isActive` of type `Boolean!`)
  """
  isActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `User`.`lastLoginAt` of type `Timestamp`
  """
  lastLoginAt: Timestamp
  """
  ✨ `_expr` server value variant of `lastLoginAt` (✨ Generated from Field `User`.`lastLoginAt` of type `Timestamp`)
  """
  lastLoginAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastLoginAt` (✨ Generated from Field `User`.`lastLoginAt` of type `Timestamp`)
  """
  lastLoginAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastLoginAt` (✨ Generated from Field `User`.`lastLoginAt` of type `Timestamp`)
  """
  lastLoginAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`organizationCode` of type `String`
  """
  organizationCode: String
  """
  ✨ `_expr` server value variant of `organizationCode` (✨ Generated from Field `User`.`organizationCode` of type `String`)
  """
  organizationCode_expr: String_Expr
  """
  ✨ Generated from Field `User`.`organizationId` of type `UUID`
  """
  organizationId: UUID
  """
  ✨ `_expr` server value variant of `organizationId` (✨ Generated from Field `User`.`organizationId` of type `UUID`)
  """
  organizationId_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`permissions` of type `String`
  """
  permissions: String
  """
  ✨ `_expr` server value variant of `permissions` (✨ Generated from Field `User`.`permissions` of type `String`)
  """
  permissions_expr: String_Expr
  """
  ✨ Generated from Field `User`.`personalCreditBalance` of type `Int`
  """
  personalCreditBalance: Int
  """
  ✨ `_expr` server value variant of `personalCreditBalance` (✨ Generated from Field `User`.`personalCreditBalance` of type `Int`)
  """
  personalCreditBalance_expr: Int_Expr
  """
  ✨ `_update` server value variant of `personalCreditBalance` (✨ Generated from Field `User`.`personalCreditBalance` of type `Int`)
  """
  personalCreditBalance_update: [Int_Update!]
  """
  ✨ Generated from Field `User`.`phone` of type `String`
  """
  phone: String
  """
  ✨ `_expr` server value variant of `phone` (✨ Generated from Field `User`.`phone` of type `String`)
  """
  phone_expr: String_Expr
  """
  ✨ Generated from Field `User`.`position` of type `String`
  """
  position: String
  """
  ✨ `_expr` server value variant of `position` (✨ Generated from Field `User`.`position` of type `String`)
  """
  position_expr: String_Expr
  """
  ✨ Generated from Field `User`.`profileImage` of type `String`
  """
  profileImage: String
  """
  ✨ `_expr` server value variant of `profileImage` (✨ Generated from Field `User`.`profileImage` of type `String`)
  """
  profileImage_expr: String_Expr
  """
  ✨ Generated from Field `User`.`tokenExpiresAt` of type `Timestamp`
  """
  tokenExpiresAt: Timestamp
  """
  ✨ `_expr` server value variant of `tokenExpiresAt` (✨ Generated from Field `User`.`tokenExpiresAt` of type `Timestamp`)
  """
  tokenExpiresAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `tokenExpiresAt` (✨ Generated from Field `User`.`tokenExpiresAt` of type `Timestamp`)
  """
  tokenExpiresAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `tokenExpiresAt` (✨ Generated from Field `User`.`tokenExpiresAt` of type `Timestamp`)
  """
  tokenExpiresAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`accessToken` of type `String`
  """
  accessToken: String_Filter
  """
  ✨ Generated from Field `User`.`address` of type `String`
  """
  address: String_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`department` of type `String`
  """
  department: String_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`employeeId` of type `String`
  """
  employeeId: String_Filter
  """
  ✨ Generated from Field `User`.`isActive` of type `Boolean!`
  """
  isActive: Boolean_Filter
  """
  ✨ Generated from Field `User`.`lastLoginAt` of type `Timestamp`
  """
  lastLoginAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`organizationCode` of type `String`
  """
  organizationCode: String_Filter
  """
  ✨ Generated from Field `User`.`organizationId` of type `UUID`
  """
  organizationId: UUID_Filter
  """
  ✨ Generated from Field `User`.`permissions` of type `String`
  """
  permissions: String_Filter
  """
  ✨ Generated from Field `User`.`personalCreditBalance` of type `Int`
  """
  personalCreditBalance: Int_Filter
  """
  ✨ Generated from Field `User`.`phone` of type `String`
  """
  phone: String_Filter
  """
  ✨ Generated from Field `User`.`position` of type `String`
  """
  position: String_Filter
  """
  ✨ Generated from Field `User`.`profileImage` of type `String`
  """
  profileImage: String_Filter
  """
  ✨ Generated from Field `User`.`tokenExpiresAt` of type `Timestamp`
  """
  tokenExpiresAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`aIReportUsages_on_user` of type `[AIReportUsage!]!`
  """
  aIReportUsages_on_user: AIReportUsage_ListFilter
  """
  ✨ Generated from Field `User`.`bioSignalSessions_on_user` of type `[BioSignalSession!]!`
  """
  bioSignalSessions_on_user: BioSignalSession_ListFilter
  """
  ✨ Generated from Field `User`.`companyMembers_on_user` of type `[CompanyMember!]!`
  """
  companyMembers_on_user: CompanyMember_ListFilter
  """
  ✨ Generated from Field `User`.`consultationUsages_on_user` of type `[ConsultationUsage!]!`
  """
  consultationUsages_on_user: ConsultationUsage_ListFilter
  """
  ✨ Generated from Field `User`.`contracts_on_signedBy` of type `[Contract!]!`
  """
  contracts_on_signedBy: Contract_ListFilter
  """
  ✨ Generated from Field `User`.`creditTransactions_on_createdBy` of type `[CreditTransaction!]!`
  """
  creditTransactions_on_createdBy: CreditTransaction_ListFilter
  """
  ✨ Generated from Field `User`.`creditTransactions_on_user` of type `[CreditTransaction!]!`
  """
  creditTransactions_on_user: CreditTransaction_ListFilter
  """
  ✨ Generated from Field `User`.`devices_on_user` of type `[Device!]!`
  """
  devices_on_user: Device_ListFilter
  """
  ✨ Generated from Field `User`.`manualMoodLogs_on_user` of type `[ManualMoodLog!]!`
  """
  manualMoodLogs_on_user: ManualMoodLog_ListFilter
  """
  ✨ Generated from Field `User`.`measurementSessions_on_measuredBy` of type `[MeasurementSession!]!`
  """
  measurementSessions_on_measuredBy: MeasurementSession_ListFilter
  """
  ✨ Generated from Field `User`.`mentalHealthReports_on_user` of type `[MentalHealthReport!]!`
  """
  mentalHealthReports_on_user: MentalHealthReport_ListFilter
  """
  ✨ Generated from Field `User`.`organizations_on_adminUser` of type `[Organization!]!`
  """
  organizations_on_adminUser: Organization_ListFilter
  """
  ✨ Generated from Field `User`.`organizationMembers_on_user` of type `[OrganizationMember!]!`
  """
  organizationMembers_on_user: OrganizationMember_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`accessToken_count` of type `Int!`
  """
  accessToken_count: Int_Filter
  """
  ✨ Generated from Field `User`.`address_count` of type `Int!`
  """
  address_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`department_count` of type `Int!`
  """
  department_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`employeeId_count` of type `Int!`
  """
  employeeId_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`isActive_count` of type `Int!`
  """
  isActive_count: Int_Filter
  """
  ✨ Generated from Field `User`.`lastLoginAt_count` of type `Int!`
  """
  lastLoginAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`organizationCode_count` of type `Int!`
  """
  organizationCode_count: Int_Filter
  """
  ✨ Generated from Field `User`.`organizationId_count` of type `Int!`
  """
  organizationId_count: Int_Filter
  """
  ✨ Generated from Field `User`.`permissions_count` of type `Int!`
  """
  permissions_count: Int_Filter
  """
  ✨ Generated from Field `User`.`personalCreditBalance_count` of type `Int!`
  """
  personalCreditBalance_count: Int_Filter
  """
  ✨ Generated from Field `User`.`phone_count` of type `Int!`
  """
  phone_count: Int_Filter
  """
  ✨ Generated from Field `User`.`position_count` of type `Int!`
  """
  position_count: Int_Filter
  """
  ✨ Generated from Field `User`.`profileImage_count` of type `Int!`
  """
  profileImage_count: Int_Filter
  """
  ✨ Generated from Field `User`.`tokenExpiresAt_count` of type `Int!`
  """
  tokenExpiresAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`userType_count` of type `Int!`
  """
  userType_count: Int_Filter
  """
  ✨ Generated from Field `User`.`personalCreditBalance_sum` of type `Int`
  """
  personalCreditBalance_sum: Int_Filter
  """
  ✨ Generated from Field `User`.`personalCreditBalance_avg` of type `Float`
  """
  personalCreditBalance_avg: Float_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastLoginAt_min` of type `Timestamp`
  """
  lastLoginAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`personalCreditBalance_min` of type `Int`
  """
  personalCreditBalance_min: Int_Filter
  """
  ✨ Generated from Field `User`.`tokenExpiresAt_min` of type `Timestamp`
  """
  tokenExpiresAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastLoginAt_max` of type `Timestamp`
  """
  lastLoginAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`personalCreditBalance_max` of type `Int`
  """
  personalCreditBalance_max: Int_Filter
  """
  ✨ Generated from Field `User`.`tokenExpiresAt_max` of type `Timestamp`
  """
  tokenExpiresAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`accessToken` of type `String`
  """
  accessToken: OrderDirection
  """
  ✨ Generated from Field `User`.`address` of type `String`
  """
  address: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`department` of type `String`
  """
  department: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`employeeId` of type `String`
  """
  employeeId: OrderDirection
  """
  ✨ Generated from Field `User`.`isActive` of type `Boolean!`
  """
  isActive: OrderDirection
  """
  ✨ Generated from Field `User`.`lastLoginAt` of type `Timestamp`
  """
  lastLoginAt: OrderDirection
  """
  ✨ Generated from Field `User`.`organizationCode` of type `String`
  """
  organizationCode: OrderDirection
  """
  ✨ Generated from Field `User`.`organizationId` of type `UUID`
  """
  organizationId: OrderDirection
  """
  ✨ Generated from Field `User`.`permissions` of type `String`
  """
  permissions: OrderDirection
  """
  ✨ Generated from Field `User`.`personalCreditBalance` of type `Int`
  """
  personalCreditBalance: OrderDirection
  """
  ✨ Generated from Field `User`.`phone` of type `String`
  """
  phone: OrderDirection
  """
  ✨ Generated from Field `User`.`position` of type `String`
  """
  position: OrderDirection
  """
  ✨ Generated from Field `User`.`profileImage` of type `String`
  """
  profileImage: OrderDirection
  """
  ✨ Generated from Field `User`.`tokenExpiresAt` of type `Timestamp`
  """
  tokenExpiresAt: OrderDirection
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Timestamp`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated filter input type for table 'UserType'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input UserType_Filter {
  """
  Match if field is exactly equal to provided value.
  """
  eq: UserType
  """
  Match if field is not equal to provided value.
  """
  ne: UserType
  """
  When true, match if field `IS NULL`. When false, match if field is `NOT NULL`.
  """
  isNull: Boolean
  """
  Match if field value is among the provided list of values.
  """
  in: [UserType!]
  """
  Match if field value is not among the provided list of values.
  """
  nin: [UserType!]
  """
  Match if field value is greater than the provided value, based on index ordering of supported enum values.
  """
  gt: UserType
  """
  Match if field is greater than or equal to the provided value.
  """
  ge: UserType
  """
  Match if field value is less than the provided value, based on index ordering of supported enum values.
  """
  lt: UserType
  """
  Match if field is less than or equal to the provided value, based on index ordering of supported enum values.
  """
  le: UserType
}
"""
✨ Generated list filter input type for table 'UserType'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input UserType_ListFilter {
  """
  Match if list field contains the provided value as a member.
  """
  includes: UserType
  """
  Match if list field contains all of the provided values as members.
  """
  includesAll: [UserType!]
  """
  Match if list field does not contain the provided value as a member.
  """
  excludes: UserType
  """
  Match if list field does not contain any of the provided values as members.
  """
  excludesAll: [UserType!]
  """
  The desired number of enum values that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: UserType_Filter
}
"""
✨ Generated filter input type for table 'VolumeDiscountTier'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input VolumeDiscountTier_Filter {
  """
  Match if field is exactly equal to provided value.
  """
  eq: VolumeDiscountTier
  """
  Match if field is not equal to provided value.
  """
  ne: VolumeDiscountTier
  """
  When true, match if field `IS NULL`. When false, match if field is `NOT NULL`.
  """
  isNull: Boolean
  """
  Match if field value is among the provided list of values.
  """
  in: [VolumeDiscountTier!]
  """
  Match if field value is not among the provided list of values.
  """
  nin: [VolumeDiscountTier!]
  """
  Match if field value is greater than the provided value, based on index ordering of supported enum values.
  """
  gt: VolumeDiscountTier
  """
  Match if field is greater than or equal to the provided value.
  """
  ge: VolumeDiscountTier
  """
  Match if field value is less than the provided value, based on index ordering of supported enum values.
  """
  lt: VolumeDiscountTier
  """
  Match if field is less than or equal to the provided value, based on index ordering of supported enum values.
  """
  le: VolumeDiscountTier
}
"""
✨ Generated list filter input type for table 'VolumeDiscountTier'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input VolumeDiscountTier_ListFilter {
  """
  Match if list field contains the provided value as a member.
  """
  includes: VolumeDiscountTier
  """
  Match if list field contains all of the provided values as members.
  """
  includesAll: [VolumeDiscountTier!]
  """
  Match if list field does not contain the provided value as a member.
  """
  excludes: VolumeDiscountTier
  """
  Match if list field does not contain any of the provided values as members.
  """
  excludesAll: [VolumeDiscountTier!]
  """
  The desired number of enum values that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: VolumeDiscountTier_Filter
}
