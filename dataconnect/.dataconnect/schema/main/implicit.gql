extend type AIReportUsage {
  """
  ✨ Implicit foreign key field based on `AIReportUsage`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID @fdc_generated(from: "AIReportUsage.organization", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `AIReportUsage`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "AIReportUsage.user", purpose: IMPLICIT_REF_FIELD)
}
extend type BioSignalSession {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "BioSignalSession", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `BioSignalSession`.`device`. It must match the value of `Device`.`id`. See `@ref` for how to customize it.
  """
  deviceId: UUID! @fdc_generated(from: "BioSignalSession.device", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `BioSignalSession`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "BioSignalSession.user", purpose: IMPLICIT_REF_FIELD)
}
extend type BusinessMetrics {
  """
  ✨ Implicit foreign key field based on `BusinessMetrics`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID! @fdc_generated(from: "BusinessMetrics.organization", purpose: IMPLICIT_REF_FIELD)
}
extend type CompanyMember {
  """
  ✨ Implicit foreign key field based on `CompanyMember`.`company`. It must match the value of `Company`.`id`. See `@ref` for how to customize it.
  """
  companyId: UUID! @fdc_generated(from: "CompanyMember.company", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `CompanyMember`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "CompanyMember.user", purpose: IMPLICIT_REF_FIELD)
}
extend type ConsentRecord {
  """
  ✨ Implicit foreign key field based on `ConsentRecord`.`company`. It must match the value of `Company`.`id`. See `@ref` for how to customize it.
  """
  companyId: UUID! @fdc_generated(from: "ConsentRecord.company", purpose: IMPLICIT_REF_FIELD)
}
extend type ConsultationUsage {
  """
  ✨ Implicit foreign key field based on `ConsultationUsage`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID @fdc_generated(from: "ConsultationUsage.organization", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `ConsultationUsage`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "ConsultationUsage.user", purpose: IMPLICIT_REF_FIELD)
}
extend type Contract {
  """
  ✨ Implicit foreign key field based on `Contract`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID! @fdc_generated(from: "Contract.organization", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Contract`.`signedBy`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  signedById: UUID! @fdc_generated(from: "Contract.signedBy", purpose: IMPLICIT_REF_FIELD)
}
extend type CreditTransaction {
  """
  ✨ Implicit foreign key field based on `CreditTransaction`.`company`. It must match the value of `Company`.`id`. See `@ref` for how to customize it.
  """
  companyId: UUID @fdc_generated(from: "CreditTransaction.company", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `CreditTransaction`.`createdBy`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  createdById: UUID! @fdc_generated(from: "CreditTransaction.createdBy", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `CreditTransaction`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID @fdc_generated(from: "CreditTransaction.organization", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `CreditTransaction`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID @fdc_generated(from: "CreditTransaction.user", purpose: IMPLICIT_REF_FIELD)
}
extend type Device {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Device", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Device`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "Device.user", purpose: IMPLICIT_REF_FIELD)
}
extend type ManualMoodLog {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "ManualMoodLog", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `ManualMoodLog`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "ManualMoodLog.user", purpose: IMPLICIT_REF_FIELD)
}
extend type MeasurementSession {
  """
  ✨ Implicit foreign key field based on `MeasurementSession`.`company`. It must match the value of `Company`.`id`. See `@ref` for how to customize it.
  """
  companyId: UUID! @fdc_generated(from: "MeasurementSession.company", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `MeasurementSession`.`measuredBy`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  measuredById: UUID! @fdc_generated(from: "MeasurementSession.measuredBy", purpose: IMPLICIT_REF_FIELD)
}
extend type MentalHealthReport {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "MentalHealthReport", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `MentalHealthReport`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "MentalHealthReport.user", purpose: IMPLICIT_REF_FIELD)
}
extend type Organization {
  """
  ✨ Implicit foreign key field based on `Organization`.`adminUser`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  adminUserId: UUID! @fdc_generated(from: "Organization.adminUser", purpose: IMPLICIT_REF_FIELD)
}
extend type OrganizationMember {
  """
  ✨ Implicit foreign key field based on `OrganizationMember`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID! @fdc_generated(from: "OrganizationMember.organization", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `OrganizationMember`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "OrganizationMember.user", purpose: IMPLICIT_REF_FIELD)
}
extend type TrialService {
  """
  ✨ Implicit foreign key field based on `TrialService`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID! @fdc_generated(from: "TrialService.organization", purpose: IMPLICIT_REF_FIELD)
}
extend type User {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "User", purpose: IMPLICIT_KEY_FIELD)
}
